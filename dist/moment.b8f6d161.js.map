{"version":3,"sources":["moment.js"],"names":["global","factory","exports","module","define","amd","moment","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","isUndefined","isNumber","isDate","Date","map","arr","fn","res","i","length","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","args","arg","key","slice","join","Error","stack","deprecations","keys","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","makeFormatFunction","array","match","replace","mom","output","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","getSetYear","indexOf","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","modMonth","x","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","localWeekday","resYear","resDayOfYear","dayOfYear","weekOfYear","weekOffset","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minPieces","minp","shortp","longp","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","kFormat","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","getSetHour","globalLocale","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","require","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","chooseLocale","names","j","next","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","currentDateArray","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","_nextDay","createDate","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","result","parsedArray","checkWeekday","weekdayStr","parsedInput","calculateOffset","obsOffset","militaryOffset","numOffset","hm","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","hour","isPm","meridiemHour","prepareConfig","preparse","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromInput","configFromString","createFromInputFallback","configFromObject","minute","second","millisecond","isUTC","createFromConfig","isObjectEmpty","getOwnPropertyNames","k","add","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","isDurationValid","unitHasDecimal","parseFloat","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","momentsDifference","base","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","dur","tmp","addSubtract","isAdding","invalid","createInvalid$1","subtract","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","calendar$1","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","stringGet","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","isValid$2","parsingFlags","stringSet","prioritized","getPrioritizedUnits","unitsObj","u","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","getIsLeapYear","getSetWeekYear","getSetISOWeekYear","getSetQuarter","getDaysInMonth","getSetWeek","isoWeeks","getSetISOWeek","getWeeksInYear","weekInfo","isoWeeksInYear","getISOWeeksInYear","getSetDayOfWeek","parseWeekday","getSetLocaleDayOfWeek","getSetISODayOfWeek","parseIsoWeekday","getSetDayOfYear","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","setOffsetToUTC","setOffsetToLocal","parseZone","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDST","isDaylightSavingTime","isUtcOffset","zoneAbbr","getZoneAbbr","zoneName","getZoneName","dates","getSetZone","isDSTShifted","isDaylightSavingTimeShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","localeMonths","isFormat","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParseExact","handleStrictParse","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeWeek","firstDayOfYear","localeFirstDayOfYear","firstDayOfWeek","localeFirstDayOfWeek","localeWeekdays","_weekdays","localeWeekdaysMin","_weekdaysMin","localeWeekdaysShort","_weekdaysShort","localeWeekdaysParse","weekdayName","_weekdaysParseExact","handleStrictParse$1","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","localeIsPM","charAt","localeMeridiem","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","isValid$1","add$1","subtract$1","valueOf$1","bubble","monthsFromDays","clone$1","get$2","withSuffix","relativeTime$1","posNegDuration","substituteTimeAgo","toIsoString","version","createUnix","listMonths","listWeekdays","createInZone","listMonthsShort","listWeekdaysMin","updateLocale","tmpLocale","listLocales","listWeekdaysShort","relativeTimeRounding","getSetRelativeTimeRounding","roundingFunction","relativeTimeThreshold","getSetRelativeTimeThreshold","threshold","limit","getCalendarFormat","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","weekdaysParseExact","symbolMap","pluralForm","plurals","pluralize","f","str","months$1","symbolMap$1","numberMap","symbolMap$2","numberMap$1","pluralForm$1","plurals$1","pluralize$1","months$2","suffixes","relativeTimeWithPlural","num","forms","standalone","lastDigit","last2Digits","symbolMap$3","numberMap$2","symbolMap$4","numberMap$3","relativeTimeWithMutation","mutation","text","softMutation","mutationTable","substring","translate","specialMutationForYears","lastNumber","monthsParseExact","ll","lll","llll","months$3","monthsRegex$1","plural$1","translate$1","processRelativeTime","processRelativeTime$1","processRelativeTime$2","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","months$4","monthsNominativeEl","monthsGenitiveEl","momentToFormat","_monthsGenitiveEl","_monthsNominativeEl","calendarEl","_calendarEl","monthsShortDot","monthsShort$1","monthsParse$1","monthsRegex$2","monthsShortDot$1","monthsShort$2","monthsParse$2","monthsRegex$3","monthsShortDot$2","monthsShort$3","monthsParse$3","monthsRegex$4","processRelativeTime$3","symbolMap$5","numberMap$4","numbersPast","numbersFuture","translate$2","verbalNumber","monthsShortWithDots","monthsShortWithoutDots","processRelativeTime$4","symbolMap$6","numberMap$5","symbolMap$7","numberMap$6","translate$3","weekEndings","translate$4","plural$2","translate$5","suffixes$1","symbolMap$8","numberMap$7","symbolMap$9","numberMap$8","isUpper","symbolMap$a","numberMap$9","months$7","suffixes$2","processRelativeTime$5","eifelerRegelAppliesToNumber","processFutureTime","processPastTime","translateSingular","special","translate$6","translateSeconds","units$1","format$1","relativeTimeWithPlural$1","relativeTimeWithSingular","relativeSeconds","translator","words","correctGrammaticalCase","wordKey","translate$7","lastWeekDays","symbolMap$b","numberMap$a","relativeTimeMr","symbolMap$c","numberMap$b","symbolMap$d","numberMap$c","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$4","monthsRegex$5","monthsShortWithDots$2","monthsShortWithoutDots$2","monthsParse$5","monthsRegex$6","symbolMap$e","numberMap$d","monthsNominative","monthsSubjective","plural$3","translate$8","relativeTimeWithPlural$2","relativeTimeWithPlural$3","monthsParse$6","months$8","days$1","months$9","monthsShort$6","plural$5","translate$9","processRelativeTime$6","translator$1","translator$2","symbolMap$f","numberMap$e","suffixes$3","numbersNouns","translate$a","numberNoun","numberAsNoun","hundred","ten","one","word","translateFuture","translatePast","suffixes$4","processRelativeTime$7","relativeTimeWithPlural$4","processHoursFunction","weekdaysCaseReplace","months$a","days$2"],"mappings":";;;AAAC,IAAA,EAAA,EAAA,UAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,IAAC,SAAUA,EAAQC,GACG,YAAZC,oBAAAA,QAAAA,YAAAA,EAAAA,WAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,GAAyBA,EAAOC,IAAMD,EAAOH,GACpDD,EAAOM,OAASL,IAHlB,CAIA,KAAO,WAAc,aAGfM,IAAAA,EA6GAC,EA3GKC,SAAAA,IACEF,OAAAA,EAAaG,MAAM,KAAMC,WAS3BC,SAAAA,EAAQC,GACNA,OAAAA,aAAiBC,OAAmD,mBAA1CC,OAAOC,UAAUC,SAASC,KAAKL,GAG3DM,SAAAA,EAASN,GAGPA,OAAS,MAATA,GAA2D,oBAA1CE,OAAOC,UAAUC,SAASC,KAAKL,GAiBlDO,SAAAA,EAAYP,GACVA,YAAU,IAAVA,EAGFQ,SAAAA,EAASR,GACP,MAAiB,iBAAVA,GAAgE,oBAA1CE,OAAOC,UAAUC,SAASC,KAAKL,GAG9DS,SAAAA,EAAOT,GACLA,OAAAA,aAAiBU,MAAkD,kBAA1CR,OAAOC,UAAUC,SAASC,KAAKL,GAG1DW,SAAAA,EAAIC,EAAKC,GACVC,IAAUC,EAAVD,EAAM,GACLC,IAAAA,EAAI,EAAGA,EAAIH,EAAII,SAAUD,EAC1BD,EAAIG,KAAKJ,EAAGD,EAAIG,GAAIA,IAEjBD,OAAAA,EAGFI,SAAAA,EAAWC,EAAGC,GACZlB,OAAAA,OAAOC,UAAUkB,eAAehB,KAAKc,EAAGC,GAG1CE,SAAAA,EAAOH,EAAGC,GACV,IAAA,IAAIL,KAAKK,EACNF,EAAWE,EAAGL,KACdI,EAAEJ,GAAKK,EAAEL,IAYVI,OARHD,EAAWE,EAAG,cACdD,EAAEf,SAAWgB,EAAEhB,UAGfc,EAAWE,EAAG,aACdD,EAAEI,QAAUH,EAAEG,SAGXJ,EAGFK,SAAAA,EAAWxB,EAAOyB,EAAQC,EAAQC,GAChCC,OAAAA,GAAiB5B,EAAOyB,EAAQC,EAAQC,GAAQ,GAAME,MAuBxDC,SAAAA,EAAgBC,GAIdA,OAHM,MAATA,EAAEC,MACFD,EAAEC,IApBC,CACHC,OAAkB,EAClBC,aAAkB,GAClBC,YAAkB,GAClBC,UAAmB,EACnBC,cAAkB,EAClBC,WAAkB,EAClBC,aAAkB,KAClBC,eAAkB,EAClBC,iBAAkB,EAClBC,KAAkB,EAClBC,gBAAkB,GAClBC,SAAkB,KAClBC,SAAkB,EAClBC,iBAAkB,IAQff,EAAEC,IAqBJe,SAAAA,EAAQhB,GACTA,GAAc,MAAdA,EAAEiB,SAAkB,CAChBC,IAAAA,EAAQnB,EAAgBC,GACxBmB,EAAcvD,EAAKU,KAAK4C,EAAMN,gBAAiB,SAAU5B,GAClDA,OAAK,MAALA,IAEPoC,GAAcC,MAAMrB,EAAEsB,GAAGC,YACzBL,EAAMb,SAAW,IAChBa,EAAMhB,QACNgB,EAAMV,eACNU,EAAMM,iBACNN,EAAMH,kBACNG,EAAMX,YACNW,EAAMT,gBACNS,EAAMR,mBACLQ,EAAML,UAAaK,EAAML,UAAYM,GASvChD,GAPA6B,EAAEyB,UACFL,EAAaA,GACe,IAAxBF,EAAMZ,eACwB,IAA9BY,EAAMf,aAAalB,aACDyC,IAAlBR,EAAMS,SAGS,MAAnBxD,OAAOyD,UAAqBzD,OAAOyD,SAAS5B,GAIrCoB,OAAAA,EAHPpB,EAAEiB,SAAWG,EAMdpB,OAAAA,EAAEiB,SAGJY,SAAAA,EAAeX,GAChBlB,IAAAA,EAAIP,EAAUqC,KAQX9B,OAPM,MAATkB,EACA3B,EAAOQ,EAAgBC,GAAIkB,GAG3BnB,EAAgBC,GAAGU,iBAAkB,EAGlCV,EA3DPpC,EADAM,MAAME,UAAUR,KACTM,MAAME,UAAUR,KAEhB,SAAUmE,GAIR,IAHDC,IAAAA,EAAI7D,OAAO,MACX8D,EAAMD,EAAE/C,SAAW,EAEdD,EAAI,EAAGA,EAAIiD,EAAKjD,IACjBA,GAAAA,KAAKgD,GAAKD,EAAIzD,KAAK,KAAM0D,EAAEhD,GAAIA,EAAGgD,GAC3B,OAAA,EAIR,OAAA,GAoDXE,IAAAA,EAAmBrE,EAAMqE,iBAAmB,GAEvCC,SAAAA,EAAWC,EAAIC,GAChBrD,IAAAA,EAAGsD,EAAMC,EAiCTL,GA/BC1D,EAAY6D,EAAKG,oBAClBJ,EAAGI,iBAAmBH,EAAKG,kBAE1BhE,EAAY6D,EAAKI,MAClBL,EAAGK,GAAKJ,EAAKI,IAEZjE,EAAY6D,EAAKK,MAClBN,EAAGM,GAAKL,EAAKK,IAEZlE,EAAY6D,EAAKM,MAClBP,EAAGO,GAAKN,EAAKM,IAEZnE,EAAY6D,EAAKZ,WAClBW,EAAGX,QAAUY,EAAKZ,SAEjBjD,EAAY6D,EAAKO,QAClBR,EAAGQ,KAAOP,EAAKO,MAEdpE,EAAY6D,EAAKQ,UAClBT,EAAGS,OAASR,EAAKQ,QAEhBrE,EAAY6D,EAAKS,WAClBV,EAAGU,QAAUT,EAAKS,SAEjBtE,EAAY6D,EAAKpC,OAClBmC,EAAGnC,IAAMF,EAAgBsC,IAExB7D,EAAY6D,EAAKU,WAClBX,EAAGW,QAAUV,EAAKU,SAGlBb,EAAiBjD,OAAS,EACrBD,IAAAA,EAAI,EAAGA,EAAIkD,EAAiBjD,OAAQD,IAGhCR,EADL+D,EAAMF,EADNC,EAAOJ,EAAiBlD,OAGpBoD,EAAGE,GAAQC,GAKhBH,OAAAA,EAGPY,IAAAA,GAAmB,EAGdC,SAAAA,EAAOC,GACZf,EAAW,KAAMe,GACZ5B,KAAAA,GAAK,IAAI3C,KAAkB,MAAbuE,EAAO5B,GAAa4B,EAAO5B,GAAGC,UAAYO,KACxD,KAAKd,YACDM,KAAAA,GAAK,IAAI3C,KAAKmD,OAIE,IAArBkB,IACAA,GAAmB,EACnBnF,EAAMsF,aAAa,MACnBH,GAAmB,GAIlBI,SAAAA,EAAUC,GACRA,OAAAA,aAAeJ,GAAkB,MAAPI,GAAuC,MAAxBA,EAAIb,iBAG/Cc,SAAAA,EAAUC,GACXA,OAAAA,EAAS,EAEFC,KAAKC,KAAKF,IAAW,EAErBC,KAAKE,MAAMH,GAIjBI,SAAAA,EAAMC,GACPC,IAAAA,GAAiBD,EACjBE,EAAQ,EAMLA,OAJe,IAAlBD,GAAuBE,SAASF,KAChCC,EAAQR,EAASO,IAGdC,EAIFE,SAAAA,EAAcC,EAAQC,EAAQC,GAC/BlC,IAGAjD,EAHAiD,EAAMuB,KAAKY,IAAIH,EAAOhF,OAAQiF,EAAOjF,QACrCoF,EAAab,KAAKc,IAAIL,EAAOhF,OAASiF,EAAOjF,QAC7CsF,EAAQ,EAEPvF,IAAAA,EAAI,EAAGA,EAAIiD,EAAKjD,KACZmF,GAAeF,EAAOjF,KAAOkF,EAAOlF,KACnCmF,GAAeR,EAAMM,EAAOjF,MAAQ2E,EAAMO,EAAOlF,MACnDuF,IAGDA,OAAAA,EAAQF,EAGVG,SAAAA,EAAKC,IACgC,IAAtC5G,EAAM6G,6BACmB,oBAAbC,SAA6BA,QAAQH,MACjDG,QAAQH,KAAK,wBAA0BC,GAItCG,SAAAA,EAAUH,EAAK3F,GAChB+F,IAAAA,GAAY,EAETtF,OAAAA,EAAO,WAINsF,GAH4B,MAA5BhH,EAAMiH,oBACNjH,EAAMiH,mBAAmB,KAAML,GAE/BI,EAAW,CAGN,IAFDE,IACAC,EADAD,EAAO,GAEF/F,EAAI,EAAGA,EAAIjB,UAAUkB,OAAQD,IAAK,CAEnC,GADJgG,EAAM,GACsB,WAAxB,EAAOjH,UAAUiB,IAAiB,CAE7B,IAAA,IAAIiG,KADTD,GAAO,MAAQhG,EAAI,KACHjB,UAAU,GACtBiH,GAAOC,EAAM,KAAOlH,UAAU,GAAGkH,GAAO,KAE5CD,EAAMA,EAAIE,MAAM,GAAI,QAEpBF,EAAMjH,UAAUiB,GAEpB+F,EAAK7F,KAAK8F,GAEdR,EAAKC,EAAM,gBAAkBvG,MAAME,UAAU8G,MAAM5G,KAAKyG,GAAMI,KAAK,IAAM,MAAQ,IAAIC,OAASC,OAC9FR,GAAY,EAET/F,OAAAA,EAAGhB,MAAM,KAAMC,YACvBe,GAGHwG,IAsEAC,EAtEAD,EAAe,GAEVE,SAAAA,EAAgBC,EAAMhB,GACK,MAA5B5G,EAAMiH,oBACNjH,EAAMiH,mBAAmBW,EAAMhB,GAE9Ba,EAAaG,KACdjB,EAAKC,GACLa,EAAaG,IAAQ,GAOpBC,SAAAA,EAAWzH,GACTA,OAAAA,aAAiB0H,UAAsD,sBAA1CxH,OAAOC,UAAUC,SAASC,KAAKL,GAsB9D2H,SAAAA,EAAaC,EAAcC,GAC5B/G,IAAgCuD,EAAhCvD,EAAMQ,EAAO,GAAIsG,GAChBvD,IAAAA,KAAQwD,EACL3G,EAAW2G,EAAaxD,KACpB/D,EAASsH,EAAavD,KAAU/D,EAASuH,EAAYxD,KACrDvD,EAAIuD,GAAQ,GACZ/C,EAAOR,EAAIuD,GAAOuD,EAAavD,IAC/B/C,EAAOR,EAAIuD,GAAOwD,EAAYxD,KACF,MAArBwD,EAAYxD,GACnBvD,EAAIuD,GAAQwD,EAAYxD,UAEjBvD,EAAIuD,IAIlBA,IAAAA,KAAQuD,EACL1G,EAAW0G,EAAcvD,KACpBnD,EAAW2G,EAAaxD,IACzB/D,EAASsH,EAAavD,MAE1BvD,EAAIuD,GAAQ/C,EAAO,GAAIR,EAAIuD,KAG5BvD,OAAAA,EAGFgH,SAAAA,EAAO7C,GACE,MAAVA,GACK8C,KAAAA,IAAI9C,GAtDjBrF,EAAM6G,6BAA8B,EACpC7G,EAAMiH,mBAAqB,KA4DvBS,EADApH,OAAOoH,KACApH,OAAOoH,KAEP,SAAUlC,GACTrE,IAAAA,EAAGD,EAAM,GACRC,IAAAA,KAAKqE,EACFlE,EAAWkE,EAAKrE,IAChBD,EAAIG,KAAKF,GAGVD,OAAAA,GAoFXkH,IAAAA,EAAU,GAELC,SAAAA,EAAcC,EAAMC,GACrBC,IAAAA,EAAYF,EAAKG,cACrBL,EAAQI,GAAaJ,EAAQI,EAAY,KAAOJ,EAAQG,GAAaD,EAGhEI,SAAAA,EAAeC,GACb,MAAiB,iBAAVA,EAAqBP,EAAQO,IAAUP,EAAQO,EAAMF,oBAAiB5E,EAG/E+E,SAAAA,EAAqBC,GACtBC,IACAC,EACAtE,EAFAqE,EAAkB,GAIjBrE,IAAAA,KAAQoE,EACLvH,EAAWuH,EAAapE,KACxBsE,EAAiBL,EAAejE,MAE5BqE,EAAgBC,GAAkBF,EAAYpE,IAKnDqE,OAAAA,EAGPE,IAAAA,EAAa,GAERC,SAAAA,EAAgBX,EAAMY,GAC3BF,EAAWV,GAAQY,EAcdC,SAAAA,EAASzD,EAAQ0D,EAAcC,GAChCC,IAAAA,EAAY,GAAK3D,KAAKc,IAAIf,GAC1B6D,EAAcH,EAAeE,EAAUlI,OAEpC,OADIsE,GAAU,EACL2D,EAAY,IAAM,GAAM,KACpC1D,KAAK6D,IAAI,GAAI7D,KAAK8D,IAAI,EAAGF,IAAc/I,WAAWkJ,OAAO,GAAKJ,EAGlEK,IAAAA,EAAmB,uLAEnBC,EAAwB,6CAExBC,EAAkB,GAElBC,EAAuB,GAMlBC,SAAAA,EAAgBC,EAAOC,EAAQC,EAASC,GACzCC,IAAAA,EAAOD,EACa,iBAAbA,IACPC,EAAO,WACI,OAAA,KAAKD,OAGhBH,IACAF,EAAqBE,GAASI,GAE9BH,IACAH,EAAqBG,EAAO,IAAM,WACvBd,OAAAA,EAASiB,EAAKnK,MAAM,KAAMC,WAAY+J,EAAO,GAAIA,EAAO,MAGnEC,IACAJ,EAAqBI,GAAW,WACrB,OAAA,KAAKG,aAAaH,QAAQE,EAAKnK,MAAM,KAAMC,WAAY8J,KAiCjEM,SAAAA,EAAanI,EAAGN,GACjB,OAACM,EAAEgB,WAIPtB,EAAS0I,EAAa1I,EAAQM,EAAEkI,cAChCR,EAAgBhI,GAAUgI,EAAgBhI,IA3BrC2I,SAAmB3I,GACpB4I,IAAwCtJ,EAAGC,EARnBhB,EAQxBqK,EAAQ5I,EAAO6I,MAAMf,GAEpBxI,IAAAA,EAAI,EAAGC,EAASqJ,EAAMrJ,OAAQD,EAAIC,EAAQD,IACvC2I,EAAqBW,EAAMtJ,IAC3BsJ,EAAMtJ,GAAK2I,EAAqBW,EAAMtJ,IAEtCsJ,EAAMtJ,IAdcf,EAccqK,EAAMtJ,IAbtCuJ,MAAM,YACLtK,EAAMuK,QAAQ,WAAY,IAE9BvK,EAAMuK,QAAQ,MAAO,IAcrB,OAAA,SAAUC,GACTC,IAAa1J,EAAb0J,EAAS,GACR1J,IAAAA,EAAI,EAAGA,EAAIC,EAAQD,IACpB0J,GAAUhD,EAAW4C,EAAMtJ,IAAMsJ,EAAMtJ,GAAGV,KAAKmK,EAAK/I,GAAU4I,EAAMtJ,GAEjE0J,OAAAA,GAW0CL,CAAmB3I,GAEjEgI,EAAgBhI,GAAQM,IANpBA,EAAEkI,aAAaS,cASrBP,SAAAA,EAAa1I,EAAQC,GACtBX,IAAAA,EAAI,EAEC4J,SAAAA,EAA4B3K,GAC1B0B,OAAAA,EAAOkJ,eAAe5K,IAAUA,EAIpCe,IADPyI,EAAsBqB,UAAY,EAC3B9J,GAAK,GAAKyI,EAAsBsB,KAAKrJ,IACxCA,EAASA,EAAO8I,QAAQf,EAAuBmB,GAC/CnB,EAAsBqB,UAAY,EAClC9J,GAAK,EAGFU,OAAAA,EAGPsJ,IAAAA,EAAiB,KACjBC,EAAiB,OACjBC,EAAiB,QACjBC,EAAiB,QACjBC,EAAiB,aACjBC,EAAiB,QACjBC,EAAiB,YACjBC,EAAiB,gBACjBC,GAAiB,UACjBC,GAAiB,UACjBC,GAAiB,eAEjBC,GAAiB,MACjBC,GAAiB,WAEjBC,GAAiB,qBACjBC,GAAmB,0BAMnBC,GAAY,wJAEZC,GAAU,GAELC,SAAAA,GAAepC,EAAOqC,EAAOC,GAClCH,GAAQnC,GAASnC,EAAWwE,GAASA,EAAQ,SAAUE,EAAUlC,GACrDkC,OAAAA,GAAYD,EAAeA,EAAcD,GAIhDG,SAAAA,GAAuBxC,EAAO3E,GAC/B,OAAC/D,EAAW6K,GAASnC,GAIlBmC,GAAQnC,GAAO3E,EAAOzB,QAASyB,EAAOH,SAHlC,IAAIuH,OAQRC,GAR8B1C,EAQhBW,QAAQ,KAAM,IAAIA,QAAQ,sCAAuC,SAAUgC,EAASC,EAAIC,EAAIC,EAAIC,GAC1GH,OAAAA,GAAMC,GAAMC,GAAMC,MAIxBL,SAAAA,GAAYM,GACVA,OAAAA,EAAErC,QAAQ,yBAA0B,QAG3CsC,IAAAA,GAAS,GAEJC,SAAAA,GAAelD,EAAOG,GACvBhJ,IAAAA,EAAGiJ,EAAOD,EASThJ,IARgB,iBAAV6I,IACPA,EAAQ,CAACA,IAETpJ,EAASuJ,KACTC,EAAO,SAAUhK,EAAOqK,GACpBA,EAAMN,GAAYrE,EAAM1F,KAG3Be,EAAI,EAAGA,EAAI6I,EAAM5I,OAAQD,IAC1B8L,GAAOjD,EAAM7I,IAAMiJ,EAIlB+C,SAAAA,GAAmBnD,EAAOG,GAC/B+C,GAAclD,EAAO,SAAU5J,EAAOqK,EAAOpF,EAAQ2E,GACjD3E,EAAO+H,GAAK/H,EAAO+H,IAAM,GACzBjD,EAAS/J,EAAOiF,EAAO+H,GAAI/H,EAAQ2E,KAIlCqD,SAAAA,GAAwBrD,EAAO5J,EAAOiF,GAC9B,MAATjF,GAAiBkB,EAAW2L,GAAQjD,IACpCiD,GAAOjD,GAAO5J,EAAOiF,EAAOiI,GAAIjI,EAAQ2E,GAI5CuD,IAAAA,GAAO,EACPC,GAAQ,EACRC,GAAO,EACPC,GAAO,EACPC,GAAS,EACTC,GAAS,EACTC,GAAc,EACdC,GAAO,EACPC,GAAU,EA8CLC,SAAAA,GAAWC,GACTC,OAAAA,GAAWD,GAAQ,IAAM,IAG3BC,SAAAA,GAAWD,GACRA,OAAAA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAMA,EAAO,KAAQ,EA/ClElE,EAAe,IAAK,EAAG,EAAG,WAClBoE,IAAAA,EAAI,KAAKF,OACNE,OAAAA,GAAK,KAAO,GAAKA,EAAI,IAAMA,IAGtCpE,EAAe,EAAG,CAAC,KAAM,GAAI,EAAG,WACrB,OAAA,KAAKkE,OAAS,MAGzBlE,EAAe,EAAG,CAAC,OAAU,GAAU,EAAG,QAC1CA,EAAe,EAAG,CAAC,QAAU,GAAU,EAAG,QAC1CA,EAAe,EAAG,CAAC,SAAU,GAAG,GAAO,EAAG,QAI1C1B,EAAa,OAAQ,KAIrBY,EAAgB,OAAQ,GAIxBmD,GAAc,IAAUL,IACxBK,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,OAAUR,GAAWN,GACnCc,GAAc,QAAUP,GAAWN,GACnCa,GAAc,SAAUP,GAAWN,GAEnC2B,GAAc,CAAC,QAAS,UAAWK,IACnCL,GAAc,OAAQ,SAAU9M,EAAOqK,GACnCA,EAAM8C,IAAyB,IAAjBnN,EAAMgB,OAAepB,EAAMoO,kBAAkBhO,GAAS0F,EAAM1F,KAE9E8M,GAAc,KAAM,SAAU9M,EAAOqK,GACjCA,EAAM8C,IAAQvN,EAAMoO,kBAAkBhO,KAE1C8M,GAAc,IAAK,SAAU9M,EAAOqK,GAChCA,EAAM8C,IAAQc,SAASjO,EAAO,MAelCJ,EAAMoO,kBAAoB,SAAUhO,GACzB0F,OAAAA,EAAM1F,IAAU0F,EAAM1F,GAAS,GAAK,KAAO,MAKlDkO,IAiEAC,GAjEAD,GAAaE,GAAW,YAAY,GAM/BA,SAAAA,GAAYlG,EAAMmG,GAChB,OAAA,SAAUxI,GACTA,OAAS,MAATA,GACAyI,GAAM,KAAMpG,EAAMrC,GAClBjG,EAAMsF,aAAa,KAAMmJ,GAClB,MAEAE,GAAI,KAAMrG,IAKpBqG,SAAAA,GAAK/D,EAAKtC,GACRsC,OAAAA,EAAIzH,UACPyH,EAAInH,GAAG,OAASmH,EAAI5F,OAAS,MAAQ,IAAMsD,KAAUrE,IAGpDyK,SAAAA,GAAO9D,EAAKtC,EAAMrC,GACnB2E,EAAIzH,YAAcK,MAAMyC,KACX,aAATqC,GAAuB4F,GAAWtD,EAAIqD,SAA2B,IAAhBrD,EAAIgE,SAAgC,KAAfhE,EAAIiE,OAC1EjE,EAAInH,GAAG,OAASmH,EAAI5F,OAAS,MAAQ,IAAMsD,GAAMrC,EAAO2E,EAAIgE,QAASE,GAAY7I,EAAO2E,EAAIgE,UAG5FhE,EAAInH,GAAG,OAASmH,EAAI5F,OAAS,MAAQ,IAAMsD,GAAMrC,IAqDpD6I,SAAAA,GAAYb,EAAMW,GACnBpL,GAAAA,MAAMyK,IAASzK,MAAMoL,GACd3K,OAAAA,IAEP8K,IAzBQC,EAyBRD,GAAeH,GAzBPI,EAyBc,IAxBRA,GAAKA,EA0BhBD,OADPd,IAASW,EAAQG,GAAY,GACT,IAAbA,EAAkBb,GAAWD,GAAQ,GAAK,GAAO,GAAKc,EAAW,EAAI,EApB5ER,GADAlO,MAAME,UAAUgO,QACNlO,MAAME,UAAUgO,QAEhB,SAAUU,GAEZ9N,IAAAA,EACCA,IAAAA,EAAI,EAAGA,EAAI,KAAKC,SAAUD,EACvB,GAAA,KAAKA,KAAO8N,EACL9N,OAAAA,EAGR,OAAC,GAehB4I,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,WAC1B,OAAA,KAAK6E,QAAU,IAG1B7E,EAAe,MAAO,EAAG,EAAG,SAAUlI,GAC3B,OAAA,KAAKwI,aAAa6E,YAAY,KAAMrN,KAG/CkI,EAAe,OAAQ,EAAG,EAAG,SAAUlI,GAC5B,OAAA,KAAKwI,aAAa8E,OAAO,KAAMtN,KAK1CwG,EAAa,QAAS,KAItBY,EAAgB,QAAS,GAIzBmD,GAAc,IAAQZ,GACtBY,GAAc,KAAQZ,EAAWJ,GACjCgB,GAAc,MAAQ,SAAUG,EAAUzK,GAC/BA,OAAAA,EAAOsN,iBAAiB7C,KAEnCH,GAAc,OAAQ,SAAUG,EAAUzK,GAC/BA,OAAAA,EAAOuN,YAAY9C,KAG9BW,GAAc,CAAC,IAAK,MAAO,SAAU9M,EAAOqK,GACxCA,EAAM+C,IAAS1H,EAAM1F,GAAS,IAGlC8M,GAAc,CAAC,MAAO,QAAS,SAAU9M,EAAOqK,EAAOpF,EAAQ2E,GACvD4E,IAAAA,EAAQvJ,EAAOH,QAAQoK,YAAYlP,EAAO4J,EAAO3E,EAAOzB,SAE/C,MAATgL,EACAnE,EAAM+C,IAASoB,EAEf1M,EAAgBmD,GAAQ1C,aAAevC,IAM3CmP,IAAAA,GAAmB,gCACnBC,GAAsB,wFAAwFC,MAAM,KAUpHC,IAAAA,GAA2B,kDAAkDD,MAAM,KA2F9EE,SAAAA,GAAU/E,EAAK3E,GAChB2J,IAAAA,EAEA,IAAChF,EAAIzH,UAEEyH,OAAAA,EAGP,GAAiB,iBAAV3E,EACH,GAAA,QAAQiF,KAAKjF,GACbA,EAAQH,EAAMG,QAIV,IAACrF,EAFLqF,EAAQ2E,EAAIP,aAAaiF,YAAYrJ,IAG1B2E,OAAAA,EAOZA,OAFPgF,EAAajK,KAAKY,IAAIqE,EAAIiE,OAAQC,GAAYlE,EAAIqD,OAAQhI,IAC1D2E,EAAInH,GAAG,OAASmH,EAAI5F,OAAS,MAAQ,IAAM,SAASiB,EAAO2J,GACpDhF,EAGFiF,SAAAA,GAAa5J,GACdA,OAAS,MAATA,GACA0J,GAAS,KAAM1J,GACfjG,EAAMsF,aAAa,MAAM,GAClB,MAEAqJ,GAAI,KAAM,SAQrBmB,IAAAA,GAA0B5D,GAoB1B6D,IAAAA,GAAqB7D,GAoBhB8D,SAAAA,KACIC,SAAAA,EAAU1O,EAAGC,GACXA,OAAAA,EAAEJ,OAASG,EAAEH,OAGpB8O,IACA/O,EAAGyJ,EADHsF,EAAc,GAAIC,EAAa,GAAIC,EAAc,GAEhDjP,IAAAA,EAAI,EAAGA,EAAI,GAAIA,IAEhByJ,EAAMhJ,EAAU,CAAC,IAAMT,IACvB+O,EAAY7O,KAAK,KAAK6N,YAAYtE,EAAK,KACvCuF,EAAW9O,KAAK,KAAK8N,OAAOvE,EAAK,KACjCwF,EAAY/O,KAAK,KAAK8N,OAAOvE,EAAK,KAClCwF,EAAY/O,KAAK,KAAK6N,YAAYtE,EAAK,KAOtCzJ,IAHL+O,EAAYG,KAAKJ,GACjBE,EAAWE,KAAKJ,GAChBG,EAAYC,KAAKJ,GACZ9O,EAAI,EAAGA,EAAI,GAAIA,IAChB+O,EAAY/O,GAAKuL,GAAYwD,EAAY/O,IACzCgP,EAAWhP,GAAKuL,GAAYyD,EAAWhP,IAEtCA,IAAAA,EAAI,EAAGA,EAAI,GAAIA,IAChBiP,EAAYjP,GAAKuL,GAAY0D,EAAYjP,IAGxCmP,KAAAA,aAAe,IAAI7D,OAAO,KAAO2D,EAAY9I,KAAK,KAAO,IAAK,KAC9DiJ,KAAAA,kBAAoB,KAAKD,aACzBE,KAAAA,mBAAqB,IAAI/D,OAAO,KAAO0D,EAAW7I,KAAK,KAAO,IAAK,KACnEmJ,KAAAA,wBAA0B,IAAIhE,OAAO,KAAOyD,EAAY5I,KAAK,KAAO,IAAK,KAqBzEoJ,SAAAA,GAAevC,GAChBU,IAAAA,EAEAV,GAAAA,EAAI,KAAOA,GAAK,EAAG,CACfjH,IAAAA,EAAO7G,MAAME,UAAU8G,MAAM5G,KAAKP,WAEtCgH,EAAK,GAAKiH,EAAI,IACdU,EAAO,IAAI/N,KAAKA,KAAK6P,IAAI1Q,MAAM,KAAMiH,IACjChB,SAAS2I,EAAK+B,mBACd/B,EAAKgC,eAAe1C,QAGxBU,EAAO,IAAI/N,KAAKA,KAAK6P,IAAI1Q,MAAM,KAAMC,YAGlC2O,OAAAA,EAIFiC,SAAAA,GAAgB7C,EAAM8C,EAAKC,GAC5B,IACAC,EAAM,EAAIF,EAAMC,EAIb,SAFM,EAAIN,GAAczC,EAAM,EAAGgD,GAAKC,YAAcH,GAAO,GAElDE,EAAM,EAIjBE,SAAAA,GAAmBlD,EAAMmD,EAAMC,EAASN,EAAKC,GAC9CM,IAGAC,EAASC,EADTC,EAAY,EAAI,GAAKL,EAAO,IAFZ,EAAIC,EAAUN,GAAO,EACxBD,GAAgB7C,EAAM8C,EAAKC,GAerC,OAXHS,GAAa,EAEbD,EAAexD,GADfuD,EAAUtD,EAAO,GACoBwD,EAC9BA,EAAYzD,GAAWC,IAC9BsD,EAAUtD,EAAO,EACjBuD,EAAeC,EAAYzD,GAAWC,KAEtCsD,EAAUtD,EACVuD,EAAeC,GAGZ,CACHxD,KAAMsD,EACNE,UAAWD,GAIVE,SAAAA,GAAW9G,EAAKmG,EAAKC,GACtBW,IAEAC,EAASL,EAFTI,EAAab,GAAgBlG,EAAIqD,OAAQ8C,EAAKC,GAC9CI,EAAOzL,KAAKE,OAAO+E,EAAI6G,YAAcE,EAAa,GAAK,GAAK,EAczD,OAXHP,EAAO,EAEPQ,EAAUR,EAAOS,GADjBN,EAAU3G,EAAIqD,OAAS,EACe8C,EAAKC,GACpCI,EAAOS,GAAYjH,EAAIqD,OAAQ8C,EAAKC,IAC3CY,EAAUR,EAAOS,GAAYjH,EAAIqD,OAAQ8C,EAAKC,GAC9CO,EAAU3G,EAAIqD,OAAS,IAEvBsD,EAAU3G,EAAIqD,OACd2D,EAAUR,GAGP,CACHA,KAAMQ,EACN3D,KAAMsD,GAILM,SAAAA,GAAY5D,EAAM8C,EAAKC,GACxBW,IAAAA,EAAab,GAAgB7C,EAAM8C,EAAKC,GACxCc,EAAiBhB,GAAgB7C,EAAO,EAAG8C,EAAKC,GAC7C,OAAChD,GAAWC,GAAQ0D,EAAaG,GAAkB,EAK9D/H,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,QACrCA,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,WAIrC1B,EAAa,OAAQ,KACrBA,EAAa,UAAW,KAIxBY,EAAgB,OAAQ,GACxBA,EAAgB,UAAW,GAI3BmD,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAE/B+B,GAAkB,CAAC,IAAK,KAAM,IAAK,MAAO,SAAU/M,EAAOgR,EAAM/L,EAAQ2E,GACrEoH,EAAKpH,EAAMN,OAAO,EAAG,IAAM5D,EAAM1F,KA0H5B2R,SAAAA,GAAeC,EAAIC,GACjBD,OAAAA,EAAG3K,MAAM4K,EAAG,GAAGC,OAAOF,EAAG3K,MAAM,EAAG4K,IArF7ClI,EAAe,IAAK,EAAG,KAAM,OAE7BA,EAAe,KAAM,EAAG,EAAG,SAAUlI,GAC1B,OAAA,KAAKwI,aAAa8H,YAAY,KAAMtQ,KAG/CkI,EAAe,MAAO,EAAG,EAAG,SAAUlI,GAC3B,OAAA,KAAKwI,aAAa+H,cAAc,KAAMvQ,KAGjDkI,EAAe,OAAQ,EAAG,EAAG,SAAUlI,GAC5B,OAAA,KAAKwI,aAAagI,SAAS,KAAMxQ,KAG5CkI,EAAe,IAAK,EAAG,EAAG,WAC1BA,EAAe,IAAK,EAAG,EAAG,cAI1B1B,EAAa,MAAO,KACpBA,EAAa,UAAW,KACxBA,EAAa,aAAc,KAG3BY,EAAgB,MAAO,IACvBA,EAAgB,UAAW,IAC3BA,EAAgB,aAAc,IAI9BmD,GAAc,IAAQZ,GACtBY,GAAc,IAAQZ,GACtBY,GAAc,IAAQZ,GACtBY,GAAc,KAAQ,SAAUG,EAAUzK,GAC/BA,OAAAA,EAAOwQ,iBAAiB/F,KAEnCH,GAAc,MAAS,SAAUG,EAAUzK,GAChCA,OAAAA,EAAOyQ,mBAAmBhG,KAErCH,GAAc,OAAU,SAAUG,EAAUzK,GACjCA,OAAAA,EAAO0Q,cAAcjG,KAGhCY,GAAkB,CAAC,KAAM,MAAO,QAAS,SAAU/M,EAAOgR,EAAM/L,EAAQ2E,GAChEqH,IAAAA,EAAUhM,EAAOH,QAAQuN,cAAcrS,EAAO4J,EAAO3E,EAAOzB,SAEjD,MAAXyN,EACAD,EAAKsB,EAAIrB,EAETnP,EAAgBmD,GAAQ1B,eAAiBvD,IAIjD+M,GAAkB,CAAC,IAAK,IAAK,KAAM,SAAU/M,EAAOgR,EAAM/L,EAAQ2E,GAC9DoH,EAAKpH,GAASlE,EAAM1F,KAkCpBuS,IAAAA,GAAwB,2DAA2DlD,MAAM,KAQzFmD,IAAAA,GAA6B,8BAA8BnD,MAAM,KAMjEoD,IAAAA,GAA2B,uBAAuBpD,MAAM,KAsJxDqD,IAAAA,GAAuB5G,GAoBvB6G,IAAAA,GAA4B7G,GAoB5B8G,IAAAA,GAA0B9G,GAqBrB+G,SAAAA,KACIhD,SAAAA,EAAU1O,EAAGC,GACXA,OAAAA,EAAEJ,OAASG,EAAEH,OAGpB8R,IACA/R,EAAGyJ,EAAKuI,EAAMC,EAAQC,EADtBH,EAAY,GAAIhD,EAAc,GAAIC,EAAa,GAAIC,EAAc,GAEhEjP,IAAAA,EAAI,EAAGA,EAAI,EAAGA,IAEfyJ,EAAMhJ,EAAU,CAAC,IAAM,IAAI0R,IAAInS,GAC/BgS,EAAO,KAAKhB,YAAYvH,EAAK,IAC7BwI,EAAS,KAAKhB,cAAcxH,EAAK,IACjCyI,EAAQ,KAAKhB,SAASzH,EAAK,IAC3BsI,EAAU7R,KAAK8R,GACfjD,EAAY7O,KAAK+R,GACjBjD,EAAW9O,KAAKgS,GAChBjD,EAAY/O,KAAK8R,GACjB/C,EAAY/O,KAAK+R,GACjBhD,EAAY/O,KAAKgS,GAQhBlS,IAJL+R,EAAU7C,KAAKJ,GACfC,EAAYG,KAAKJ,GACjBE,EAAWE,KAAKJ,GAChBG,EAAYC,KAAKJ,GACZ9O,EAAI,EAAGA,EAAI,EAAGA,IACf+O,EAAY/O,GAAKuL,GAAYwD,EAAY/O,IACzCgP,EAAWhP,GAAKuL,GAAYyD,EAAWhP,IACvCiP,EAAYjP,GAAKuL,GAAY0D,EAAYjP,IAGxCoS,KAAAA,eAAiB,IAAI9G,OAAO,KAAO2D,EAAY9I,KAAK,KAAO,IAAK,KAChEkM,KAAAA,oBAAsB,KAAKD,eAC3BE,KAAAA,kBAAoB,KAAKF,eAEzBG,KAAAA,qBAAuB,IAAIjH,OAAO,KAAO0D,EAAW7I,KAAK,KAAO,IAAK,KACrEqM,KAAAA,0BAA4B,IAAIlH,OAAO,KAAOyD,EAAY5I,KAAK,KAAO,IAAK,KAC3EsM,KAAAA,wBAA0B,IAAInH,OAAO,KAAOyG,EAAU5L,KAAK,KAAO,IAAK,KAKvEuM,SAAAA,KACE,OAAA,KAAKC,QAAU,IAAM,GA6BvB9Q,SAAAA,GAAUgH,EAAO+J,GACtBhK,EAAeC,EAAO,EAAG,EAAG,WACjB,OAAA,KAAKK,aAAarH,SAAS,KAAK8Q,QAAS,KAAKE,UAAWD,KAgB/DE,SAAAA,GAAe1H,EAAUzK,GACvBA,OAAAA,EAAOoS,eAzClBnK,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,QAClCA,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG8J,IAClC9J,EAAe,IAAK,CAAC,KAAM,GAAI,EANtBoK,WACE,OAAA,KAAKL,SAAW,KAO3B/J,EAAe,MAAO,EAAG,EAAG,WACjB,MAAA,GAAK8J,GAAQ5T,MAAM,MAAQkJ,EAAS,KAAK6K,UAAW,KAG/DjK,EAAe,QAAS,EAAG,EAAG,WACnB,MAAA,GAAK8J,GAAQ5T,MAAM,MAAQkJ,EAAS,KAAK6K,UAAW,GACvD7K,EAAS,KAAKiL,UAAW,KAGjCrK,EAAe,MAAO,EAAG,EAAG,WACjB,MAAA,GAAK,KAAK+J,QAAU3K,EAAS,KAAK6K,UAAW,KAGxDjK,EAAe,QAAS,EAAG,EAAG,WACnB,MAAA,GAAK,KAAK+J,QAAU3K,EAAS,KAAK6K,UAAW,GAChD7K,EAAS,KAAKiL,UAAW,KASjCpR,GAAS,KAAK,GACdA,GAAS,KAAK,GAIdqF,EAAa,OAAQ,KAGrBY,EAAgB,OAAQ,IAQxBmD,GAAc,IAAM6H,IACpB7H,GAAc,IAAM6H,IACpB7H,GAAc,IAAMZ,GACpBY,GAAc,IAAMZ,GACpBY,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,KAAMZ,EAAWJ,GAE/BgB,GAAc,MAAOX,GACrBW,GAAc,QAASV,GACvBU,GAAc,MAAOX,GACrBW,GAAc,QAASV,GAEvBwB,GAAc,CAAC,IAAK,MAAOQ,IAC3BR,GAAc,CAAC,IAAK,MAAO,SAAU9M,EAAOqK,EAAOpF,GAC3CgP,IAAAA,EAASvO,EAAM1F,GACnBqK,EAAMiD,IAAmB,KAAX2G,EAAgB,EAAIA,IAEtCnH,GAAc,CAAC,IAAK,KAAM,SAAU9M,EAAOqK,EAAOpF,GAC9CA,EAAOiP,MAAQjP,EAAOH,QAAQqP,KAAKnU,GACnCiF,EAAOmP,UAAYpU,IAEvB8M,GAAc,CAAC,IAAK,MAAO,SAAU9M,EAAOqK,EAAOpF,GAC/CoF,EAAMiD,IAAQ5H,EAAM1F,GACpB8B,EAAgBmD,GAAQvB,SAAU,IAEtCoJ,GAAc,MAAO,SAAU9M,EAAOqK,EAAOpF,GACrCoP,IAAAA,EAAMrU,EAAMgB,OAAS,EACzBqJ,EAAMiD,IAAQ5H,EAAM1F,EAAMsJ,OAAO,EAAG+K,IACpChK,EAAMkD,IAAU7H,EAAM1F,EAAMsJ,OAAO+K,IACnCvS,EAAgBmD,GAAQvB,SAAU,IAEtCoJ,GAAc,QAAS,SAAU9M,EAAOqK,EAAOpF,GACvCqP,IAAAA,EAAOtU,EAAMgB,OAAS,EACtBuT,EAAOvU,EAAMgB,OAAS,EAC1BqJ,EAAMiD,IAAQ5H,EAAM1F,EAAMsJ,OAAO,EAAGgL,IACpCjK,EAAMkD,IAAU7H,EAAM1F,EAAMsJ,OAAOgL,EAAM,IACzCjK,EAAMmD,IAAU9H,EAAM1F,EAAMsJ,OAAOiL,IACnCzS,EAAgBmD,GAAQvB,SAAU,IAEtCoJ,GAAc,MAAO,SAAU9M,EAAOqK,EAAOpF,GACrCoP,IAAAA,EAAMrU,EAAMgB,OAAS,EACzBqJ,EAAMiD,IAAQ5H,EAAM1F,EAAMsJ,OAAO,EAAG+K,IACpChK,EAAMkD,IAAU7H,EAAM1F,EAAMsJ,OAAO+K,MAEvCvH,GAAc,QAAS,SAAU9M,EAAOqK,EAAOpF,GACvCqP,IAAAA,EAAOtU,EAAMgB,OAAS,EACtBuT,EAAOvU,EAAMgB,OAAS,EAC1BqJ,EAAMiD,IAAQ5H,EAAM1F,EAAMsJ,OAAO,EAAGgL,IACpCjK,EAAMkD,IAAU7H,EAAM1F,EAAMsJ,OAAOgL,EAAM,IACzCjK,EAAMmD,IAAU9H,EAAM1F,EAAMsJ,OAAOiL,MA2BnCC,IAyBAC,GAzBAD,GAAapG,GAAW,SAAS,GAEjCsG,GAAa,CACbC,SAj2CkB,CAClBC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KA41CXrK,eAp1CwB,CACxBsK,IAAO,YACPC,GAAO,SACPC,EAAO,aACPC,GAAO,eACPC,IAAO,sBACPC,KAAO,6BA+0CP7K,YA7zCqB,eA8zCrBZ,QAxzCiB,KAyzCjB0L,uBAxzCgC,UAyzChCC,aAnzCsB,CACtBC,OAAS,QACTC,KAAS,SACT/I,EAAK,gBACLgJ,GAAK,aACL7T,EAAK,WACL8T,GAAK,aACLC,EAAK,UACLC,GAAK,WACLzD,EAAK,QACL0D,GAAK,UACLC,EAAK,UACLC,GAAK,YACLnI,EAAK,SACLoI,GAAK,YAuyCLpH,OAAQK,GACRN,YAAaQ,GAEb0B,KA9gBoB,CACpBL,IAAM,EACNC,IAAM,GA8gBNqB,SAAUM,GACVR,YAAaU,GACbT,cAAeQ,GAEf4D,cAnC6B,iBAuC7BC,GAAU,GACVC,GAAiB,GAGZC,SAAAA,GAAgBvP,GACdA,OAAAA,EAAMA,EAAIqB,cAAckC,QAAQ,IAAK,KAAOvD,EA8B9CwP,SAAAA,GAAWhP,GACZiP,IAAAA,EAAY,KAEZ,IAACJ,GAAQ7O,IAA4B,oBAAXlI,QACtBA,QAAUA,OAAOD,QACjB,IACAoX,EAAYhC,GAAaiC,MACJC,QACN,YAAcnP,GAC7BoP,GAAmBH,GACrB,MAAOI,IAENR,OAAAA,GAAQ7O,GAMVoP,SAAAA,GAAoB5P,EAAK8P,GAC1BC,IAAAA,EAqBGtC,OApBHzN,KAEI+P,EADAxW,EAAYuW,GACLE,GAAUhQ,GAGViQ,GAAajQ,EAAK8P,IAKzBrC,GAAesC,EAGU,oBAAbrQ,SAA6BA,QAAQH,MAE7CG,QAAQH,KAAK,UAAYS,EAAO,2CAKrCyN,GAAaiC,MAGfO,SAAAA,GAAczP,EAAMvC,GACrBA,GAAW,OAAXA,EAAiB,CACbvD,IAAAA,EAAQkG,EAAe8M,GAEvB2B,GADJpR,EAAOiS,KAAO1P,EACO,MAAjB6O,GAAQ7O,GACRD,EAAgB,uBACR,2OAIRK,EAAeyO,GAAQ7O,GAAM2P,aAC1B,GAA2B,MAAvBlS,EAAOmS,aACVf,GAAgC,MAAhCA,GAAQpR,EAAOmS,cACfxP,EAAeyO,GAAQpR,EAAOmS,cAAcD,YACzC,CAECzV,GAAU,OADdA,EAAS8U,GAAWvR,EAAOmS,eAWhB,OAPFd,GAAerR,EAAOmS,gBACvBd,GAAerR,EAAOmS,cAAgB,IAE1Cd,GAAerR,EAAOmS,cAAcnW,KAAK,CACrCuG,KAAMA,EACNvC,OAAQA,IAEL,KATP2C,EAAelG,EAAOyV,QA2B3Bd,OAdPA,GAAQ7O,GAAQ,IAAIM,EAAOH,EAAaC,EAAc3C,IAElDqR,GAAe9O,IACf8O,GAAe9O,GAAM6P,QAAQ,SAAUzI,GACnCqI,GAAarI,EAAEpH,KAAMoH,EAAE3J,UAO/B2R,GAAmBpP,GAGZ6O,GAAQ7O,GAIR,cADA6O,GAAQ7O,GACR,KAiCNwP,SAAAA,GAAWhQ,GACZtF,IAAAA,EAMA,GAJAsF,GAAOA,EAAIlC,SAAWkC,EAAIlC,QAAQ4R,QAClC1P,EAAMA,EAAIlC,QAAQ4R,QAGjB1P,EACMyN,OAAAA,GAGP,IAAC1U,EAAQiH,GAAM,CAGXtF,GADJA,EAAS8U,GAAWxP,GAETtF,OAAAA,EAEXsF,EAAM,CAACA,GAGJsQ,OAxKFA,SAAaC,GAGXxW,IAFHA,IAAOyW,EAAGC,EAAM/V,EAAQ2N,EAAxBtO,EAAI,EAEDA,EAAIwW,EAAMvW,QAAQ,CAKdwW,IAHPA,GADAnI,EAAQkH,GAAgBgB,EAAMxW,IAAIsO,MAAM,MAC9BrO,OAEVyW,GADAA,EAAOlB,GAAgBgB,EAAMxW,EAAI,KACnB0W,EAAKpI,MAAM,KAAO,KACzBmI,EAAI,GAAG,CAEN9V,GADJA,EAAS8U,GAAWnH,EAAMpI,MAAM,EAAGuQ,GAAGtQ,KAAK,MAEhCxF,OAAAA,EAEP+V,GAAAA,GAAQA,EAAKzW,QAAUwW,GAAKzR,EAAcsJ,EAAOoI,GAAM,IAASD,EAAI,EAEpE,MAEJA,IAEJzW,IAEG0T,OAAAA,GAmJA6C,CAAatQ,GAOf0Q,SAAAA,GAAe3V,GAChBK,IAAAA,EACAjB,EAAIY,EAAEmL,GAyBHnL,OAvBHZ,IAAsC,IAAjCW,EAAgBC,GAAGK,WACxBA,EACIjB,EAAEiM,IAAe,GAAKjM,EAAEiM,IAAe,GAAMA,GAC7CjM,EAAEkM,IAAe,GAAKlM,EAAEkM,IAAeqB,GAAYvN,EAAEgM,IAAOhM,EAAEiM,KAAUC,GACxElM,EAAEmM,IAAe,GAAKnM,EAAEmM,IAAe,IAAmB,KAAZnM,EAAEmM,MAA+B,IAAdnM,EAAEoM,KAA+B,IAAdpM,EAAEqM,KAAoC,IAAnBrM,EAAEsM,KAAuBH,GAChInM,EAAEoM,IAAe,GAAKpM,EAAEoM,IAAe,GAAMA,GAC7CpM,EAAEqM,IAAe,GAAKrM,EAAEqM,IAAe,GAAMA,GAC7CrM,EAAEsM,IAAe,GAAKtM,EAAEsM,IAAe,IAAMA,IAC5C,EAED3L,EAAgBC,GAAG4V,qBAAuBvV,EAAW+K,IAAQ/K,EAAWiL,MACxEjL,EAAWiL,IAEXvL,EAAgBC,GAAG6V,iBAAgC,IAAdxV,IACrCA,EAAWsL,IAEX5L,EAAgBC,GAAG8V,mBAAkC,IAAdzV,IACvCA,EAAWuL,IAGf7L,EAAgBC,GAAGK,SAAWA,GAG3BL,EAIF+V,SAAAA,GAAS3W,EAAGC,EAAG2W,GAChB5W,OAAK,MAALA,EACOA,EAEF,MAALC,EACOA,EAEJ2W,EAgBFC,SAAAA,GAAiB/S,GAClBlE,IAAAA,EAAG0N,EAAkBwJ,EAAaC,EAAiBC,EAA1CnY,EAAQ,GAEjBiF,IAAAA,EAAO5B,GAAP4B,CA6BClE,IAzBLkX,EApBKG,SAAiBnT,GAElBoT,IAAAA,EAAW,IAAI3X,KAAKd,EAAM0Y,OAC1BrT,OAAAA,EAAOsT,QACA,CAACF,EAAS7H,iBAAkB6H,EAASG,cAAeH,EAASI,cAEjE,CAACJ,EAASK,cAAeL,EAASM,WAAYN,EAASO,WAchDR,CAAiBnT,GAG3BA,EAAO+H,IAAyB,MAAnB/H,EAAOiI,GAAGG,KAAqC,MAApBpI,EAAOiI,GAAGE,KA2DjDyL,SAAsB5T,GACvB6T,IAAAA,EAAGC,EAAU/H,EAAMC,EAASN,EAAKC,EAAKoI,EAAMC,EAG5CH,GAAQ,OADZA,EAAI7T,EAAO+H,IACLkM,IAAqB,MAAPJ,EAAEK,GAAoB,MAAPL,EAAEM,EACjCzI,EAAM,EACNC,EAAM,EAMNmI,EAAWjB,GAASgB,EAAEI,GAAIjU,EAAOiI,GAAGC,IAAOmE,GAAW+H,KAAe,EAAG,GAAGxL,MAC3EmD,EAAO8G,GAASgB,EAAEK,EAAG,KACrBlI,EAAU6G,GAASgB,EAAEM,EAAG,IACV,GAAKnI,EAAU,KACzBgI,GAAkB,OAEnB,CACHtI,EAAM1L,EAAOH,QAAQwU,MAAM3I,IAC3BC,EAAM3L,EAAOH,QAAQwU,MAAM1I,IAEvB2I,IAAAA,EAAUjI,GAAW+H,KAAe1I,EAAKC,GAE7CmI,EAAWjB,GAASgB,EAAEU,GAAIvU,EAAOiI,GAAGC,IAAOoM,EAAQ1L,MAGnDmD,EAAO8G,GAASgB,EAAEA,EAAGS,EAAQvI,MAElB,MAAP8H,EAAExG,IAEFrB,EAAU6H,EAAExG,GACE,GAAKrB,EAAU,KACzBgI,GAAkB,GAER,MAAPH,EAAEjC,GAET5F,EAAU6H,EAAEjC,EAAIlG,GACZmI,EAAEjC,EAAI,GAAKiC,EAAEjC,EAAI,KACjBoC,GAAkB,IAItBhI,EAAUN,EAGdK,EAAO,GAAKA,EAAOS,GAAYsH,EAAUpI,EAAKC,GAC9C9O,EAAgBmD,GAAQ2S,gBAAiB,EACf,MAAnBqB,EACPnX,EAAgBmD,GAAQ4S,kBAAmB,GAE3CmB,EAAOjI,GAAmBgI,EAAU/H,EAAMC,EAASN,EAAKC,GACxD3L,EAAOiI,GAAGC,IAAQ6L,EAAKnL,KACvB5I,EAAOwU,WAAaT,EAAK3H,WA/GzBwH,CAAsB5T,GAID,MAArBA,EAAOwU,aACPtB,EAAYL,GAAS7S,EAAOiI,GAAGC,IAAO8K,EAAY9K,MAE9ClI,EAAOwU,WAAa7L,GAAWuK,IAAoC,IAAtBlT,EAAOwU,cACpD3X,EAAgBmD,GAAQ0S,oBAAqB,GAGjDlJ,EAAO6B,GAAc6H,EAAW,EAAGlT,EAAOwU,YAC1CxU,EAAOiI,GAAGE,IAASqB,EAAK+J,cACxBvT,EAAOiI,GAAGG,IAAQoB,EAAKgK,cAQtB1X,EAAI,EAAGA,EAAI,GAAqB,MAAhBkE,EAAOiI,GAAGnM,KAAcA,EACzCkE,EAAOiI,GAAGnM,GAAKf,EAAMe,GAAKkX,EAAYlX,GAInCA,KAAAA,EAAI,EAAGA,IACVkE,EAAOiI,GAAGnM,GAAKf,EAAMe,GAAsB,MAAhBkE,EAAOiI,GAAGnM,GAAqB,IAANA,EAAU,EAAI,EAAKkE,EAAOiI,GAAGnM,GAI7D,KAApBkE,EAAOiI,GAAGI,KACgB,IAAtBrI,EAAOiI,GAAGK,KACY,IAAtBtI,EAAOiI,GAAGM,KACiB,IAA3BvI,EAAOiI,GAAGO,MACdxI,EAAOyU,UAAW,EAClBzU,EAAOiI,GAAGI,IAAQ,GAGtBrI,EAAO5B,IAAM4B,EAAOsT,QAAUjI,GA97BzBqJ,SAAY5L,EAAGhM,EAAGuQ,EAAGwD,EAAGG,EAAGrJ,EAAGgN,GAG/BnL,IAAAA,EAYGA,OAVHV,EAAI,KAAOA,GAAK,GAEhBU,EAAO,IAAI/N,KAAKqN,EAAI,IAAKhM,EAAGuQ,EAAGwD,EAAGG,EAAGrJ,EAAGgN,GACpC9T,SAAS2I,EAAKiK,gBACdjK,EAAKoL,YAAY9L,IAGrBU,EAAO,IAAI/N,KAAKqN,EAAGhM,EAAGuQ,EAAGwD,EAAGG,EAAGrJ,EAAGgN,GAG/BnL,IA+6BmD5O,MAAM,KAAMG,GACtEkY,EAAkBjT,EAAOsT,QAAUtT,EAAO5B,GAAGyN,YAAc7L,EAAO5B,GAAGyW,SAIlD,MAAf7U,EAAON,MACPM,EAAO5B,GAAG0W,cAAc9U,EAAO5B,GAAG2W,gBAAkB/U,EAAON,MAG3DM,EAAOyU,WACPzU,EAAOiI,GAAGI,IAAQ,IAIlBrI,EAAO+H,SAA6B,IAAhB/H,EAAO+H,GAAGsF,GAAqBrN,EAAO+H,GAAGsF,IAAM4F,IACnEpW,EAAgBmD,GAAQnC,iBAAkB,IA+D9CmX,IAAAA,GAAmB,mJACnBC,GAAgB,8IAEhBC,GAAU,wBAEVC,GAAW,CACX,CAAC,eAAgB,uBACjB,CAAC,aAAc,mBACf,CAAC,eAAgB,kBACjB,CAAC,aAAc,eAAe,GAC9B,CAAC,WAAY,eACb,CAAC,UAAW,cAAc,GAC1B,CAAC,aAAc,cACf,CAAC,WAAY,SAEZ,CAAA,aAAc,eACf,CAAC,YAAa,eAAe,GAC7B,CAAC,UAAW,UAIZC,GAAW,CACX,CAAC,gBAAiB,uBAClB,CAAC,gBAAiB,sBAClB,CAAC,WAAY,kBACb,CAAC,QAAS,aACV,CAAC,cAAe,qBAChB,CAAC,cAAe,oBAChB,CAAC,SAAU,gBACX,CAAC,OAAQ,YACT,CAAC,KAAM,SAGPC,GAAkB,sBAGbC,SAAAA,GAActV,GACflE,IAAAA,EAAGyZ,EAGHC,EAAWC,EAAYC,EAAYC,EAFnCC,EAAS5V,EAAOT,GAChB8F,EAAQ2P,GAAiBa,KAAKD,IAAWX,GAAcY,KAAKD,GAG5DvQ,GAAAA,EAAO,CAGFvJ,IAFLe,EAAgBmD,GAAQvC,KAAM,EAEzB3B,EAAI,EAAGyZ,EAAIJ,GAASpZ,OAAQD,EAAIyZ,EAAGzZ,IAChCqZ,GAAAA,GAASrZ,GAAG,GAAG+Z,KAAKxQ,EAAM,IAAK,CAC/BoQ,EAAaN,GAASrZ,GAAG,GACzB0Z,GAA+B,IAAnBL,GAASrZ,GAAG,GACxB,MAGJ2Z,GAAc,MAAdA,EAEA,YADAzV,EAAOjC,UAAW,GAGlBsH,GAAAA,EAAM,GAAI,CACLvJ,IAAAA,EAAI,EAAGyZ,EAAIH,GAASrZ,OAAQD,EAAIyZ,EAAGzZ,IAChCsZ,GAAAA,GAAStZ,GAAG,GAAG+Z,KAAKxQ,EAAM,IAAK,CAE/BqQ,GAAcrQ,EAAM,IAAM,KAAO+P,GAAStZ,GAAG,GAC7C,MAGJ4Z,GAAc,MAAdA,EAEA,YADA1V,EAAOjC,UAAW,GAItB,IAACyX,GAA2B,MAAdE,EAEd,YADA1V,EAAOjC,UAAW,GAGlBsH,GAAAA,EAAM,GAAI,CACN6P,IAAAA,GAAQW,KAAKxQ,EAAM,IAInB,YADArF,EAAOjC,UAAW,GAFlB4X,EAAW,IAMnB3V,EAAOR,GAAKiW,GAAcC,GAAc,KAAOC,GAAY,IAC3DG,GAA0B9V,QAE1BA,EAAOjC,UAAW,EAKtBH,IAAAA,GAAU,0LAkBLmY,SAAAA,GAAeC,GAChBpN,IAAAA,EAAOI,SAASgN,EAAS,IACzBpN,OAAAA,GAAQ,GACD,IAAOA,EACPA,GAAQ,IACR,KAAOA,EAEXA,EAsBPqN,IAAAA,GAAa,CACbC,GAAI,EACJC,IAAK,EACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,KAiBAC,SAAAA,GAAkB5W,GACnBqF,IAzE2B2Q,EAASa,EAAUC,EAAQC,EAASC,EAAWC,EAC1EC,EAwEA7R,EAAQzH,GAAQiY,KAAuB7V,EAAOT,GA7CzC+F,QAAQ,oBAAqB,KAAKA,QAAQ,WAAY,KAAKA,QAAQ,SAAU,IAAIA,QAAQ,SAAU,KA8CxGD,GAAAA,EAAO,CACH8R,IAAAA,GA3EuBnB,EA2EiB3Q,EAAM,GA3EdwR,EA2EkBxR,EAAM,GA3EdyR,EA2EkBzR,EAAM,GA3EhB0R,EA2EoB1R,EAAM,GA3EjB2R,EA2EqB3R,EAAM,GA3EhB4R,EA2EoB5R,EAAM,GA1EpG6R,EAAS,CACTnB,GAAeC,GACf3L,GAAyBnB,QAAQ2N,GACjC7N,SAAS8N,EAAQ,IACjB9N,SAAS+N,EAAS,IAClB/N,SAASgO,EAAW,KAGpBC,GACAC,EAAOlb,KAAKgN,SAASiO,EAAW,KAG7BC,GA+DC,IA7CHE,SAAaC,EAAYC,EAAatX,GACvCqX,OAAAA,GAEsB9J,GAA2BrE,QAAQmO,KACrC,IAAI5b,KAAK6b,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAAIzC,WAEzEhY,EAAgBmD,GAAQnC,iBAAkB,EAC1CmC,EAAOjC,UAAW,GACX,GAqCNqZ,CAAa/R,EAAM,GAAI8R,EAAanX,GACrC,OAGJA,EAAOiI,GAAKkP,EACZnX,EAAON,KAvBN6X,SAAgBC,EAAWC,EAAgBC,GAC5CF,GAAAA,EACOvB,OAAAA,GAAWuB,GACf,GAAIC,EAEA,OAAA,EAEHE,IAAAA,EAAK3O,SAAS0O,EAAW,IACzB5a,EAAI6a,EAAK,IACN9G,OADgB8G,EAAK7a,GAAK,IACtB,GAAKA,EAcFya,CAAgBlS,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAExDrF,EAAO5B,GAAKiN,GAAczQ,MAAM,KAAMoF,EAAOiI,IAC7CjI,EAAO5B,GAAG0W,cAAc9U,EAAO5B,GAAG2W,gBAAkB/U,EAAON,MAE3D7C,EAAgBmD,GAAQpC,SAAU,OAElCoC,EAAOjC,UAAW,EAgDjB+X,SAAAA,GAA0B9V,GAE3BA,GAAAA,EAAOR,KAAO7E,EAAMid,SAIpB5X,GAAAA,EAAOR,KAAO7E,EAAMkd,SAApB7X,CAIJA,EAAOiI,GAAK,GACZpL,EAAgBmD,GAAQhD,OAAQ,EAG5B4Y,IACA9Z,EAAGwb,EAAa1P,EAAQjD,EAAOmT,EAD/BlC,EAAS,GAAK5V,EAAOT,GAErBwY,EAAenC,EAAO7Z,OACtBic,EAAyB,EAIxBlc,IAFL8L,EAAS1C,EAAalF,EAAOR,GAAIQ,EAAOH,SAASwF,MAAMf,IAAqB,GAEvExI,EAAI,EAAGA,EAAI8L,EAAO7L,OAAQD,IAC3B6I,EAAQiD,EAAO9L,IACfwb,GAAe1B,EAAOvQ,MAAM8B,GAAsBxC,EAAO3E,KAAY,IAAI,OAIrE8X,EAAUlC,EAAOvR,OAAO,EAAGuR,EAAO1M,QAAQoO,KAC9Bvb,OAAS,GACjBc,EAAgBmD,GAAQ9C,YAAYlB,KAAK8b,GAE7ClC,EAASA,EAAO5T,MAAM4T,EAAO1M,QAAQoO,GAAeA,EAAYvb,QAChEic,GAA0BV,EAAYvb,QAGtC0I,EAAqBE,IACjB2S,EACAza,EAAgBmD,GAAQhD,OAAQ,EAGhCH,EAAgBmD,GAAQ/C,aAAajB,KAAK2I,GAE9CqD,GAAwBrD,EAAO2S,EAAatX,IAEvCA,EAAOzB,UAAY+Y,GACxBza,EAAgBmD,GAAQ/C,aAAajB,KAAK2I,GAKlD9H,EAAgBmD,GAAQ5C,cAAgB2a,EAAeC,EACnDpC,EAAO7Z,OAAS,GAChBc,EAAgBmD,GAAQ9C,YAAYlB,KAAK4Z,GAIzC5V,EAAOiI,GAAGI,KAAS,KACiB,IAApCxL,EAAgBmD,GAAQvB,SACxBuB,EAAOiI,GAAGI,IAAQ,IAClBxL,EAAgBmD,GAAQvB,aAAUD,GAGtC3B,EAAgBmD,GAAQtC,gBAAkBsC,EAAOiI,GAAGjG,MAAM,GAC1DnF,EAAgBmD,GAAQrC,SAAWqC,EAAOmP,UAE1CnP,EAAOiI,GAAGI,IAOL4P,SAAiBxb,EAAQyb,EAAMva,GAChCwa,IAAAA,EAEAxa,GAAY,MAAZA,EAEOua,OAAAA,EAEPzb,OAAuB,MAAvBA,EAAO2b,aACA3b,EAAO2b,aAAaF,EAAMva,GACX,MAAflB,EAAOyS,OAEdiJ,EAAO1b,EAAOyS,KAAKvR,KACPua,EAAO,KACfA,GAAQ,IAEPC,GAAiB,KAATD,IACTA,EAAO,GAEJA,GAGAA,EA5BOD,CAAgBjY,EAAOH,QAASG,EAAOiI,GAAGI,IAAOrI,EAAOmP,WAE1E4D,GAAgB/S,GAChByS,GAAczS,QA7DV4W,GAAkB5W,QAJlBsV,GAActV,GAmKbqY,SAAAA,GAAerY,GAChBjF,IAAAA,EAAQiF,EAAOT,GACf/C,EAASwD,EAAOR,GAIhBzE,OAFJiF,EAAOH,QAAUG,EAAOH,SAAWkS,GAAU/R,EAAOP,IAEtC,OAAV1E,QAA8ByD,IAAXhC,GAAkC,KAAVzB,EACpC4D,EAAc,CAACtB,WAAW,KAGhB,iBAAVtC,IACPiF,EAAOT,GAAKxE,EAAQiF,EAAOH,QAAQyY,SAASvd,IAG5CmF,EAASnF,GACF,IAAIgF,EAAO0S,GAAc1X,KACzBS,EAAOT,GACdiF,EAAO5B,GAAKrD,EACLD,EAAQ0B,GAtFd+b,SAAyBvY,GAC1BwY,IAAAA,EACAC,EAEAC,EACA5c,EACA6c,EAEA3Y,GAAqB,IAArBA,EAAOR,GAAGzD,OAGV,OAFAc,EAAgBmD,GAAQzC,eAAgB,OACxCyC,EAAO5B,GAAK,IAAI3C,KAAKmD,MAIpB9C,IAAAA,EAAI,EAAGA,EAAIkE,EAAOR,GAAGzD,OAAQD,IAC9B6c,EAAe,EACfH,EAAavZ,EAAW,GAAIe,GACN,MAAlBA,EAAOsT,UACPkF,EAAWlF,QAAUtT,EAAOsT,SAEhCkF,EAAWhZ,GAAKQ,EAAOR,GAAG1D,GAC1Bga,GAA0B0C,GAErB1a,EAAQ0a,KAKbG,GAAgB9b,EAAgB2b,GAAYpb,cAG5Cub,GAAkE,GAAlD9b,EAAgB2b,GAAYvb,aAAalB,OAEzDc,EAAgB2b,GAAYI,MAAQD,GAEjB,MAAfD,GAAuBC,EAAeD,KACtCA,EAAcC,EACdF,EAAaD,IAIrBnc,EAAO2D,EAAQyY,GAAcD,GA8CzBD,CAAyBvY,GAClBxD,EACPsZ,GAA0B9V,GAYzB6Y,SAAgB7Y,GACjBjF,IAAAA,EAAQiF,EAAOT,GACfjE,EAAYP,GACZiF,EAAO5B,GAAK,IAAI3C,KAAKd,EAAM0Y,OACpB7X,EAAOT,GACdiF,EAAO5B,GAAK,IAAI3C,KAAKV,EAAMuB,WACH,iBAAVvB,EAxPb+d,SAAiB9Y,GAClBsH,IAAAA,EAAU+N,GAAgBQ,KAAK7V,EAAOT,IAE1B,OAAZ+H,GAKJgO,GAActV,IACU,IAApBA,EAAOjC,kBACAiC,EAAOjC,SAKlB6Y,GAAkB5W,IACM,IAApBA,EAAOjC,kBACAiC,EAAOjC,SAMlBpD,EAAMoe,wBAAwB/Y,MAnB1BA,EAAO5B,GAAK,IAAI3C,MAAM6L,EAAQ,IAqP9BwR,CAAiB9Y,GACVlF,EAAQC,IACfiF,EAAOiI,GAAKvM,EAAIX,EAAMiH,MAAM,GAAI,SAAU7B,GAC/B6I,OAAAA,SAAS7I,EAAK,MAEzB4S,GAAgB/S,IACT3E,EAASN,GAtEfie,SAAiBhZ,GAClBA,IAAAA,EAAO5B,GAAP4B,CAIAlE,IAAAA,EAAIyH,EAAqBvD,EAAOT,IACpCS,EAAOiI,GAAKvM,EAAI,CAACI,EAAE8M,KAAM9M,EAAEyN,MAAOzN,EAAEmS,KAAOnS,EAAE0N,KAAM1N,EAAEoc,KAAMpc,EAAEmd,OAAQnd,EAAEod,OAAQpd,EAAEqd,aAAc,SAAUhZ,GAC9FA,OAAAA,GAAO6I,SAAS7I,EAAK,MAGhC4S,GAAgB/S,IA6DZgZ,CAAiBhZ,GACVzE,EAASR,GAEhBiF,EAAO5B,GAAK,IAAI3C,KAAKV,GAErBJ,EAAMoe,wBAAwB/Y,GA7B9B6Y,CAAgB7Y,GAGflC,EAAQkC,KACTA,EAAO5B,GAAK,MAGT4B,IA0BFrD,SAAAA,GAAkB5B,EAAOyB,EAAQC,EAAQC,EAAQ0c,GAClDtG,IAnEAjX,EAmEAiX,EAAI,GAoBDuG,OAlBQ,IAAX5c,IAA8B,IAAXA,IACnBC,EAASD,EACTA,OAAS+B,IAGRnD,EAASN,IA5iFTue,SAAcnZ,GACflF,GAAAA,OAAOse,oBACCte,OAA2C,IAA3CA,OAAOse,oBAAoBpZ,GAAKpE,OAEpCyd,IAAAA,EACCA,IAAAA,KAAKrZ,EACFA,GAAAA,EAAI/D,eAAeod,GACZ,OAAA,EAGR,OAAA,EAkiFaF,CAAcve,IAC7BD,EAAQC,IAA2B,IAAjBA,EAAMgB,UAC7BhB,OAAQyD,GAIZsU,EAAExT,kBAAmB,EACrBwT,EAAEQ,QAAUR,EAAEnT,OAASyZ,EACvBtG,EAAErT,GAAKhD,EACPqW,EAAEvT,GAAKxE,EACP+X,EAAEtT,GAAKhD,EACPsW,EAAEvU,QAAU7B,GArFRb,EAAM,IAAIkE,EAAO0S,GAAc4F,GAuFXvF,MAtFhB2B,WAEJ5Y,EAAI4d,IAAI,EAAG,KACX5d,EAAI4Y,cAAWjW,GAGZ3C,EAmFFuY,SAAAA,GAAarZ,EAAOyB,EAAQC,EAAQC,GAClCC,OAAAA,GAAiB5B,EAAOyB,EAAQC,EAAQC,GAAQ,GAxQ3D/B,EAAMoe,wBAA0BrX,EAC5B,iVAIA,SAAU1B,GACNA,EAAO5B,GAAK,IAAI3C,KAAKuE,EAAOT,IAAMS,EAAOsT,QAAU,OAAS,OAKpE3Y,EAAMid,SAAW,aAGjBjd,EAAMkd,SAAW,aA6Pb6B,IAAAA,GAAehY,EACf,qGACA,WACQiY,IAAAA,EAAQvF,GAAYxZ,MAAM,KAAMC,WAChC,OAAA,KAAKiD,WAAa6b,EAAM7b,UACjB6b,EAAQ,KAAO,KAAOA,EAEtBhb,MAKfib,GAAelY,EACf,qGACA,WACQiY,IAAAA,EAAQvF,GAAYxZ,MAAM,KAAMC,WAChC,OAAA,KAAKiD,WAAa6b,EAAM7b,UACjB6b,EAAQ,KAAO,KAAOA,EAEtBhb,MAUVkb,SAAAA,GAAOje,EAAIke,GACZje,IAAAA,EAAKC,EAIL,GAHmB,IAAnBge,EAAQ/d,QAAgBjB,EAAQgf,EAAQ,MACxCA,EAAUA,EAAQ,KAEjBA,EAAQ/d,OACFqY,OAAAA,KAGNtY,IADLD,EAAMie,EAAQ,GACThe,EAAI,EAAGA,EAAIge,EAAQ/d,SAAUD,EACzBge,EAAQhe,GAAGgC,YAAagc,EAAQhe,GAAGF,GAAIC,KACxCA,EAAMie,EAAQhe,IAGfD,OAAAA,EAgBPwX,IAIA0G,GAAW,CAAC,OAAQ,UAAW,QAAS,OAAQ,MAAO,OAAQ,SAAU,SAAU,eAgC9EC,SAAAA,GAAUC,GACXxW,IAAAA,EAAkBF,EAAqB0W,GACvCC,EAAQzW,EAAgBmF,MAAQ,EAChCuR,EAAW1W,EAAgB2W,SAAW,EACtCtQ,EAASrG,EAAgB8F,OAAS,EAClC8Q,EAAQ5W,EAAgBsI,MAAQtI,EAAgB6W,SAAW,EAC3DC,EAAO9W,EAAgBwK,KAAO,EAC9BQ,EAAQhL,EAAgByU,MAAQ,EAChCvJ,EAAUlL,EAAgBwV,QAAU,EACpClK,EAAUtL,EAAgByV,QAAU,EACpCsB,EAAe/W,EAAgB0V,aAAe,EAE7Cpb,KAAAA,SA1CA0c,SAAgB3d,GAChB,IAAA,IAAIiF,KAAOjF,EACR,IAAmC,IAAjCoM,GAAQ9N,KAAK2e,GAAUhY,IAA0B,MAAVjF,EAAEiF,IAAiB5D,MAAMrB,EAAEiF,IAC7D,OAAA,EAKV,IADD2Y,IAAAA,GAAiB,EACZ5e,EAAI,EAAGA,EAAIie,GAAShe,SAAUD,EAC/BgB,GAAAA,EAAEid,GAASje,IAAK,CACZ4e,GAAAA,EACO,OAAA,EAEPC,WAAW7d,EAAEid,GAASje,OAAS2E,EAAM3D,EAAEid,GAASje,OAChD4e,GAAiB,GAKtB,OAAA,EAuBSD,CAAgBhX,GAG3BmX,KAAAA,eAAiBJ,EACR,IAAVzL,EACU,IAAVJ,EACQ,IAARF,EAAe,GAAK,GAGnBoM,KAAAA,OAASN,EACF,EAARF,EAICS,KAAAA,SAAWhR,EACD,EAAXqQ,EACQ,GAARD,EAECa,KAAAA,MAAQ,GAERlb,KAAAA,QAAUkS,KAEViJ,KAAAA,UAGAC,SAAAA,GAAY9a,GACVA,OAAAA,aAAe6Z,GAGjBkB,SAAAA,GAAU7a,GACXA,OAAAA,EAAS,GACyB,EAA3BC,KAAK6a,OAAO,EAAI9a,GAEhBC,KAAK6a,MAAM9a,GAMjB+a,SAAAA,GAAQzW,EAAO0W,GACpB3W,EAAeC,EAAO,EAAG,EAAG,WACpByW,IAAAA,EAAS,KAAKE,YACdC,EAAO,IAKJA,OAJHH,EAAS,IACTA,GAAUA,EACVG,EAAO,KAEJA,EAAOzX,KAAYsX,EAAS,IAAK,GAAKC,EAAYvX,IAAYsX,EAAU,GAAI,KAI3FA,GAAO,IAAK,KACZA,GAAO,KAAM,IAIbrU,GAAc,IAAMH,IACpBG,GAAc,KAAMH,IACpBiB,GAAc,CAAC,IAAK,MAAO,SAAU9M,EAAOqK,EAAOpF,GAC/CA,EAAOsT,SAAU,EACjBtT,EAAON,KAAO8b,GAAiB5U,GAAkB7L,KAQjD0gB,IAAAA,GAAc,kBAETD,SAAAA,GAAiBE,EAAS9F,GAC3B+F,IAAAA,GAAW/F,GAAU,IAAIvQ,MAAMqW,GAE/BC,GAAY,OAAZA,EACO,OAAA,KAGPC,IACAC,IADUF,EAAQA,EAAQ5f,OAAS,IAAM,IACtB,IAAIsJ,MAAMoW,KAAgB,CAAC,IAAK,EAAG,GACtD9M,EAAuB,GAAXkN,EAAM,GAAWpb,EAAMob,EAAM,IAEtClN,OAAY,IAAZA,EACL,EACa,MAAbkN,EAAM,GAAalN,GAAWA,EAI3BmN,SAAAA,GAAgB/gB,EAAOghB,GACxBlgB,IAAAA,EAAKmgB,EACLD,OAAAA,EAAMpc,QACN9D,EAAMkgB,EAAME,QACZD,GAAQ9b,EAASnF,IAAUS,EAAOT,GAASA,EAAMuB,UAAY8X,GAAYrZ,GAAOuB,WAAaT,EAAIS,UAEjGT,EAAIuC,GAAG8d,QAAQrgB,EAAIuC,GAAG9B,UAAY0f,GAClCrhB,EAAMsF,aAAapE,GAAK,GACjBA,GAEAuY,GAAYrZ,GAAOohB,QAIzBC,SAAAA,GAAetf,GAGb,OAA6C,IAA5CwD,KAAK6a,MAAMre,EAAEsB,GAAGie,oBAAsB,IAqJzCC,SAAAA,KACE,QAAA,KAAKxe,YAAY,KAAK6B,QAA2B,IAAjB,KAAKC,SA/IhDjF,EAAMsF,aAAe,aAmJjBsc,IAAAA,GAAc,2DAKdC,GAAW,sKAENC,SAAAA,GAAgB1hB,EAAOgH,GACxBkY,IAGAsB,EACAmB,EACAC,EALA1C,EAAWlf,EAEXsK,EAAQ,KAuDLqX,OAlDHzB,GAAWlgB,GACXkf,EAAW,CACPtF,GAAK5Z,EAAM6f,cACXvN,EAAKtS,EAAM8f,MACX7J,EAAKjW,EAAM+f,SAERvf,EAASR,IAChBkf,EAAW,GACPlY,EACAkY,EAASlY,GAAOhH,EAEhBkf,EAASO,aAAezf,IAElBsK,EAAQkX,GAAY1G,KAAK9a,KACnCwgB,EAAqB,MAAblW,EAAM,IAAe,EAAI,EACjC4U,EAAW,CACPnR,EAAK,EACLuE,EAAK5M,EAAM4E,EAAM+C,KAAiCmT,EAClD1K,EAAKpQ,EAAM4E,EAAMgD,KAAiCkT,EAClDze,EAAK2D,EAAM4E,EAAMiD,KAAiCiT,EAClD5T,EAAKlH,EAAM4E,EAAMkD,KAAiCgT,EAClD5G,GAAKlU,EAAMya,GAA8B,IAArB7V,EAAMmD,MAAwB+S,KAE5ClW,EAAQmX,GAAS3G,KAAK9a,KAChCwgB,EAAqB,MAAblW,EAAM,IAAe,EAAI,EACjC4U,EAAW,CACPnR,EAAI8T,GAASvX,EAAM,GAAIkW,GACvBvK,EAAI4L,GAASvX,EAAM,GAAIkW,GACvB1H,EAAI+I,GAASvX,EAAM,GAAIkW,GACvBlO,EAAIuP,GAASvX,EAAM,GAAIkW,GACvB1K,EAAI+L,GAASvX,EAAM,GAAIkW,GACvBze,EAAI8f,GAASvX,EAAM,GAAIkW,GACvB5T,EAAIiV,GAASvX,EAAM,GAAIkW,KAER,MAAZtB,EACPA,EAAW,GACgB,WAApB,EAAOA,KAA0B,SAAUA,GAAY,OAAQA,KACtE0C,EA0CCE,SAAkBC,EAAMnD,GACzB9d,IAAAA,EACA,IAAEihB,EAAKhf,YAAa6b,EAAM7b,UACnB,MAAA,CAAC0c,aAAc,EAAG1Q,OAAQ,GAGrC6P,EAAQmC,GAAgBnC,EAAOmD,GAC3BA,EAAKC,SAASpD,GACd9d,EAAMmhB,GAA0BF,EAAMnD,KAEtC9d,EAAMmhB,GAA0BrD,EAAOmD,IACnCtC,cAAgB3e,EAAI2e,aACxB3e,EAAIiO,QAAUjO,EAAIiO,QAGfjO,OAAAA,EAzDOghB,CAAkBzI,GAAY6F,EAAS9a,MAAOiV,GAAY6F,EAAS/a,MAE7E+a,EAAW,IACFtF,GAAKgI,EAAQnC,aACtBP,EAASjJ,EAAI2L,EAAQ7S,QAGzB4S,EAAM,IAAI1C,GAASC,GAEfgB,GAAWlgB,IAAUkB,EAAWlB,EAAO,aACvC2hB,EAAI7c,QAAU9E,EAAM8E,SAGjB6c,EAMFE,SAAAA,GAAUK,EAAK1B,GAIhB1f,IAAAA,EAAMohB,GAAOtC,WAAWsC,EAAI3X,QAAQ,IAAK,MAEtC,OAACnH,MAAMtC,GAAO,EAAIA,GAAO0f,EAG3ByB,SAAAA,GAA0BF,EAAMnD,GACjC9d,IAAAA,EAAM,GAUHA,OARPA,EAAIiO,OAAS6P,EAAMpQ,QAAUuT,EAAKvT,QACC,IAA9BoQ,EAAM/Q,OAASkU,EAAKlU,QACrBkU,EAAKb,QAAQxC,IAAI5d,EAAIiO,OAAQ,KAAKoT,QAAQvD,MACxC9d,EAAIiO,OAGVjO,EAAI2e,cAAgBb,GAAUmD,EAAKb,QAAQxC,IAAI5d,EAAIiO,OAAQ,KAEpDjO,EAsBFshB,SAAAA,GAAYC,EAAW7a,GACrB,OAAA,SAAUlD,EAAKge,GACdC,IAAKC,EAWF,OATQ,OAAXF,GAAoBlf,OAAOkf,KAC3B/a,EAAgBC,EAAM,YAAcA,EAAQ,uDAAyDA,EAAO,kGAE5Ggb,EAAMle,EAAKA,EAAMge,EAAQA,EAASE,GAKtCC,GAAY,KADNf,GADNpd,EAAqB,iBAARA,GAAoBA,EAAMA,EACbge,GACHD,GAChB,MAINI,SAAAA,GAAajY,EAAK0U,EAAUwD,EAAUxd,GACvCua,IAAAA,EAAeP,EAASW,cACxBL,EAAOW,GAASjB,EAASY,OACzB/Q,EAASoR,GAASjB,EAASa,SAE1BvV,EAAIzH,YAKTmC,EAA+B,MAAhBA,GAA8BA,EAEzC6J,GACAQ,GAAS/E,EAAK+D,GAAI/D,EAAK,SAAWuE,EAAS2T,GAE3ClD,GACAlR,GAAM9D,EAAK,OAAQ+D,GAAI/D,EAAK,QAAUgV,EAAOkD,GAE7CjD,GACAjV,EAAInH,GAAG8d,QAAQ3W,EAAInH,GAAG9B,UAAYke,EAAeiD,GAEjDxd,GACAtF,EAAMsF,aAAasF,EAAKgV,GAAQzQ,IApFxC2S,GAAe7gB,GAAKoe,GAAS9e,UAC7BuhB,GAAeiB,QAvVNC,WACElB,OAAAA,GAAe7d,MA6atB6a,IAAAA,GAAW0D,GAAY,EAAG,OAC1BS,GAAWT,IAAa,EAAG,YA0HtBU,SAAAA,GAAW3hB,EAAGC,GAEf2hB,IAAAA,EAA0C,IAAvB3hB,EAAEyM,OAAS1M,EAAE0M,SAAiBzM,EAAEoN,QAAUrN,EAAEqN,SAE/DwU,EAAS7hB,EAAE+f,QAAQxC,IAAIqE,EAAgB,UAcpC,QAAEA,GAXL3hB,EAAI4hB,EAAS,GAGH5hB,EAAI4hB,IAAWA,EAFf7hB,EAAE+f,QAAQxC,IAAIqE,EAAiB,EAAG,YAMlC3hB,EAAI4hB,IAFJ7hB,EAAE+f,QAAQxC,IAAIqE,EAAiB,EAAG,UAETC,MAIF,EA6FhCthB,SAAAA,GAAQsF,GACTic,IAAAA,EAEAjc,YAAQvD,IAARuD,EACO,KAAKlC,QAAQ4R,OAGC,OADrBuM,EAAgBjM,GAAUhQ,MAEjBlC,KAAAA,QAAUme,GAEZ,MApGfrjB,EAAMsjB,cAAgB,uBACtBtjB,EAAMujB,iBAAmB,yBAuGrBC,IAAAA,GAAOzc,EACP,kJACA,SAAUK,GACFA,YAAQvD,IAARuD,EACO,KAAKiD,aAEL,KAAKvI,OAAOsF,KAKtBiD,SAAAA,KACE,OAAA,KAAKnF,QAGZue,IAAAA,GAAgB,IAChBC,GAAgB,GAAKD,GACrBE,GAAc,GAAKD,GACnBE,GAAmB,QAAwBD,GAGtCE,SAAAA,GAAMC,EAAUC,GACd,OAACD,EAAWC,EAAUA,GAAWA,EAGnCC,SAAAA,GAAiB7V,EAAGhM,EAAGuQ,GAExBvE,OAAAA,EAAI,KAAOA,GAAK,EAET,IAAIrN,KAAKqN,EAAI,IAAKhM,EAAGuQ,GAAKkR,GAE1B,IAAI9iB,KAAKqN,EAAGhM,EAAGuQ,GAAG/Q,UAIxBsiB,SAAAA,GAAe9V,EAAGhM,EAAGuQ,GAEtBvE,OAAAA,EAAI,KAAOA,GAAK,EAETrN,KAAK6P,IAAIxC,EAAI,IAAKhM,EAAGuQ,GAAKkR,GAE1B9iB,KAAK6P,IAAIxC,EAAGhM,EAAGuQ,GAuKrBwR,SAAAA,GAAwBla,EAAOma,GACpCpa,EAAe,EAAG,CAACC,EAAOA,EAAM5I,QAAS,EAAG+iB,GA+DvCC,SAAAA,GAAqBhkB,EAAOgR,EAAMC,EAASN,EAAKC,GACjDqT,IAAAA,EACAjkB,OAAS,MAATA,EACOsR,GAAW,KAAMX,EAAKC,GAAK/C,MAG9BmD,GADJiT,EAAcxS,GAAYzR,EAAO2Q,EAAKC,MAElCI,EAAOiT,GAMVC,SAAWnL,EAAU/H,EAAMC,EAASN,EAAKC,GAC1CuT,IAAAA,EAAgBpT,GAAmBgI,EAAU/H,EAAMC,EAASN,EAAKC,GACjEnC,EAAO6B,GAAc6T,EAActW,KAAM,EAAGsW,EAAc9S,WAKvD,OAHFxD,KAAAA,KAAKY,EAAK+B,kBACVhC,KAAAA,MAAMC,EAAK+J,eACX/J,KAAAA,KAAKA,EAAKgK,cACR,MAXepY,KAAK,KAAML,EAAOgR,EAAMC,EAASN,EAAKC,IAjFhEjH,EAAe,EAAG,CAAC,KAAM,GAAI,EAAG,WACrB,OAAA,KAAKoP,WAAa,MAG7BpP,EAAe,EAAG,CAAC,KAAM,GAAI,EAAG,WACrB,OAAA,KAAKya,cAAgB,MAOhCN,GAAuB,OAAY,YACnCA,GAAuB,QAAY,YACnCA,GAAuB,OAAS,eAChCA,GAAuB,QAAS,eAIhC7b,EAAa,WAAY,MACzBA,EAAa,cAAe,MAI5BY,EAAgB,WAAY,GAC5BA,EAAgB,cAAe,GAK/BmD,GAAc,IAAUL,IACxBK,GAAc,IAAUL,IACxBK,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,OAAUR,GAAWN,GACnCc,GAAc,OAAUR,GAAWN,GACnCc,GAAc,QAAUP,GAAWN,GACnCa,GAAc,QAAUP,GAAWN,GAEnC4B,GAAkB,CAAC,OAAQ,QAAS,OAAQ,SAAU,SAAU/M,EAAOgR,EAAM/L,EAAQ2E,GACjFoH,EAAKpH,EAAMN,OAAO,EAAG,IAAM5D,EAAM1F,KAGrC+M,GAAkB,CAAC,KAAM,MAAO,SAAU/M,EAAOgR,EAAM/L,EAAQ2E,GAC3DoH,EAAKpH,GAAShK,EAAMoO,kBAAkBhO,KAqD1C2J,EAAe,IAAK,EAAG,KAAM,WAI7B1B,EAAa,UAAW,KAIxBY,EAAgB,UAAW,GAI3BmD,GAAc,IAAKjB,GACnB+B,GAAc,IAAK,SAAU9M,EAAOqK,GAChCA,EAAM+C,IAA8B,GAApB1H,EAAM1F,GAAS,KAWnC2J,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,QAIrC1B,EAAa,OAAQ,KAGrBY,EAAgB,OAAQ,GAIxBmD,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,KAAM,SAAUG,EAAUzK,GAE7ByK,OAAAA,EACJzK,EAAO2iB,yBAA2B3iB,EAAO4iB,cAC1C5iB,EAAO6iB,iCAGbzX,GAAc,CAAC,IAAK,MAAOO,IAC3BP,GAAc,KAAM,SAAU9M,EAAOqK,GACjCA,EAAMgD,IAAQ3H,EAAM1F,EAAMsK,MAAMc,GAAW,MAK3CoZ,IAAAA,GAAmBpW,GAAW,QAAQ,GAI1CzE,EAAe,MAAO,CAAC,OAAQ,GAAI,OAAQ,aAI3C1B,EAAa,YAAa,OAG1BY,EAAgB,YAAa,GAI7BmD,GAAc,MAAQT,IACtBS,GAAc,OAAQf,GACtB6B,GAAc,CAAC,MAAO,QAAS,SAAU9M,EAAOqK,EAAOpF,GACnDA,EAAOwU,WAAa/T,EAAM1F,KAc9B2J,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,UAIlC1B,EAAa,SAAU,KAIvBY,EAAgB,SAAU,IAI1BmD,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/B8B,GAAc,CAAC,IAAK,MAAOS,IAIvBkX,IAAAA,GAAerW,GAAW,WAAW,GAIzCzE,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,UAIlC1B,EAAa,SAAU,KAIvBY,EAAgB,SAAU,IAI1BmD,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/B8B,GAAc,CAAC,IAAK,MAAOU,IAIvBkX,IA+CA9a,GA/CA8a,GAAetW,GAAW,WAAW,GAgDpCxE,IA5CLD,EAAe,IAAK,EAAG,EAAG,WACf,SAAG,KAAKyU,cAAgB,OAGnCzU,EAAe,EAAG,CAAC,KAAM,GAAI,EAAG,WACrB,SAAG,KAAKyU,cAAgB,MAGnCzU,EAAe,EAAG,CAAC,MAAO,GAAI,EAAG,eACjCA,EAAe,EAAG,CAAC,OAAQ,GAAI,EAAG,WACvB,OAAqB,GAArB,KAAKyU,gBAEhBzU,EAAe,EAAG,CAAC,QAAS,GAAI,EAAG,WACxB,OAAqB,IAArB,KAAKyU,gBAEhBzU,EAAe,EAAG,CAAC,SAAU,GAAI,EAAG,WACzB,OAAqB,IAArB,KAAKyU,gBAEhBzU,EAAe,EAAG,CAAC,UAAW,GAAI,EAAG,WAC1B,OAAqB,IAArB,KAAKyU,gBAEhBzU,EAAe,EAAG,CAAC,WAAY,GAAI,EAAG,WAC3B,OAAqB,IAArB,KAAKyU,gBAEhBzU,EAAe,EAAG,CAAC,YAAa,GAAI,EAAG,WAC5B,OAAqB,IAArB,KAAKyU,gBAMhBnW,EAAa,cAAe,MAI5BY,EAAgB,cAAe,IAI/BmD,GAAc,IAAQT,GAAWR,GACjCiB,GAAc,KAAQT,GAAWP,GACjCgB,GAAc,MAAQT,GAAWN,GAG5BrB,GAAQ,OAAQA,GAAM5I,QAAU,EAAG4I,IAAS,IAC7CoC,GAAcpC,GAAO8B,IAGhBiZ,SAAAA,GAAQ3kB,EAAOqK,GACpBA,EAAMoD,IAAe/H,EAAuB,KAAhB,KAAO1F,IAGlC4J,IAAAA,GAAQ,IAAKA,GAAM5I,QAAU,EAAG4I,IAAS,IAC1CkD,GAAclD,GAAO+a,IAIrBC,IAAAA,GAAoBxW,GAAW,gBAAgB,GAInDzE,EAAe,IAAM,EAAG,EAAG,YAC3BA,EAAe,KAAM,EAAG,EAAG,YAYvBkb,IAAAA,GAAQ7f,EAAO7E,UAsFV2kB,SAAAA,GAAoBjK,GAClBA,OAAAA,EArFXgK,GAAMnG,IAAoBA,GAC1BmG,GAAMlQ,SAjuBGoQ,SAAYC,EAAMC,GAGnB3M,IAAAA,EAAM0M,GAAQ3L,KACd6L,EAAMnE,GAAgBzI,EAAK,MAAM6M,QAAQ,OACzC1jB,EAAS7B,EAAMwlB,eAAe,KAAMF,IAAQ,WAE5Cza,EAASwa,IAAYxd,EAAWwd,EAAQxjB,IAAWwjB,EAAQxjB,GAAQpB,KAAK,KAAMiY,GAAO2M,EAAQxjB,IAE1F,OAAA,KAAKA,OAAOgJ,GAAU,KAAKR,aAAa0K,SAASlT,EAAQ,KAAM4X,GAAYf,MAytBtFuM,GAAM3D,MAttBGA,WACE,OAAA,IAAIlc,EAAO,OAstBtB6f,GAAM5D,KAvpBGA,SAAMjhB,EAAOuI,EAAO8c,GACrBC,IAAAA,EACAC,EACA9a,EAEA,IAAC,KAAK1H,UACCc,OAAAA,IAKP,KAFJyhB,EAAOvE,GAAgB/gB,EAAO,OAEpB+C,UACCc,OAAAA,IAOH0E,OAJRgd,EAAoD,KAAvCD,EAAK/E,YAAc,KAAKA,aAErChY,EAAQD,EAAeC,IAGd,IAAA,OAAQkC,EAASqY,GAAU,KAAMwC,GAAQ,GAAI,MAC7C,IAAA,QAAS7a,EAASqY,GAAU,KAAMwC,GAAO,MACzC,IAAA,UAAW7a,EAASqY,GAAU,KAAMwC,GAAQ,EAAG,MAC/C,IAAA,SAAU7a,GAAU,KAAO6a,GAAQ,IAAK,MACxC,IAAA,SAAU7a,GAAU,KAAO6a,GAAQ,IAAK,MACxC,IAAA,OAAQ7a,GAAU,KAAO6a,GAAQ,KAAM,MACvC,IAAA,MAAO7a,GAAU,KAAO6a,EAAOC,GAAa,MAAO,MACnD,IAAA,OAAQ9a,GAAU,KAAO6a,EAAOC,GAAa,OAAQ,MAC1D,QAAS9a,EAAS,KAAO6a,EAGtBD,OAAAA,EAAU5a,EAASpF,EAASoF,IAynBvCoa,GAAMW,MA5ZGA,SAAOjd,GACRyc,IAAAA,EAEAzc,QAAU9E,KADd8E,EAAQD,EAAeC,KACc,gBAAVA,IAA4B,KAAKxF,UACjD,OAAA,KAGP0iB,IAAAA,EAAc,KAAK7gB,OAASif,GAAiBD,GAEzCrb,OAAAA,GACC,IAAA,OACDyc,EAAOS,EAAY,KAAK5X,OAAS,EAAG,EAAG,GAAK,EAC5C,MACC,IAAA,UACDmX,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAU,KAAKA,QAAU,EAAI,EAAG,GAAK,EAC1E,MACC,IAAA,QACDwW,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAU,EAAG,GAAK,EACvD,MACC,IAAA,OACDwW,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,OAAS,KAAKwC,UAAY,GAAK,EAClF,MACC,IAAA,UACD+T,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,QAAU,KAAKiX,aAAe,GAAK,GAAK,EAC3F,MACC,IAAA,MACA,IAAA,OACDV,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,OAAS,GAAK,EACjE,MACC,IAAA,OACDuW,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQzB,GAAcE,GAAMuB,GAAQ,KAAKpgB,OAAS,EAAI,KAAK2b,YAAc+C,IAAgBC,IAAe,EACxG,MACC,IAAA,SACDyB,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQ1B,GAAgBG,GAAMuB,EAAM1B,IAAiB,EACrD,MACC,IAAA,SACD0B,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQ3B,GAAgBI,GAAMuB,EAAM3B,IAAiB,EAMtD,OAFFhgB,KAAAA,GAAG8d,QAAQ6D,GAChBplB,EAAMsF,aAAa,MAAM,GAClB,MAgXX2f,GAAMpjB,OA/iBGA,SAAQkkB,GACRA,IACDA,EAAc,KAAKpE,QAAU3hB,EAAMujB,iBAAmBvjB,EAAMsjB,eAE5DzY,IAAAA,EAASP,EAAa,KAAMyb,GACzB,OAAA,KAAK1b,aAAa2b,WAAWnb,IA2iBxCoa,GAAMzgB,KAxiBGA,SAAM4gB,EAAMa,GACb,OAAA,KAAK9iB,YACCoC,EAAS6f,IAASA,EAAKjiB,WACxBsW,GAAY2L,GAAMjiB,WAChB2e,GAAe,CAACvd,GAAI,KAAMC,KAAM4gB,IAAOtjB,OAAO,KAAKA,UAAUokB,UAAUD,GAEvE,KAAK5b,aAAaS,eAmiBjCma,GAAMkB,QA/hBGA,SAASF,GACP,OAAA,KAAKzhB,KAAKiV,KAAewM,IA+hBpChB,GAAM1gB,GA5hBGA,SAAI6gB,EAAMa,GACX,OAAA,KAAK9iB,YACCoC,EAAS6f,IAASA,EAAKjiB,WACxBsW,GAAY2L,GAAMjiB,WAChB2e,GAAe,CAACtd,KAAM,KAAMD,GAAI6gB,IAAOtjB,OAAO,KAAKA,UAAUokB,UAAUD,GAEvE,KAAK5b,aAAaS,eAuhBjCma,GAAMmB,MAnhBGA,SAAOH,GACL,OAAA,KAAK1hB,GAAGkV,KAAewM,IAmhBlChB,GAAMtW,IAxiGG0X,SAAW1d,GAEZd,OAAAA,EAAW,KADfc,EAAQD,EAAeC,KAEZ,KAAKA,KAET,MAoiGXsc,GAAMqB,UAxUGA,WACEpkB,OAAAA,EAAgB,MAAMM,UAwUjCyiB,GAAM1C,QA5tBGA,SAASniB,EAAOuI,GACjB4d,IAAAA,EAAahhB,EAASnF,GAASA,EAAQqZ,GAAYrZ,GACnD,SAAE,KAAK+C,YAAaojB,EAAWpjB,aAIrB,iBADdwF,EAAQD,EAAeC,IAAU,eAEtB,KAAKhH,UAAY4kB,EAAW5kB,UAE5B4kB,EAAW5kB,UAAY,KAAK2f,QAAQiE,QAAQ5c,GAAOhH,YAotBlEsjB,GAAM7C,SAhtBGA,SAAUhiB,EAAOuI,GAClB4d,IAAAA,EAAahhB,EAASnF,GAASA,EAAQqZ,GAAYrZ,GACnD,SAAE,KAAK+C,YAAaojB,EAAWpjB,aAIrB,iBADdwF,EAAQD,EAAeC,IAAU,eAEtB,KAAKhH,UAAY4kB,EAAW5kB,UAE5B,KAAK2f,QAAQsE,MAAMjd,GAAOhH,UAAY4kB,EAAW5kB,YAwsBhEsjB,GAAMuB,UApsBGA,SAAWhiB,EAAMD,EAAIoE,EAAO8d,GAC7BC,IAAAA,EAAYnhB,EAASf,GAAQA,EAAOiV,GAAYjV,GAChDmiB,EAAUphB,EAAShB,GAAMA,EAAKkV,GAAYlV,GAC1C,SAAE,KAAKpB,WAAaujB,EAAUvjB,WAAawjB,EAAQxjB,aAI5B,OAD3BsjB,EAAcA,GAAe,MACT,GAAa,KAAKlE,QAAQmE,EAAW/d,IAAU,KAAKyZ,SAASsE,EAAW/d,MACpE,MAAnB8d,EAAY,GAAa,KAAKrE,SAASuE,EAAShe,IAAU,KAAK4Z,QAAQoE,EAAShe,KA6rBzFsc,GAAM2B,OA1rBGA,SAAQxmB,EAAOuI,GAChB4d,IACAM,EADAN,EAAahhB,EAASnF,GAASA,EAAQqZ,GAAYrZ,GAEnD,SAAE,KAAK+C,YAAaojB,EAAWpjB,aAIrB,iBADdwF,EAAQD,EAAeC,IAAU,eAEtB,KAAKhH,YAAc4kB,EAAW5kB,WAErCklB,EAAUN,EAAW5kB,UACd,KAAK2f,QAAQiE,QAAQ5c,GAAOhH,WAAaklB,GAAWA,GAAW,KAAKvF,QAAQsE,MAAMjd,GAAOhH,aAgrBxGsjB,GAAM6B,cA5qBGA,SAAe1mB,EAAOuI,GACpB,OAAA,KAAKie,OAAOxmB,EAAOuI,IAAU,KAAK4Z,QAAQniB,EAAOuI,IA4qB5Dsc,GAAM8B,eAzqBGA,SAAgB3mB,EAAOuI,GACrB,OAAA,KAAKie,OAAOxmB,EAAOuI,IAAU,KAAKyZ,SAAShiB,EAAOuI,IAyqB7Dsc,GAAM9hB,QAvVG6jB,WACE7jB,OAAAA,EAAQ,OAuVnB8hB,GAAMzB,KAAoBA,GAC1ByB,GAAMnjB,OAAoBA,GAC1BmjB,GAAM5a,WAAoBA,GAC1B4a,GAAMxb,IAAoBwV,GAC1BgG,GAAM1e,IAAoBwY,GAC1BkG,GAAMgC,aAzVGA,WACEvlB,OAAAA,EAAO,GAAIQ,EAAgB,QAyVtC+iB,GAAM9c,IA9iGG+e,SAAWve,EAAO1C,GACnB,GAAiB,WAAjB,EAAO0C,GAGF,IADDwe,IAAAA,EApTHC,SAAoBC,GACrB1e,IAAAA,EAAQ,GACP,IAAA,IAAI2e,KAAKD,EACV1e,EAAMtH,KAAK,CAACiH,KAAMgf,EAAGpe,SAAUF,EAAWse,KAKvC3e,OAHPA,EAAM0H,KAAK,SAAU9O,EAAGC,GACbD,OAAAA,EAAE2H,SAAW1H,EAAE0H,WAEnBP,EA4Seye,CADlBze,EAAQC,EAAqBD,IAEpBxH,EAAI,EAAGA,EAAIgmB,EAAY/lB,OAAQD,IAC/BgmB,KAAAA,EAAYhmB,GAAGmH,MAAMK,EAAMwe,EAAYhmB,GAAGmH,YAI/CT,GAAAA,EAAW,KADfc,EAAQD,EAAeC,KAEZ,OAAA,KAAKA,GAAO1C,GAGpB,OAAA,MAkiGXgf,GAAMM,QAleGA,SAAS5c,GACVyc,IAAAA,EAEAzc,QAAU9E,KADd8E,EAAQD,EAAeC,KACc,gBAAVA,IAA4B,KAAKxF,UACjD,OAAA,KAGP0iB,IAAAA,EAAc,KAAK7gB,OAASif,GAAiBD,GAEzCrb,OAAAA,GACC,IAAA,OACDyc,EAAOS,EAAY,KAAK5X,OAAQ,EAAG,GACnC,MACC,IAAA,UACDmX,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAU,KAAKA,QAAU,EAAG,GACjE,MACC,IAAA,QACDwW,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,GAC9C,MACC,IAAA,OACDwW,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,OAAS,KAAKwC,WACjE,MACC,IAAA,UACD+T,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,QAAU,KAAKiX,aAAe,IACjF,MACC,IAAA,MACA,IAAA,OACDV,EAAOS,EAAY,KAAK5X,OAAQ,KAAKW,QAAS,KAAKC,QACnD,MACC,IAAA,OACDuW,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQvB,GAAMuB,GAAQ,KAAKpgB,OAAS,EAAI,KAAK2b,YAAc+C,IAAgBC,IAC3E,MACC,IAAA,SACDyB,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQvB,GAAMuB,EAAM1B,IACpB,MACC,IAAA,SACD0B,EAAO,KAAK3hB,GAAG9B,UACfyjB,GAAQvB,GAAMuB,EAAM3B,IAMrB,OAFFhgB,KAAAA,GAAG8d,QAAQ6D,GAChBplB,EAAMsF,aAAa,MAAM,GAClB,MAsbX2f,GAAMhC,SAAoBA,GAC1BgC,GAAMsC,QAxXGA,WACDplB,IAAAA,EAAI,KACD,MAAA,CAACA,EAAE8L,OAAQ9L,EAAEyM,QAASzM,EAAE0M,OAAQ1M,EAAEob,OAAQpb,EAAEmc,SAAUnc,EAAEoc,SAAUpc,EAAEqc,gBAuX/EyG,GAAMuC,SApXGA,WACDrlB,IAAAA,EAAI,KACD,MAAA,CACHod,MAAOpd,EAAE8L,OACTkB,OAAQhN,EAAEyM,QACVC,KAAM1M,EAAE0M,OACRiF,MAAO3R,EAAE2R,QACTE,QAAS7R,EAAE6R,UACXI,QAASjS,EAAEiS,UACXyL,aAAc1d,EAAE0d,iBA4WxBoF,GAAMwC,OA9XGA,WACE,OAAA,IAAI3mB,KAAK,KAAKa,YA8XzBsjB,GAAMyC,YArnBGA,SAAYC,GACb,IAAC,KAAKxkB,UACC,OAAA,KAEPlB,IAAAA,GAAqB,IAAf0lB,EACNxlB,EAAIF,EAAM,KAAKqf,QAAQrf,MAAQ,KAC/BE,OAAAA,EAAE8L,OAAS,GAAK9L,EAAE8L,OAAS,KACpB3D,EAAanI,EAAGF,EAAM,iCAAmC,gCAEhE4F,EAAW/G,KAAKP,UAAUmnB,aAEtBzlB,EACO,KAAKwlB,SAASC,cAEd,IAAI5mB,KAAK,KAAKa,UAA+B,GAAnB,KAAKgf,YAAmB,KAAM+G,cAAc/c,QAAQ,IAAKL,EAAanI,EAAG,MAG3GmI,EAAanI,EAAGF,EAAM,+BAAiC,+BAqmBlEgjB,GAAM2C,QA5lBGA,WACD,IAAC,KAAKzkB,UACC,MAAA,qBAAuB,KAAKyB,GAAK,OAExCwF,IAAAA,EAAO,SACPyd,EAAO,GACN,KAAKC,YACN1d,EAA4B,IAArB,KAAKuW,YAAoB,aAAe,mBAC/CkH,EAAO,KAEPE,IAAAA,EAAS,IAAM3d,EAAO,MACtB6D,EAAQ,GAAK,KAAKA,QAAU,KAAKA,QAAU,KAAQ,OAAS,SAE5D+Z,EAASH,EAAO,OAEb,OAAA,KAAKhmB,OAAOkmB,EAAS9Z,EAHb,wBAG+B+Z,IA8kBlD/C,GAAMgD,OA3WGA,WAEE,OAAA,KAAK9kB,UAAY,KAAKukB,cAAgB,MA0WjDzC,GAAMzkB,SA5nBGA,WACE,OAAA,KAAK8gB,QAAQxf,OAAO,MAAMD,OAAO,qCA4nB5CojB,GAAMiD,KAvYGA,WACEviB,OAAAA,KAAKE,MAAM,KAAKlE,UAAY,MAuYvCsjB,GAAMtjB,QA5YGA,WACE,OAAA,KAAK8B,GAAG9B,UAAmC,KAArB,KAAKsD,SAAW,IA4YjDggB,GAAMkD,aA9VGA,WACE,MAAA,CACH/nB,MAAO,KAAKwE,GACZ/C,OAAQ,KAAKgD,GACb/C,OAAQ,KAAKoD,QACbuZ,MAAO,KAAKzZ,OACZjD,OAAQ,KAAK6B,UAyVrBqhB,GAAMhX,KAAaK,GACnB2W,GAAM/W,WAvmGGka,WACEla,OAAAA,GAAW,KAAKD,SAumG3BgX,GAAM9L,SApSGkP,SAAgBjoB,GACdgkB,OAAAA,GAAqB3jB,KAAK,KACzBL,EACA,KAAKgR,OACL,KAAKC,UACL,KAAKhH,aAAaqP,MAAM3I,IACxB,KAAK1G,aAAaqP,MAAM1I,MA+RpCiU,GAAMT,YA5RG8D,SAAmBloB,GACjBgkB,OAAAA,GAAqB3jB,KAAK,KACzBL,EAAO,KAAKuf,UAAW,KAAKmG,aAAc,EAAG,IA2RzDb,GAAMxF,QAAUwF,GAAMzF,SAnOb+I,SAAenoB,GACbA,OAAS,MAATA,EAAgBuF,KAAKC,MAAM,KAAKgJ,QAAU,GAAK,GAAK,KAAKA,MAAoB,GAAbxO,EAAQ,GAAS,KAAKwO,QAAU,IAmO3GqW,GAAMrW,MAAciB,GACpBoV,GAAMnW,YAz1FG0Z,WACE1Z,OAAAA,GAAY,KAAKb,OAAQ,KAAKW,UAy1FzCqW,GAAM7T,KAAiB6T,GAAMvF,MAznFpB+I,SAAYroB,GACbgR,IAAAA,EAAO,KAAK/G,aAAa+G,KAAK,MAC3BhR,OAAS,MAATA,EAAgBgR,EAAO,KAAK0N,IAAqB,GAAhB1e,EAAQgR,GAAW,MAwnF/D6T,GAAMtF,QAAiBsF,GAAMyD,SArnFpBC,SAAevoB,GAChBgR,IAAAA,EAAOM,GAAW,KAAM,EAAG,GAAGN,KAC3BhR,OAAS,MAATA,EAAgBgR,EAAO,KAAK0N,IAAqB,GAAhB1e,EAAQgR,GAAW,MAonF/D6T,GAAMpT,YAzRG+W,WACDC,IAAAA,EAAW,KAAKxe,aAAaqP,MAC1B7H,OAAAA,GAAY,KAAK5D,OAAQ4a,EAAS9X,IAAK8X,EAAS7X,MAwR3DiU,GAAM6D,eA9RGC,WACElX,OAAAA,GAAY,KAAK5D,OAAQ,EAAG,IA8RvCgX,GAAMpW,KAAa+V,GACnBK,GAAM3R,IAAa2R,GAAMrF,KA55EhBoJ,SAAiB5oB,GAClB,IAAC,KAAK+C,UACC/C,OAAS,MAATA,EAAgB,KAAO6D,IAE9BqP,IAAAA,EAAM,KAAKtO,OAAS,KAAKvB,GAAGyN,YAAc,KAAKzN,GAAGyW,SAClD9Z,OAAS,MAATA,GACAA,EAjKC6oB,SAAa7oB,EAAO0B,GACrB,MAAiB,iBAAV1B,EACAA,EAGNoD,MAAMpD,GAKU,iBADrBA,EAAQ0B,EAAO2Q,cAAcrS,IAElBA,EAGJ,KARIiO,SAASjO,EAAO,IA2Jf6oB,CAAa7oB,EAAO,KAAKiK,cAC1B,KAAKyU,IAAI1e,EAAQkT,EAAK,MAEtBA,GAo5Ef2R,GAAM5T,QAh5EG6X,SAAuB9oB,GACxB,IAAC,KAAK+C,UACC/C,OAAS,MAATA,EAAgB,KAAO6D,IAE9BoN,IAAAA,GAAW,KAAKiC,MAAQ,EAAI,KAAKjJ,aAAaqP,MAAM3I,KAAO,EACxD3Q,OAAS,MAATA,EAAgBiR,EAAU,KAAKyN,IAAI1e,EAAQiR,EAAS,MA44E/D4T,GAAMa,WAz4EGqD,SAAoB/oB,GACrB,IAAC,KAAK+C,UACC/C,OAAS,MAATA,EAAgB,KAAO6D,IAO9B7D,GAAS,MAATA,EAAe,CACXiR,IAAAA,EAzKH+X,SAAgBhpB,EAAO0B,GACxB,MAAiB,iBAAV1B,EACA0B,EAAO2Q,cAAcrS,GAAS,GAAK,EAEvCoD,MAAMpD,GAAS,KAAOA,EAqKXgpB,CAAgBhpB,EAAO,KAAKiK,cACnC,OAAA,KAAKiJ,IAAI,KAAKA,MAAQ,EAAIjC,EAAUA,EAAU,GAE9C,OAAA,KAAKiC,OAAS,GA63E7B2R,GAAMxT,UApLG4X,SAAiBjpB,GAClBqR,IAAAA,EAAY9L,KAAK6a,OAAO,KAAKc,QAAQiE,QAAQ,OAAS,KAAKjE,QAAQiE,QAAQ,SAAW,OAAS,EAC5FnlB,OAAS,MAATA,EAAgBqR,EAAY,KAAKqN,IAAK1e,EAAQqR,EAAY,MAmLrEwT,GAAM1H,KAAO0H,GAAMnR,MAAQc,GAC3BqQ,GAAM3G,OAAS2G,GAAMjR,QAAU6Q,GAC/BI,GAAM1G,OAAS0G,GAAM7Q,QAAU0Q,GAC/BG,GAAMzG,YAAcyG,GAAMpF,aAAemF,GACzCC,GAAMtE,UAxkCG2I,SAAclpB,EAAOmpB,EAAeC,GACrC/I,IACAgJ,EADAhJ,EAAS,KAAKxb,SAAW,EAEzB,IAAC,KAAK9B,UACC/C,OAAS,MAATA,EAAgB,KAAO6D,IAE9B7D,GAAS,MAATA,EAAe,CACX,GAAiB,iBAAVA,GAEHA,GAAU,QADdA,EAAQygB,GAAiB5U,GAAkB7L,IAEhC,OAAA,UAEJuF,KAAKc,IAAIrG,GAAS,KAAOopB,IAChCppB,GAAgB,IAmBb,OAjBF,KAAK4E,QAAUukB,IAChBE,EAAchI,GAAc,OAE3Bxc,KAAAA,QAAU7E,EACV4E,KAAAA,QAAS,EACK,MAAfykB,GACK3K,KAAAA,IAAI2K,EAAa,KAEtBhJ,IAAWrgB,KACNmpB,GAAiB,KAAKG,kBACvB7G,GAAY,KAAMf,GAAe1hB,EAAQqgB,EAAQ,KAAM,GAAG,GAClD,KAAKiJ,oBACRA,KAAAA,mBAAoB,EACzB1pB,EAAMsF,aAAa,MAAM,GACpBokB,KAAAA,kBAAoB,OAG1B,KAEA,OAAA,KAAK1kB,OAASyb,EAASgB,GAAc,OAuiCpDwD,GAAMhjB,IArhCG0nB,SAAgBJ,GACd,OAAA,KAAK5I,UAAU,EAAG4I,IAqhC7BtE,GAAMzD,MAlhCGoI,SAAkBL,GAShB,OARH,KAAKvkB,SACA2b,KAAAA,UAAU,EAAG4I,GACbvkB,KAAAA,QAAS,EAEVukB,GACKtG,KAAAA,SAASxB,GAAc,MAAO,MAGpC,MA0gCXwD,GAAM4E,UAvgCGC,WACD,GAAa,MAAb,KAAK/kB,KACA4b,KAAAA,UAAU,KAAK5b,MAAM,GAAO,QAC9B,GAAuB,iBAAZ,KAAKH,GAAiB,CAChCmlB,IAAAA,EAAQlJ,GAAiB7U,GAAa,KAAKpH,IAClC,MAATmlB,EACKpJ,KAAAA,UAAUoJ,GAGVpJ,KAAAA,UAAU,GAAG,GAGnB,OAAA,MA4/BXsE,GAAM+E,qBAz/BGA,SAAsB5pB,GACvB,QAAC,KAAK+C,YAGV/C,EAAQA,EAAQqZ,GAAYrZ,GAAOugB,YAAc,GAEzC,KAAKA,YAAcvgB,GAAS,IAAO,IAo/B/C6kB,GAAMgF,MAj/BGC,WAED,OAAA,KAAKvJ,YAAc,KAAKW,QAAQ1S,MAAM,GAAG+R,aACzC,KAAKA,YAAc,KAAKW,QAAQ1S,MAAM,GAAG+R,aA++BjDsE,GAAM6C,QAt9BGA,WACE,QAAA,KAAK3kB,YAAa,KAAK6B,QAs9BlCigB,GAAMkF,YAn9BGA,WACE,QAAA,KAAKhnB,WAAY,KAAK6B,QAm9BjCigB,GAAMtD,MAAuBA,GAC7BsD,GAAMxG,MAAuBkD,GAC7BsD,GAAMmF,SA9EGC,WACE,OAAA,KAAKrlB,OAAS,MAAQ,IA8EjCigB,GAAMqF,SA3EGC,WACE,OAAA,KAAKvlB,OAAS,6BAA+B,IA2ExDigB,GAAMuF,MAASzjB,EAAU,kDAAmD6d,IAC5EK,GAAM9V,OAASpI,EAAU,mDAAoD8I,IAC7EoV,GAAM1F,MAASxY,EAAU,iDAAkDuH,IAC3E2W,GAAM4C,KAAS9gB,EAAU,2GAjjChB0jB,SAAYrqB,EAAOmpB,GACpBnpB,OAAS,MAATA,GACqB,iBAAVA,IACPA,GAASA,GAGRugB,KAAAA,UAAUvgB,EAAOmpB,GAEf,OAEC,KAAK5I,cAwiCrBsE,GAAMyF,aAAe3jB,EAAU,0GAr/BtB4jB,WACD,IAAChqB,EAAY,KAAKiqB,eACX,OAAA,KAAKA,cAGZzS,IAAAA,EAAI,GAKJA,GAHJ7T,EAAW6T,EAAG,OACdA,EAAIuF,GAAcvF,IAEZ7K,GAAI,CACF0R,IAAAA,EAAQ7G,EAAEnT,OAASpD,EAAUuW,EAAE7K,IAAMmM,GAAYtB,EAAE7K,IAClDsd,KAAAA,cAAgB,KAAKznB,WACtBgD,EAAcgS,EAAE7K,GAAI0R,EAAMuI,WAAa,OAEtCqD,KAAAA,eAAgB,EAGlB,OAAA,KAAKA,gBAi/BZC,IAAAA,GAAU3iB,EAAO3H,UAiCZuqB,SAAAA,GAAOjpB,EAAQkpB,EAAOC,EAAOC,GAC9BnpB,IAAAA,EAASsV,KACTnV,EAAML,IAAYuG,IAAI8iB,EAAQF,GAC3BjpB,OAAAA,EAAOkpB,GAAO/oB,EAAKJ,GAGrBqpB,SAAAA,GAAgBrpB,EAAQkpB,EAAOC,GAQhCD,GAPAnqB,EAASiB,KACTkpB,EAAQlpB,EACRA,OAASgC,GAGbhC,EAASA,GAAU,GAEN,MAATkpB,EACOD,OAAAA,GAAMjpB,EAAQkpB,EAAOC,EAAO,SAGnC7pB,IAAAA,EACAgqB,EAAM,GACLhqB,IAAAA,EAAI,EAAGA,EAAI,GAAIA,IAChBgqB,EAAIhqB,GAAK2pB,GAAMjpB,EAAQV,EAAG6pB,EAAO,SAE9BG,OAAAA,EAWFC,SAAAA,GAAkBC,EAAcxpB,EAAQkpB,EAAOC,GACxB,kBAAjBK,GACHzqB,EAASiB,KACTkpB,EAAQlpB,EACRA,OAASgC,GAGbhC,EAASA,GAAU,KAGnBkpB,EADAlpB,EAASwpB,EAETA,GAAe,EAEXzqB,EAASiB,KACTkpB,EAAQlpB,EACRA,OAASgC,GAGbhC,EAASA,GAAU,IAGnBC,IAOAX,EAPAW,EAASsV,KACTkU,EAAQD,EAAevpB,EAAO4X,MAAM3I,IAAM,EAE1Cga,GAAS,MAATA,EACOD,OAAAA,GAAMjpB,GAASkpB,EAAQO,GAAS,EAAGN,EAAO,OAIjDG,IAAAA,EAAM,GACLhqB,IAAAA,EAAI,EAAGA,EAAI,EAAGA,IACfgqB,EAAIhqB,GAAK2pB,GAAMjpB,GAASV,EAAImqB,GAAS,EAAGN,EAAO,OAE5CG,OAAAA,EAlGXN,GAAQ9V,SAzgHCA,SAAU3N,EAAKwD,EAAK8N,GACrB7N,IAAAA,EAAS,KAAK0gB,UAAUnkB,IAAQ,KAAKmkB,UAAL,SAC7B1jB,OAAAA,EAAWgD,GAAUA,EAAOpK,KAAKmK,EAAK8N,GAAO7N,GAwgHxDggB,GAAQ7f,eA5/GCA,SAAgB5D,GACjBvF,IAAAA,EAAS,KAAK2pB,gBAAgBpkB,GAC9BqkB,EAAc,KAAKD,gBAAgBpkB,EAAIskB,eAEvC7pB,OAAAA,IAAW4pB,EACJ5pB,GAGN2pB,KAAAA,gBAAgBpkB,GAAOqkB,EAAY9gB,QAAQ,mBAAoB,SAAUjG,GACnEA,OAAAA,EAAI2C,MAAM,KAGd,KAAKmkB,gBAAgBpkB,KAi/GhCyjB,GAAQ/f,YA5+GCA,WACE,OAAA,KAAK6gB,cA4+GhBd,GAAQ3gB,QAt+GCA,SAASxE,GACP,OAAA,KAAKkmB,SAASjhB,QAAQ,KAAMjF,IAs+GvCmlB,GAAQlN,SAAkBuH,GAC1B2F,GAAQ7E,WAAkBd,GAC1B2F,GAAQhV,aAp9GCA,SAAcnQ,EAAQugB,EAAehL,EAAQ4Q,GAC9ChhB,IAAAA,EAAS,KAAKihB,cAAc7Q,GACxBpT,OAAAA,EAAWgD,GACfA,EAAOnF,EAAQugB,EAAehL,EAAQ4Q,GACtChhB,EAAOF,QAAQ,MAAOjF,IAi9G9BmlB,GAAQkB,WA98GCA,SAAY1K,EAAMxW,GACnBhJ,IAAAA,EAAS,KAAKiqB,cAAczK,EAAO,EAAI,SAAW,QAC/CxZ,OAAAA,EAAWhG,GAAUA,EAAOgJ,GAAUhJ,EAAO8I,QAAQ,MAAOE,IA68GvEggB,GAAQ1iB,IA7lHCA,SAAK9C,GACNZ,IAAAA,EAAMtD,EACLA,IAAAA,KAAKkE,EAEFwC,EADJpD,EAAOY,EAAOlE,IAELA,KAAAA,GAAKsD,EAEL,KAAA,IAAMtD,GAAKsD,EAGnB8S,KAAAA,QAAUlS,EAIVsf,KAAAA,+BAAiC,IAAIlY,QACrC,KAAKgY,wBAAwBuH,QAAU,KAAKtH,cAAcsH,QACvD,IAAO,UAAWA,SA+kH9BnB,GAAQ1b,OAxhGC8c,SAAc9pB,EAAGN,GAClB,OAACM,EAIEhC,EAAQ,KAAKggB,SAAW,KAAKA,QAAQhe,EAAEyM,SAC1C,KAAKuR,SAAS,KAAKA,QAAQ+L,UAAY3c,IAAkBrE,KAAKrJ,GAAU,SAAW,cAAcM,EAAEyM,SAJ5FzO,EAAQ,KAAKggB,SAAW,KAAKA,QAChC,KAAKA,QAAL,YAshGZ0K,GAAQ3b,YA/gGCid,SAAmBhqB,EAAGN,GACvB,OAACM,EAIEhC,EAAQ,KAAKisB,cAAgB,KAAKA,aAAajqB,EAAEyM,SACpD,KAAKwd,aAAa7c,GAAiBrE,KAAKrJ,GAAU,SAAW,cAAcM,EAAEyM,SAJtEzO,EAAQ,KAAKisB,cAAgB,KAAKA,aACrC,KAAKA,aAAL,YA6gGZvB,GAAQvb,YA99FC+c,SAAmBC,EAAWzqB,EAAQE,GACvCZ,IAAAA,EAAGyJ,EAAKyB,EAER,GAAA,KAAKkgB,kBACEC,OA7CNA,SAAkBF,EAAWzqB,EAAQE,GACtCZ,IAAAA,EAAGsrB,EAAI7hB,EAAK8hB,EAAMJ,EAAUK,oBAC5B,IAAC,KAAKC,aAKDzrB,IAHAyrB,KAAAA,aAAe,GACfC,KAAAA,iBAAmB,GACnBC,KAAAA,kBAAoB,GACpB3rB,EAAI,EAAGA,EAAI,KAAMA,EAClByJ,EAAMhJ,EAAU,CAAC,IAAMT,IAClB2rB,KAAAA,kBAAkB3rB,GAAK,KAAK+N,YAAYtE,EAAK,IAAI+hB,oBACjDE,KAAAA,iBAAiB1rB,GAAK,KAAKgO,OAAOvE,EAAK,IAAI+hB,oBAIpD5qB,OAAAA,EACe,QAAXF,GAEe,KADf4qB,EAAKle,GAAQ9N,KAAK,KAAKqsB,kBAAmBJ,IACvBD,EAAK,MAGT,KADfA,EAAKle,GAAQ9N,KAAK,KAAKosB,iBAAkBH,IACtBD,EAAK,KAGb,QAAX5qB,GAEY,KADZ4qB,EAAKle,GAAQ9N,KAAK,KAAKqsB,kBAAmBJ,IAE/BD,GAGI,KADfA,EAAKle,GAAQ9N,KAAK,KAAKosB,iBAAkBH,IACtBD,EAAK,MAGZ,KADZA,EAAKle,GAAQ9N,KAAK,KAAKosB,iBAAkBH,IAE9BD,GAGI,KADfA,EAAKle,GAAQ9N,KAAK,KAAKqsB,kBAAmBJ,IACvBD,EAAK,MASHhsB,KAAK,KAAM6rB,EAAWzqB,EAAQE,GAYtDZ,IATA,KAAKyrB,eACDA,KAAAA,aAAe,GACfC,KAAAA,iBAAmB,GACnBC,KAAAA,kBAAoB,IAMxB3rB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAYjBY,GAVJ6I,EAAMhJ,EAAU,CAAC,IAAMT,IACnBY,IAAW,KAAK8qB,iBAAiB1rB,KAC5B0rB,KAAAA,iBAAiB1rB,GAAK,IAAIsL,OAAO,IAAM,KAAK0C,OAAOvE,EAAK,IAAID,QAAQ,IAAK,IAAM,IAAK,KACpFmiB,KAAAA,kBAAkB3rB,GAAK,IAAIsL,OAAO,IAAM,KAAKyC,YAAYtE,EAAK,IAAID,QAAQ,IAAK,IAAM,IAAK,MAE9F5I,GAAW,KAAK6qB,aAAazrB,KAC9BkL,EAAQ,IAAM,KAAK8C,OAAOvE,EAAK,IAAM,KAAO,KAAKsE,YAAYtE,EAAK,IAC7DgiB,KAAAA,aAAazrB,GAAK,IAAIsL,OAAOJ,EAAM1B,QAAQ,IAAK,IAAK,MAG1D5I,GAAqB,SAAXF,GAAqB,KAAKgrB,iBAAiB1rB,GAAG+J,KAAKohB,GACtDnrB,OAAAA,EACJ,GAAIY,GAAqB,QAAXF,GAAoB,KAAKirB,kBAAkB3rB,GAAG+J,KAAKohB,GAC7DnrB,OAAAA,EACJ,IAAKY,GAAU,KAAK6qB,aAAazrB,GAAG+J,KAAKohB,GACrCnrB,OAAAA,IA87FnB0pB,GAAQxb,YA33FCA,SAAa9C,GACd,OAAA,KAAKggB,mBACAjrB,EAAW,KAAM,iBAClB0O,GAAmBvP,KAAK,MAExB8L,EACO,KAAKiE,mBAEL,KAAKF,eAGXhP,EAAW,KAAM,kBACbgP,KAAAA,aAAeP,IAEjB,KAAKS,oBAAsBjE,EAC9B,KAAKiE,mBAAqB,KAAKF,eA62F3Cua,GAAQzb,iBAh5FCA,SAAkB7C,GACnB,OAAA,KAAKggB,mBACAjrB,EAAW,KAAM,iBAClB0O,GAAmBvP,KAAK,MAExB8L,EACO,KAAKkE,wBAEL,KAAKF,oBAGXjP,EAAW,KAAM,uBACbiP,KAAAA,kBAAoBT,IAEtB,KAAKW,yBAA2BlE,EACnC,KAAKkE,wBAA0B,KAAKF,oBAk4FhDsa,GAAQzZ,KAxsFC2b,SAAYniB,GACV8G,OAAAA,GAAW9G,EAAK,KAAK8O,MAAM3I,IAAK,KAAK2I,MAAM1I,KAAKI,MAwsF3DyZ,GAAQmC,eA5rFCC,WACE,OAAA,KAAKvT,MAAM1I,KA4rFtB6Z,GAAQqC,eAjsFCC,WACE,OAAA,KAAKzT,MAAM3I,KAksFtB8Z,GAAQxY,SAplFC+a,SAAgBjrB,EAAGN,GACpBwQ,IAAAA,EAAWlS,EAAQ,KAAKktB,WAAa,KAAKA,UAC1C,KAAKA,UAAWlrB,IAAW,IAANA,GAAc,KAAKkrB,UAAUnB,SAAShhB,KAAKrJ,GAAW,SAAW,cAClFM,OAAM,IAANA,EAAc4P,GAAcM,EAAU,KAAKqH,MAAM3I,KAClD5O,EAAKkQ,EAASlQ,EAAEmR,OAASjB,GAilFpCwY,GAAQ1Y,YAvkFCmb,SAAmBnrB,GAChBA,OAAM,IAANA,EAAc4P,GAAc,KAAKwb,aAAc,KAAK7T,MAAM3I,KAC3D5O,EAAK,KAAKorB,aAAaprB,EAAEmR,OAAS,KAAKia,cAskFlD1C,GAAQzY,cA9kFCob,SAAqBrrB,GAClBA,OAAM,IAANA,EAAc4P,GAAc,KAAK0b,eAAgB,KAAK/T,MAAM3I,KAC7D5O,EAAK,KAAKsrB,eAAetrB,EAAEmR,OAAS,KAAKma,gBA6kFpD5C,GAAQpY,cApgFCib,SAAqBC,EAAa9rB,EAAQE,GAC3CZ,IAAAA,EAAGyJ,EAAKyB,EAER,GAAA,KAAKuhB,oBACEC,OApENA,SAAoBF,EAAa9rB,EAAQE,GAC1CZ,IAAAA,EAAGsrB,EAAI7hB,EAAK8hB,EAAMiB,EAAYhB,oBAC9B,IAAC,KAAKmB,eAKD3sB,IAJA2sB,KAAAA,eAAiB,GACjBC,KAAAA,oBAAsB,GACtBC,KAAAA,kBAAoB,GAEpB7sB,EAAI,EAAGA,EAAI,IAAKA,EACjByJ,EAAMhJ,EAAU,CAAC,IAAM,IAAI0R,IAAInS,GAC1B6sB,KAAAA,kBAAkB7sB,GAAK,KAAKgR,YAAYvH,EAAK,IAAI+hB,oBACjDoB,KAAAA,oBAAoB5sB,GAAK,KAAKiR,cAAcxH,EAAK,IAAI+hB,oBACrDmB,KAAAA,eAAe3sB,GAAK,KAAKkR,SAASzH,EAAK,IAAI+hB,oBAIpD5qB,OAAAA,EACe,SAAXF,GAEe,KADf4qB,EAAKle,GAAQ9N,KAAK,KAAKqtB,eAAgBpB,IACpBD,EAAK,KACN,QAAX5qB,GAEQ,KADf4qB,EAAKle,GAAQ9N,KAAK,KAAKstB,oBAAqBrB,IACzBD,EAAK,MAGT,KADfA,EAAKle,GAAQ9N,KAAK,KAAKutB,kBAAmBtB,IACvBD,EAAK,KAGb,SAAX5qB,GAEY,KADZ4qB,EAAKle,GAAQ9N,KAAK,KAAKqtB,eAAgBpB,IAE5BD,GAGC,KADZA,EAAKle,GAAQ9N,KAAK,KAAKstB,oBAAqBrB,IAEjCD,GAGI,KADfA,EAAKle,GAAQ9N,KAAK,KAAKutB,kBAAmBtB,IACvBD,EAAK,KACN,QAAX5qB,GAEK,KADZ4qB,EAAKle,GAAQ9N,KAAK,KAAKstB,oBAAqBrB,IAEjCD,GAGC,KADZA,EAAKle,GAAQ9N,KAAK,KAAKqtB,eAAgBpB,IAE5BD,GAGI,KADfA,EAAKle,GAAQ9N,KAAK,KAAKutB,kBAAmBtB,IACvBD,EAAK,MAGZ,KADZA,EAAKle,GAAQ9N,KAAK,KAAKutB,kBAAmBtB,IAE/BD,GAGC,KADZA,EAAKle,GAAQ9N,KAAK,KAAKqtB,eAAgBpB,IAE5BD,GAGI,KADfA,EAAKle,GAAQ9N,KAAK,KAAKstB,oBAAqBrB,IACzBD,EAAK,MASDhsB,KAAK,KAAMktB,EAAa9rB,EAAQE,GAU1DZ,IAPA,KAAK2sB,iBACDA,KAAAA,eAAiB,GACjBE,KAAAA,kBAAoB,GACpBD,KAAAA,oBAAsB,GACtBE,KAAAA,mBAAqB,IAGzB9sB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAchBY,GAXJ6I,EAAMhJ,EAAU,CAAC,IAAM,IAAI0R,IAAInS,GAC3BY,IAAW,KAAKksB,mBAAmB9sB,KAC9B8sB,KAAAA,mBAAmB9sB,GAAK,IAAIsL,OAAO,IAAM,KAAK4F,SAASzH,EAAK,IAAID,QAAQ,IAAK,QAAU,IAAK,KAC5FojB,KAAAA,oBAAoB5sB,GAAK,IAAIsL,OAAO,IAAM,KAAK2F,cAAcxH,EAAK,IAAID,QAAQ,IAAK,QAAU,IAAK,KAClGqjB,KAAAA,kBAAkB7sB,GAAK,IAAIsL,OAAO,IAAM,KAAK0F,YAAYvH,EAAK,IAAID,QAAQ,IAAK,QAAU,IAAK,MAElG,KAAKmjB,eAAe3sB,KACrBkL,EAAQ,IAAM,KAAKgG,SAASzH,EAAK,IAAM,KAAO,KAAKwH,cAAcxH,EAAK,IAAM,KAAO,KAAKuH,YAAYvH,EAAK,IACpGkjB,KAAAA,eAAe3sB,GAAK,IAAIsL,OAAOJ,EAAM1B,QAAQ,IAAK,IAAK,MAG5D5I,GAAqB,SAAXF,GAAqB,KAAKosB,mBAAmB9sB,GAAG+J,KAAKyiB,GACxDxsB,OAAAA,EACJ,GAAIY,GAAqB,QAAXF,GAAoB,KAAKksB,oBAAoB5sB,GAAG+J,KAAKyiB,GAC/DxsB,OAAAA,EACJ,GAAIY,GAAqB,OAAXF,GAAmB,KAAKmsB,kBAAkB7sB,GAAG+J,KAAKyiB,GAC5DxsB,OAAAA,EACJ,IAAKY,GAAU,KAAK+rB,eAAe3sB,GAAG+J,KAAKyiB,GACvCxsB,OAAAA,IAm+EnB0pB,GAAQrY,cAr7ECA,SAAejG,GAChB,OAAA,KAAKqhB,qBACAtsB,EAAW,KAAM,mBAClB2R,GAAqBxS,KAAK,MAE1B8L,EACO,KAAKmH,qBAEL,KAAKH,iBAGXjS,EAAW,KAAM,oBACbiS,KAAAA,eAAiBT,IAEnB,KAAKY,sBAAwBnH,EAChC,KAAKmH,qBAAuB,KAAKH,iBAu6E7CsX,GAAQtY,mBAl6ECA,SAAoBhG,GACrB,OAAA,KAAKqhB,qBACAtsB,EAAW,KAAM,mBAClB2R,GAAqBxS,KAAK,MAE1B8L,EACO,KAAKoH,0BAEL,KAAKH,sBAGXlS,EAAW,KAAM,yBACbkS,KAAAA,oBAAsBT,IAExB,KAAKY,2BAA6BpH,EACrC,KAAKoH,0BAA4B,KAAKH,sBAo5ElDqX,GAAQvY,iBA/4ECA,SAAkB/F,GACnB,OAAA,KAAKqhB,qBACAtsB,EAAW,KAAM,mBAClB2R,GAAqBxS,KAAK,MAE1B8L,EACO,KAAKqH,wBAEL,KAAKH,oBAGXnS,EAAW,KAAM,uBACbmS,KAAAA,kBAAoBT,IAEtB,KAAKY,yBAA2BrH,EACnC,KAAKqH,wBAA0B,KAAKH,oBAk4EhDoX,GAAQtW,KAtuEC2Z,SAAY9tB,GAGT,MAAyC,OAAxCA,EAAQ,IAAIqI,cAAc0lB,OAAO,IAouE9CtD,GAAQ7nB,SAhuECorB,SAAgBta,EAAOE,EAASqa,GACjCva,OAAAA,EAAQ,GACDua,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAwzEhCrX,GAAmB,KAAM,CACrBpB,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJoC,IAA7BI,EAAMJ,EAAS,IAAM,IAAa,KACrC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,SAO/BxB,EAAMwjB,KAAOzc,EAAU,wDAAyDiQ,IAChFhX,EAAMsuB,SAAWvnB,EAAU,gEAAiEqQ,IAExFmX,IAAAA,GAAU5oB,KAAKc,IAmBV+nB,SAAAA,GAAelP,EAAUlf,EAAO6F,EAAOwc,GACxCzD,IAAAA,EAAQ8C,GAAe1hB,EAAO6F,GAM3BqZ,OAJPA,EAASW,eAAiBwC,EAAYzD,EAAMiB,cAC5CX,EAASY,OAAiBuC,EAAYzD,EAAMkB,MAC5CZ,EAASa,SAAiBsC,EAAYzD,EAAMmB,QAErCb,EAASe,UAaXoO,SAAAA,GAAS/oB,GACVA,OAAAA,EAAS,EACFC,KAAKE,MAAMH,GAEXC,KAAKC,KAAKF,GAmDhBgpB,SAAAA,GAAc9O,GAGZA,OAAO,KAAPA,EAAc,OAGhB+O,SAAAA,GAAcxf,GAEZA,OAAS,OAATA,EAAkB,KAkDpByf,SAAAA,GAAQC,GACN,OAAA,WACI,OAAA,KAAKC,GAAGD,IAInBE,IAAAA,GAAiBH,GAAO,MACxBI,GAAiBJ,GAAO,KACxBK,GAAiBL,GAAO,KACxBM,GAAiBN,GAAO,KACxBO,GAAiBP,GAAO,KACxBQ,GAAiBR,GAAO,KACxBS,GAAiBT,GAAO,KACxBU,GAAiBV,GAAO,KACxBW,GAAiBX,GAAO,KAWnBY,SAAAA,GAAW5nB,GACT,OAAA,WACI,OAAA,KAAKzE,UAAY,KAAKid,MAAMxY,GAAQ3D,KAI/C4b,IAAAA,GAAe2P,GAAW,gBAC1Bpb,GAAeob,GAAW,WAC1Bxb,GAAewb,GAAW,WAC1B1b,GAAe0b,GAAW,SAC1B5P,GAAe4P,GAAW,QAC1BrgB,GAAeqgB,GAAW,UAC1BjQ,GAAeiQ,GAAW,SAM1BhP,IAAAA,GAAQ7a,KAAK6a,MACbiP,GAAa,CACbzZ,GAAI,GACJhJ,EAAI,GACJ7K,EAAI,GACJ+T,EAAI,GACJxD,EAAI,GACJ2D,EAAI,IA6EJqZ,IAAAA,GAAQ/pB,KAAKc,IAERma,SAAAA,GAAK5R,GACF,OAACA,EAAI,IAAMA,EAAI,KAAQA,EAG1B2gB,SAAAA,KAQD,IAAC,KAAKxsB,UACC,OAAA,KAAKkH,aAAaS,cAGzBsJ,IAGAJ,EAASF,EAHTM,EAAUsb,GAAM,KAAKzP,eAAiB,IACtCL,EAAe8P,GAAM,KAAKxP,OAC1B/Q,EAAeugB,GAAM,KAAKvP,SAI9BnM,EAAoBvO,EAAS2O,EAAU,IACvCN,EAAoBrO,EAASuO,EAAU,IACvCI,GAAW,GACXJ,GAAW,GAQP4b,IAAAA,EALKnqB,EAAS0J,EAAS,IAMvBkH,EALJlH,GAAU,GAMN0gB,EAAIjQ,EACJ1J,EAAIpC,EACJ3R,EAAI6R,EACJhH,EAAIoH,EAAUA,EAAQ0b,QAAQ,GAAGnlB,QAAQ,SAAU,IAAM,GACzDolB,EAAQ,KAAKf,YAEb,IAACe,EAGM,MAAA,MAGPC,IAAAA,EAAYD,EAAQ,EAAI,IAAM,GAC9BE,EAASrP,GAAK,KAAKT,WAAaS,GAAKmP,GAAS,IAAM,GACpDG,EAAWtP,GAAK,KAAKV,SAAWU,GAAKmP,GAAS,IAAM,GACpDI,EAAUvP,GAAK,KAAKX,iBAAmBW,GAAKmP,GAAS,IAAM,GAExDC,OAAAA,EAAY,KACdJ,EAAIK,EAASL,EAAI,IAAM,KACvBvZ,EAAI4Z,EAAS5Z,EAAI,IAAM,KACvBwZ,EAAIK,EAAWL,EAAI,IAAM,KACxB3Z,GAAK/T,GAAK6K,EAAK,IAAM,KACtBkJ,EAAIia,EAAUja,EAAI,IAAM,KACxB/T,EAAIguB,EAAUhuB,EAAI,IAAM,KACxB6K,EAAImjB,EAAUnjB,EAAI,IAAM,IAG7BojB,IAAAA,GAAU/Q,GAAS9e,UAEvB6vB,GAAQjtB,QA5tDCktB,WACE,OAAA,KAAKjtB,UA4tDhBgtB,GAAQ3pB,IAxVCA,WACD0Q,IAAAA,EAAiB,KAAKiJ,MAanB,OAXFH,KAAAA,cAAgBsO,GAAQ,KAAKtO,eAC7BC,KAAAA,MAAgBqO,GAAQ,KAAKrO,OAC7BC,KAAAA,QAAgBoO,GAAQ,KAAKpO,SAElChJ,EAAK0I,aAAgB0O,GAAQpX,EAAK0I,cAClC1I,EAAK/C,QAAgBma,GAAQpX,EAAK/C,SAClC+C,EAAKnD,QAAgBua,GAAQpX,EAAKnD,SAClCmD,EAAKrD,MAAgBya,GAAQpX,EAAKrD,OAClCqD,EAAKhI,OAAgBof,GAAQpX,EAAKhI,QAClCgI,EAAKoI,MAAgBgP,GAAQpX,EAAKoI,OAE3B,MA2UX6Q,GAAQtR,IA7TCwR,SAAOlwB,EAAO6F,GACZuoB,OAAAA,GAAc,KAAMpuB,EAAO6F,EAAO,IA6T7CmqB,GAAQnN,SAzTCsN,SAAYnwB,EAAO6F,GACjBuoB,OAAAA,GAAc,KAAMpuB,EAAO6F,GAAQ,IAyT9CmqB,GAAQtB,GApPCA,SAAInmB,GACL,IAAC,KAAKxF,UACCc,OAAAA,IAEP2b,IAAAA,EACAzQ,EACA0Q,EAAe,KAAKI,cAIpBtX,GAAU,WAFdA,EAAQD,EAAeC,KAEY,YAAVA,GAAiC,SAAVA,EAGpCA,OAFRiX,EAAO,KAAKM,MAAQL,EAAe,MACnC1Q,EAAS,KAAKgR,QAAUuO,GAAa9O,GAC7BjX,GACC,IAAA,QAAkBwG,OAAAA,EAClB,IAAA,UAAkBA,OAAAA,EAAS,EAC3B,IAAA,OAAkBA,OAAAA,EAAS,QAK5BxG,OADRiX,EAAO,KAAKM,MAAQva,KAAK6a,MAAMmO,GAAa,KAAKxO,UACzCxX,GACC,IAAA,OAAkBiX,OAAAA,EAAO,EAAQC,EAAe,OAChD,IAAA,MAAkBD,OAAAA,EAAeC,EAAe,MAChD,IAAA,OAAkBD,OAAO,GAAPA,EAAeC,EAAe,KAChD,IAAA,SAAkBD,OAAO,KAAPA,EAAeC,EAAe,IAChD,IAAA,SAAkBD,OAAO,MAAPA,EAAeC,EAAe,IAEhD,IAAA,cAAsBla,OAAAA,KAAKE,MAAa,MAAP+Z,GAAgBC,EACtD,QAAe,MAAA,IAAItY,MAAM,gBAAkBoB,KAwNvDynB,GAAQrB,eAAiBA,GACzBqB,GAAQpB,UAAiBA,GACzBoB,GAAQnB,UAAiBA,GACzBmB,GAAQlB,QAAiBA,GACzBkB,GAAQjB,OAAiBA,GACzBiB,GAAQhB,QAAiBA,GACzBgB,GAAQf,SAAiBA,GACzBe,GAAQd,WAAiBA,GACzBc,GAAQb,QAAiBA,GACzBa,GAAQzuB,QA3NC6uB,WACD,OAAC,KAAKrtB,UAIN,KAAK8c,cACQ,MAAb,KAAKC,MACJ,KAAKC,QAAU,GAAM,OACK,QAA3Bra,EAAM,KAAKqa,QAAU,IANdlc,KA0NfmsB,GAAQ/P,QAzTCoQ,WACD5Q,IAIAzL,EAASJ,EAASF,EAAOyL,EAAOmR,EAJhC7Q,EAAe,KAAKI,cACpBL,EAAe,KAAKM,MACpB/Q,EAAe,KAAKgR,QACpBhJ,EAAe,KAAKiJ,MAwCjB,OAnCAP,GAAgB,GAAKD,GAAQ,GAAKzQ,GAAU,GAC1C0Q,GAAgB,GAAKD,GAAQ,GAAKzQ,GAAU,IACjD0Q,GAAuD,MAAvC4O,GAAQE,GAAaxf,GAAUyQ,GAC/CA,EAAO,EACPzQ,EAAS,GAKbgI,EAAK0I,aAAeA,EAAe,IAEnCzL,EAAoB3O,EAASoa,EAAe,KAC5C1I,EAAK/C,QAAeA,EAAU,GAE9BJ,EAAoBvO,EAAS2O,EAAU,IACvC+C,EAAKnD,QAAeA,EAAU,GAE9BF,EAAoBrO,EAASuO,EAAU,IACvCmD,EAAKrD,MAAeA,EAAQ,GAE5B8L,GAAQna,EAASqO,EAAQ,IAIzB3E,GADAuhB,EAAiBjrB,EAASipB,GAAa9O,IAEvCA,GAAQ6O,GAAQE,GAAa+B,IAG7BnR,EAAQ9Z,EAAS0J,EAAS,IAC1BA,GAAU,GAEVgI,EAAKyI,KAASA,EACdzI,EAAKhI,OAASA,EACdgI,EAAKoI,MAASA,EAEP,MA8QX6Q,GAAQ9O,MAjMCqP,WACE7O,OAAAA,GAAe,OAiM1BsO,GAAQzhB,IA9LCiiB,SAAOjoB,GAEL,OADPA,EAAQD,EAAeC,GAChB,KAAKxF,UAAY,KAAKwF,EAAQ,OAAS1E,KA6LlDmsB,GAAQvQ,aAAiBA,GACzBuQ,GAAQhc,QAAiBA,GACzBgc,GAAQpc,QAAiBA,GACzBoc,GAAQtc,MAAiBA,GACzBsc,GAAQxQ,KAAiBA,GACzBwQ,GAAQ1Q,MAjLCA,WACEja,OAAAA,EAAS,KAAKma,OAAS,IAiLlCwQ,GAAQjhB,OAAiBA,GACzBihB,GAAQ7Q,MAAiBA,GACzB6Q,GAAQlK,SA3GCA,SAAU2K,GACX,IAAC,KAAK1tB,UACC,OAAA,KAAKkH,aAAaS,cAGzBhJ,IAAAA,EAAS,KAAKuI,aACdQ,EA5DCimB,SAAgBC,EAAgB9K,EAAenkB,GAChDwd,IAAAA,EAAWwC,GAAeiP,GAAgBtqB,MAC1C2N,EAAWoM,GAAMlB,EAASwP,GAAG,MAC7B9a,EAAWwM,GAAMlB,EAASwP,GAAG,MAC7Bhb,EAAW0M,GAAMlB,EAASwP,GAAG,MAC7BlP,EAAWY,GAAMlB,EAASwP,GAAG,MAC7B3f,EAAWqR,GAAMlB,EAASwP,GAAG,MAC7BvP,EAAWiB,GAAMlB,EAASwP,GAAG,MAE7BvtB,EAAI6S,GAAWqb,GAAWzZ,IAAM,CAAC,IAAK5B,IAClCA,EAAUqb,GAAWziB,GAAO,CAAC,KAAMoH,IACnCJ,GAAW,GAAiB,CAAC,MAC7BA,EAAUyb,GAAWttB,GAAO,CAAC,KAAM6R,IACnCF,GAAW,GAAiB,CAAC,MAC7BA,EAAU2b,GAAWvZ,GAAO,CAAC,KAAMpC,IACnC8L,GAAW,GAAiB,CAAC,MAC7BA,EAAU6P,GAAW/c,GAAO,CAAC,KAAMkN,IACnCzQ,GAAW,GAAiB,CAAC,MAC7BA,EAAUsgB,GAAWpZ,GAAO,CAAC,KAAMlH,IACnCoQ,GAAW,GAAiB,CAAC,MAAkB,CAAC,KAAMA,GAKvDyR,OAHPzvB,EAAE,GAAK0kB,EACP1kB,EAAE,IAAMwvB,EAAiB,EACzBxvB,EAAE,GAAKO,EA3BFkvB,SAAkB/V,EAAQvV,EAAQugB,EAAe4F,EAAU/pB,GACzDA,OAAAA,EAAO+T,aAAanQ,GAAU,IAAKugB,EAAehL,EAAQ4Q,IA2BxC5rB,MAAM,KAAMsB,GAoCxBuvB,CAAe,MAAOD,EAAY/uB,GAMxCA,OAJH+uB,IACAhmB,EAAS/I,EAAOiqB,YAAY,KAAMlhB,IAG/B/I,EAAOkkB,WAAWnb,IAgG7BulB,GAAQ1I,YAAiBiI,GACzBS,GAAQ5vB,SAAiBmvB,GACzBS,GAAQnI,OAAiB0H,GACzBS,GAAQtuB,OAAiBA,GACzBsuB,GAAQ/lB,WAAiBA,GAEzB+lB,GAAQa,YAAclqB,EAAU,sFAAuF4oB,IACvHS,GAAQ5M,KAAOA,GAMfzZ,EAAe,IAAK,EAAG,EAAG,QAC1BA,EAAe,IAAK,EAAG,EAAG,WAI1BqC,GAAc,IAAKL,IACnBK,GAAc,IAlzHO,wBAmzHrBc,GAAc,IAAK,SAAU9M,EAAOqK,EAAOpF,GACvCA,EAAO5B,GAAK,IAAI3C,KAA6B,IAAxBkf,WAAW5f,EAAO,OAE3C8M,GAAc,IAAK,SAAU9M,EAAOqK,EAAOpF,GACvCA,EAAO5B,GAAK,IAAI3C,KAAKgF,EAAM1F,MAO/BJ,EAAMkxB,QAAU,SA17IZpxB,EA47IY2Z,GAEhBzZ,EAAMiB,GAAwBgkB,GAC9BjlB,EAAMuG,IAn0DGA,WAGE2Y,OAAAA,GAAO,WAFH,GAAG7X,MAAM5G,KAAKP,UAAW,KAm0DxCF,EAAMyJ,IA9zDGA,WAGEyV,OAAAA,GAAO,UAFH,GAAG7X,MAAM5G,KAAKP,UAAW,KA8zDxCF,EAAM0Y,IAzzDI,WACC5X,OAAAA,KAAK4X,IAAM5X,KAAK4X,OAAU,IAAI5X,MAyzDzCd,EAAMiC,IAAwBL,EAC9B5B,EAAMkoB,KApjBGiJ,SAAY/wB,GACVqZ,OAAAA,GAAoB,IAARrZ,IAojBvBJ,EAAMmP,OAlcGiiB,SAAYvvB,EAAQkpB,GAClBG,OAAAA,GAAerpB,EAAQkpB,EAAO,WAkczC/qB,EAAMa,OAAwBA,EAC9Bb,EAAM8B,OAAwBkV,GAC9BhX,EAAM+iB,QAAwB/e,EAC9BhE,EAAMsf,SAAwBwC,GAC9B9hB,EAAMuF,SAAwBA,EAC9BvF,EAAMqS,SAhcGgf,SAAchG,EAAcxpB,EAAQkpB,GAClCK,OAAAA,GAAiBC,EAAcxpB,EAAQkpB,EAAO,aAgczD/qB,EAAM6pB,UAxjBGyH,WACE7X,OAAAA,GAAYxZ,MAAM,KAAMC,WAAW2pB,aAwjB9C7pB,EAAMqK,WAAwB+M,GAC9BpX,EAAMsgB,WAAwBA,GAC9BtgB,EAAMkP,YAxcGqiB,SAAiB1vB,EAAQkpB,GACvBG,OAAAA,GAAerpB,EAAQkpB,EAAO,gBAwczC/qB,EAAMmS,YA7bGqf,SAAiBnG,EAAcxpB,EAAQkpB,GACrCK,OAAAA,GAAiBC,EAAcxpB,EAAQkpB,EAAO,gBA6bzD/qB,EAAMqX,aAAwBA,GAC9BrX,EAAMyxB,aA/kFGA,SAAa7pB,EAAMvC,GACpBA,GAAU,MAAVA,EAAgB,CACZvD,IAAAA,EAAQ4vB,EAAW1pB,EAAe8M,GAGrB,OADjB4c,EAAY9a,GAAWhP,MAEnBI,EAAe0pB,EAAUna,UAG7BzV,EAAS,IAAIoG,EADb7C,EAAS0C,EAAaC,EAAc3C,KAE7BmS,aAAef,GAAQ7O,GAC9B6O,GAAQ7O,GAAQ9F,EAGhBkV,GAAmBpP,QAGE,MAAjB6O,GAAQ7O,KAC0B,MAA9B6O,GAAQ7O,GAAM4P,aACdf,GAAQ7O,GAAQ6O,GAAQ7O,GAAM4P,aACN,MAAjBf,GAAQ7O,WACR6O,GAAQ7O,IAIpB6O,OAAAA,GAAQ7O,IAujFnB5H,EAAMyW,QA5hFGkb,WACEjqB,OAAAA,EAAK+O,KA4hFhBzW,EAAMoS,cArcGwf,SAAmBvG,EAAcxpB,EAAQkpB,GACvCK,OAAAA,GAAiBC,EAAcxpB,EAAQkpB,EAAO,kBAqczD/qB,EAAM0I,eAAwBA,EAC9B1I,EAAM6xB,qBAhMGC,SAA4BC,GAC7BA,YAAqBluB,IAArBkuB,EACOvR,GAEsB,mBAAtBuR,IACPvR,GAAQuR,GACD,IA2Lf/xB,EAAMgyB,sBArLGC,SAA6BC,EAAWC,GACzC1C,YAA0B5rB,IAA1B4rB,GAAWyC,UAGDruB,IAAVsuB,EACO1C,GAAWyC,IAEtBzC,GAAWyC,GAAaC,EACN,MAAdD,IACAzC,GAAWzZ,GAAKmc,EAAQ,IAErB,KA2KXnyB,EAAMwlB,eA93CG4M,SAAkBC,EAAU3Z,GAC7B2I,IAAAA,EAAOgR,EAAShR,KAAK3I,EAAK,QAAQ,GAC/B2I,OAAAA,GAAQ,EAAI,WACXA,GAAQ,EAAI,WACZA,EAAO,EAAI,UACXA,EAAO,EAAI,UACXA,EAAO,EAAI,UACXA,EAAO,EAAI,WAAa,YAw3CpCrhB,EAAMO,UAAwB0kB,GAG9BjlB,EAAMsyB,UAAY,CACdC,eAAgB,mBAChBC,uBAAwB,sBACxBC,kBAAmB,0BACnBhlB,KAAM,aACNilB,KAAM,QACNC,aAAc,WACdC,QAAS,eACT9kB,KAAM,aACNN,MAAO,WAKXxN,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,8FAA8FM,MAAM,KAC7GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,4DAA4D5C,MAAM,KAC7E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3C+G,cAAe,SACfjC,KAAO,SAAUnU,GACN,MAAA,QAAQ8K,KAAK9K,IAExB4C,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAGhCrjB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,eACVC,SAAW,eACXC,QAAU,iBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,YACP/I,EAAI,mBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,YACLC,EAAI,SACJC,GAAK,SACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,WACJC,GAAK,YACLnI,EAAI,UACJoI,GAAK,WAETX,uBAAwB,kBACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAAsB,IAAXA,GAA2B,IAAXA,GAAgBA,GAAU,GAAM,MAAQ,OAE9E0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,yEAAyEM,MAAM,KACxFP,YAAc,yEAAyEO,MAAM,KAC7F4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,wBAAwB1C,MAAM,KAC5CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,wBACTC,QAAS,sBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,WACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,WACLzD,EAAI,MACJ0D,GAAK,UACLC,EAAI,MACJC,GAAK,UACLnI,EAAI,MACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wEAAwEM,MAAM,KACvFP,YAAc,wEAAwEO,MAAM,KAC5F4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,wBACTC,QAAS,sBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,WACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,WACLzD,EAAI,MACJ0D,GAAK,UACLC,EAAI,MACJC,GAAK,UACLnI,EAAI,MACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,MAMV8hB,IAAAA,GAAY,CACP,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAa,SAAU9gB,GACfA,OAAM,IAANA,EAAU,EAAU,IAANA,EAAU,EAAU,IAANA,EAAU,EAAIA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAAK,EAAIA,EAAI,KAAO,GAAK,EAAI,GAC1G+gB,GAAU,CACThmB,EAAI,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,UAAW,WAAY,YACnF7K,EAAI,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,WAAY,WAAY,YACpF+T,EAAI,CAAC,cAAe,aAAc,CAAC,SAAU,UAAW,WAAY,UAAW,WAC/ExD,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,WAAY,UAC1E2D,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,UAAW,UACzElI,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,WAAY,WAAY,WAC5E8kB,GAAY,SAAU3L,GACd,OAAA,SAAU5hB,EAAQugB,EAAehL,EAAQ4Q,GACxCqH,IAAAA,EAAIH,GAAWrtB,GACfytB,EAAMH,GAAQ1L,GAAGyL,GAAWrtB,IAIzBytB,OAHG,IAAND,IACAC,EAAMA,EAAIlN,EAAgB,EAAI,IAE3BkN,EAAIxoB,QAAQ,MAAOjF,KAE/B0tB,GAAW,CACV,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGJpzB,EAAMqX,aAAa,QAAS,CACxBlI,OAASikB,GACTlkB,YAAckkB,GACd/gB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXa,cAAe,MACfjC,KAAO,SAAUnU,GACN,MAAA,MAAQA,GAEnB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,IAEA,KAGfxI,SAAW,CACPC,QAAS,wBACTC,QAAS,uBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SACTC,KAAO,SACP/I,EAAIimB,GAAU,KACdjd,GAAKid,GAAU,KACf9wB,EAAI8wB,GAAU,KACdhd,GAAKgd,GAAU,KACf/c,EAAI+c,GAAU,KACd9c,GAAK8c,GAAU,KACfvgB,EAAIugB,GAAU,KACd7c,GAAK6c,GAAU,KACf5c,EAAI4c,GAAU,KACd3c,GAAK2c,GAAU,KACf9kB,EAAI8kB,GAAU,KACd1c,GAAK0c,GAAU,MAEnBtV,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BooB,OAAAA,GAAUpoB,KAClBC,QAAQ,KAAM,MAErByG,KAAO,CACHL,IAAM,EACNC,IAAM,MAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wEAAwEM,MAAM,KACvFP,YAAc,wEAAwEO,MAAM,KAC5F4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,wBACTC,QAAS,sBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,WACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,WACLzD,EAAI,MACJ0D,GAAK,UACLC,EAAI,MACJC,GAAK,UACLnI,EAAI,MACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,MAMVqiB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAY,CACN,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTtzB,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,6EAA6EM,MAAM,KAC5FP,YAAc,6EAA6EO,MAAM,KACjG4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXa,cAAe,MACfjC,KAAO,SAAUnU,GACN,MAAA,MAAQA,GAEnB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,IAEA,KAGfxI,SAAW,CACPC,QAAS,wBACTC,QAAS,sBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,WACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,WACLzD,EAAI,MACJ0D,GAAK,UACLC,EAAI,MACJC,GAAK,UACLnI,EAAI,MACJoI,GAAK,YAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC4oB,OAAAA,GAAU5oB,KAClBC,QAAQ,KAAM,MAErBqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B2oB,OAAAA,GAAY3oB,KACpBC,QAAQ,KAAM,MAErByG,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAQ,yEAAyEM,MAAM,KACvFP,YAAa,yEAAyEO,MAAM,KAC5F4C,SAAU,sDAAsD5C,MAAM,KACtE2C,cAAe,wCAAwC3C,MAAM,KAC7D0C,YAAa,gBAAgB1C,MAAM,KACnCojB,oBAAqB,EACrB7nB,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAEVZ,SAAU,CACNC,QAAS,wBACTC,QAAS,sBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,QACRC,KAAM,SACN/I,EAAG,OACHgJ,GAAK,WACL7T,EAAG,QACH8T,GAAI,WACJC,EAAG,OACHC,GAAI,WACJzD,EAAG,MACH0D,GAAI,UACJC,EAAG,MACHC,GAAI,UACJnI,EAAG,MACHoI,GAAI,YAERnF,KAAM,CACFL,IAAK,EACLC,IAAK,KAMTuiB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACNC,GAAe,SAAUxhB,GACjBA,OAAM,IAANA,EAAU,EAAU,IAANA,EAAU,EAAU,IAANA,EAAU,EAAIA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAAK,EAAIA,EAAI,KAAO,GAAK,EAAI,GAC1GyhB,GAAY,CACX1mB,EAAI,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,UAAW,WAAY,YACnF7K,EAAI,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,WAAY,WAAY,YACpF+T,EAAI,CAAC,cAAe,aAAc,CAAC,SAAU,UAAW,WAAY,UAAW,WAC/ExD,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,WAAY,UAC1E2D,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,UAAW,UACzElI,EAAI,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,WAAY,WAAY,WAC5EwlB,GAAc,SAAUrM,GAChB,OAAA,SAAU5hB,EAAQugB,EAAehL,EAAQ4Q,GACxCqH,IAAAA,EAAIO,GAAa/tB,GACjBytB,EAAMO,GAAUpM,GAAGmM,GAAa/tB,IAI7BytB,OAHG,IAAND,IACAC,EAAMA,EAAIlN,EAAgB,EAAI,IAE3BkN,EAAIxoB,QAAQ,MAAOjF,KAE/BkuB,GAAW,CACV,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGJ5zB,EAAMqX,aAAa,KAAM,CACrBlI,OAASykB,GACT1kB,YAAc0kB,GACdvhB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,wCAAwC3C,MAAM,KAC9D0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXa,cAAe,MACfjC,KAAO,SAAUnU,GACN,MAAA,MAAQA,GAEnB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,IAEA,KAGfxI,SAAW,CACPC,QAAS,wBACTC,QAAS,uBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SACTC,KAAO,SACP/I,EAAI2mB,GAAY,KAChB3d,GAAK2d,GAAY,KACjBxxB,EAAIwxB,GAAY,KAChB1d,GAAK0d,GAAY,KACjBzd,EAAIyd,GAAY,KAChBxd,GAAKwd,GAAY,KACjBjhB,EAAIihB,GAAY,KAChBvd,GAAKud,GAAY,KACjBtd,EAAIsd,GAAY,KAChBrd,GAAKqd,GAAY,KACjBxlB,EAAIwlB,GAAY,KAChBpd,GAAKod,GAAY,MAErBhW,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC8oB,OAAAA,GAAY9oB,KACpBC,QAAQ,KAAM,MAErBqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B6oB,OAAAA,GAAY7oB,KACpBC,QAAQ,KAAM,MAErByG,KAAO,CACHL,IAAM,EACNC,IAAM,MAMV6iB,IAAAA,GAAW,CACR,EAAA,QACA,EAAA,QACA,EAAA,QACC,GAAA,QACA,GAAA,QACD,EAAA,OACA,EAAA,OACC,GAAA,OACA,GAAA,OACD,EAAA,QACA,EAAA,QACE,IAAA,QACF,EAAA,OACA,EAAA,QACC,GAAA,QACA,GAAA,QACA,GAAA,QACA,GAAA,SA+ECC,SAAAA,GAAuBpuB,EAAQugB,EAAe7e,GAC/CvF,IALckyB,EACdC,EAYA5sB,MAAQ,MAARA,EACO6e,EAAgB,UAAY,UAEtB,MAAR7e,EACE6e,EAAgB,UAAY,UAG5BvgB,EAAS,KApBFquB,GAoB6BruB,EAnB3CsuB,EAIS,CACH/N,GAAAA,EAAgB,yBAA2B,yBAC3CA,GAAAA,EAAgB,yBAA2B,yBAC3CA,GAAAA,EAAgB,yBAA2B,yBAC3C,GAAA,iBACA,GAAA,uBACA,GAAA,kBAS8B7e,GAnBvBqI,MAAM,KAChBskB,EAAM,IAAO,GAAKA,EAAM,KAAQ,GAAKC,EAAM,GAAMD,EAAM,IAAM,GAAKA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,KAAO,IAAMC,EAAM,GAAKA,EAAM,IA1ErJh0B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,+EAA+EM,MAAM,KAC9FP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,qEAAqE5C,MAAM,KACtF2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,kBACVC,QAAU,kBACVC,SAAW,+BACXC,QAAU,aACVC,SAAW,+BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,WACP/I,EAAI,iBACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,SACJoI,GAAK,SAETC,cAAe,0BACfjC,KAAO,SAAUnU,GACN,MAAA,mBAAmB8K,KAAK9K,IAEnC4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,QACAA,EAAO,GACP,SAEA,SAGf3H,uBAAwB,wCACxB1L,QAAU,SAAUxE,GACZA,GAAW,IAAXA,EACOA,OAAAA,EAAS,QAEhBnE,IAAAA,EAAImE,EAAS,GAGVA,OAAAA,GAAUmuB,GAAStyB,IAAMsyB,GAFxBnuB,EAAS,IAAMnE,IAEwBsyB,GADvCnuB,GAAU,IAAM,IAAM,QAGlC0L,KAAO,CACHL,IAAM,EACNC,IAAM,KA8BdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACLtN,OAAQ,uGAAuG4N,MAAM,KACrHwkB,WAAY,qGAAqGxkB,MAAM,MAE3HP,YAAc,0DAA0DO,MAAM,KAC9E4C,SAAW,CACPxQ,OAAQ,0DAA0D4N,MAAM,KACxEwkB,WAAY,0DAA0DxkB,MAAM,KAC5Eyc,SAAU,+CAEd9Z,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,iBACLC,IAAM,wBACNC,KAAO,+BAEXZ,SAAW,CACPC,QAAS,eACTC,QAAS,gBACTE,QAAS,eACTD,SAAU,WACC,MAAA,mBAEXE,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,0BACN,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,2BAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,UACTC,KAAO,UACP/I,EAAI,kBACJ7K,EAAI2xB,GACJ7d,GAAK6d,GACL5d,EAAI4d,GACJ3d,GAAK2d,GACLphB,EAAI,QACJ0D,GAAK0d,GACLzd,EAAI,QACJC,GAAKwd,GACL3lB,EAAI,MACJoI,GAAKud,IAETtd,cAAe,yBACfjC,KAAO,SAAUnU,GACN,MAAA,iBAAiB8K,KAAK9K,IAEjC4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,SACAA,EAAO,GACP,MAEA,UAGf3H,uBAAwB,mBACxB1L,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACM,OAAChd,EAAS,IAAO,GAAKA,EAAS,IAAO,GAAOA,EAAS,KAAQ,IAAMA,EAAS,KAAQ,GAAsBA,EAAS,KAAzBA,EAAS,KAC1G,IAAA,IACMA,OAAAA,EAAS,MACpB,QACWA,OAAAA,IAGnB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oFAAoFM,MAAM,KACnGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,YACJC,GAAK,cACLC,IAAM,mBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,cACVC,QAAU,cACVC,SAAW,cACXC,QAAU,eACVC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,6BACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,8BAGnB+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,WACP/I,EAAI,kBACJgJ,GAAK,aACL7T,EAAI,SACJ8T,GAAK,YACLC,EAAI,MACJC,GAAK,UACLzD,EAAI,MACJ0D,GAAK,SACLC,EAAI,QACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,aAETX,uBAAwB,8BACxB1L,QAAU,SAAUxE,GACZwuB,IAAAA,EAAYxuB,EAAS,GACrByuB,EAAczuB,EAAS,IACvBA,OAAW,IAAXA,EACOA,EAAS,MACO,IAAhByuB,EACAzuB,EAAS,MACTyuB,EAAc,IAAMA,EAAc,GAClCzuB,EAAS,MACK,IAAdwuB,EACAxuB,EAAS,MACK,IAAdwuB,EACAxuB,EAAS,MACK,IAAdwuB,GAAiC,IAAdA,EACnBxuB,EAAS,MAETA,EAAS,OAGxB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,8IAA8IM,MAAM,KAC7JP,YAAc,iDAAiDO,MAAM,KACrE4C,SAAW,+CAA+C5C,MAAM,KAChE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,2BACLC,IAAM,wCACNC,KAAO,8CAEXZ,SAAW,CACPC,QAAU,eACVC,QAAU,iBACVC,SAAW,qBACXC,QAAU,iBACVC,SAAW,yBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,aACP/I,EAAI,kBACJgJ,GAAK,aACL7T,EAAI,eACJ8T,GAAK,YACLC,EAAI,aACJC,GAAK,UACLzD,EAAI,aACJ0D,GAAK,UACLC,EAAI,aACJC,GAAK,UACLnI,EAAI,YACJoI,GAAK,UAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVojB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTr0B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,yDAAyDO,MAAM,KAC7E4C,SAAW,4DAA4D5C,MAAM,KAC7E2C,cAAgB,uCAAuC3C,MAAM,KAC7D0C,YAAc,kCAAkC1C,MAAM,KACtDzE,eAAiB,CACbuK,GAAK,aACLD,IAAM,gBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAU,UACVC,QAAU,gBACVC,SAAW,WACXC,QAAU,aACVC,SAAW,gBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,SACP/I,EAAI,eACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,WACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,SACLnI,EAAI,SACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC2pB,OAAAA,GAAY3pB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B0pB,OAAAA,GAAY1pB,MAG3B8L,cAAe,2BACfiH,aAAe,SAAUF,EAAMva,GAItBA,OAHQ,KAATua,IACAA,EAAO,GAEO,QAAbva,GAAsBua,GAAQ,GACb,UAAbva,GAAwBua,EAAO,GACnB,UAAbva,EACGua,EAAO,GAEPA,GAGfva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,MACAA,EAAO,GACP,OACAA,EAAO,GACP,QACAA,EAAO,GACP,QAEA,OAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVsjB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAqFAC,SAAAA,GAAyB9uB,EAAQugB,EAAe7e,GAM9C1B,OAAAA,EAAS,IAoBX+uB,SAASC,EAAMhvB,GAChBA,GAAW,IAAXA,EACOivB,OAINA,SAAaD,GACdE,IAAAA,EAAgB,CACX,EAAA,IACA,EAAA,IACA,EAAA,KAELA,QAAkC/wB,IAAlC+wB,EAAcF,EAAKvG,OAAO,IACnBuG,OAAAA,EAEJE,OAAAA,EAAcF,EAAKvG,OAAO,IAAMuG,EAAKG,UAAU,GAb3CF,CAAaD,GAEjBA,OAAAA,EAxBeD,CALT,CACH,GAAA,WACA,GAAA,MACA,GAAA,UAE4BrtB,GAAM1B,GA0FvCovB,SAAAA,GAAUpvB,EAAQugB,EAAe7e,GAClCmV,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,KAQMmV,OANHA,GADW,IAAX7W,EACU,UACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,UAEA,UAGb,IAAA,IACMugB,OAAAA,EAAgB,eAAiB,eACvC,IAAA,KAQM1J,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,SAEA,SAGb,IAAA,IACMugB,OAAAA,EAAgB,YAAc,cACpC,IAAA,KAQM1J,OANHA,GADW,IAAX7W,EACU,MACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,OAEA,OAGb,IAAA,KAMM6W,OAJHA,GADW,IAAX7W,EACU,MAEA,OAGb,IAAA,KAQM6W,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,UAEA,UAGb,IAAA,KAQM6W,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,SAEA,UA1O1B1F,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qJAAqJM,MAAM,KACpKP,YAAc,qJAAqJO,MAAM,KACzK4C,SAAW,gFAAgF5C,MAAM,KACjG2C,cAAgB,oDAAoD3C,MAAM,KAC1E0C,YAAc,oDAAoD1C,MAAM,KACxEzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,sBACNC,KAAO,6BAEXZ,SAAW,CACPC,QAAU,cACVC,QAAU,cACVC,SAAW,wBACXC,QAAU,YACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,WACP/I,EAAI,QACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,WACLC,EAAI,cACJC,GAAK,YACLzD,EAAI,WACJ0D,GAAK,UACLC,EAAI,YACJC,GAAK,UACLnI,EAAI,UACJoI,GAAK,SAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC6pB,OAAAA,GAAY7pB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B4pB,OAAAA,GAAY5pB,MAG3B8L,cAAe,wCACfiH,aAAe,SAAUF,EAAMva,GAItBA,OAHQ,KAATua,IACAA,EAAO,GAEO,WAAbva,GAAyBua,GAAQ,GAChB,YAAbva,GAA0Bua,EAAO,GACrB,YAAbva,EACGua,EAAO,GAEPA,GAGfva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,GACP,UACAA,EAAO,GACP,UACAA,EAAO,GACP,UAEA,UAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAkDdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,gFAAiFM,MAAM,KAChGP,YAAc,mDAAoDO,MAAM,KACxE4C,SAAW,6CAA8C5C,MAAM,KAC/D2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,wBAAwB1C,MAAM,KAC5CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,WACLD,IAAM,cACNE,EAAI,aACJC,GAAK,sBACLC,IAAM,+BACNC,KAAO,sCAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,qBACVC,SAAW,eACXC,QAAU,gBACVC,SAAW,qBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,SACP/I,EAAI,wBACJgJ,GAAK,YACL7T,EAAI,cACJ8T,GAAKue,GACLte,EAAI,SACJC,GAAK,SACLzD,EAAI,YACJ0D,GAAKoe,GACLne,EAAI,SACJC,GAAKke,GACLrmB,EAAI,WACJoI,GAzECwe,SAAwBrvB,GACrBsvB,OAWHA,SAAAA,EAAWtvB,GACZA,OAAAA,EAAS,EACFsvB,EAAWtvB,EAAS,IAExBA,EAfCsvB,CAAWtvB,IACV,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACMA,OAAAA,EAAS,SACpB,QACWA,OAAAA,EAAS,YAkExBkQ,uBAAwB,kBACxB1L,QAAU,SAAUxE,GAETA,OAAAA,GADkB,IAAXA,EAAgB,KAAO,QAGzC0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAoEdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAkB,EAClB5iB,SAAW,4DAA4D5C,MAAM,KAC7E2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAW,eACXC,QAAW,eACXC,SAAW,WACC,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,wBACN,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,oBAGnB6B,QAAW,eACXC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,2BACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,yBAGnB+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAS,WACT/I,EAAS,cACTgJ,GAAS8e,GACT3yB,EAAS2yB,GACT7e,GAAS6e,GACT5e,EAAS4e,GACT3e,GAAS2e,GACTpiB,EAAS,MACT0D,GAAS0e,GACTze,EAAS,SACTC,GAASwe,GACT3mB,EAAS,SACToI,GAASue,IAEblf,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACL8kB,WAAY,oFAAoFxkB,MAAM,KACtG5N,OAAQ,qHAAwH4N,MAAM,KACtIyc,SAAU,mBAEdhd,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,mBACLyf,GAAK,aACLxf,IAAM,gCACNyf,IAAM,mBACNxf,KAAO,qCACPyf,KAAO,wBAEXrgB,SAAW,CACPC,QAAU,WACC,MAAA,YAAgC,IAAjB,KAAKlB,QAAiB,MAAQ,MAAQ,QAEhEmB,QAAU,WACC,MAAA,YAAgC,IAAjB,KAAKnB,QAAiB,MAAQ,MAAQ,QAEhEoB,SAAW,WACA,MAAA,YAAgC,IAAjB,KAAKpB,QAAiB,MAAQ,MAAQ,QAEhEqB,QAAU,WACC,MAAA,YAAgC,IAAjB,KAAKrB,QAAiB,MAAQ,MAAQ,QAEhEsB,SAAW,WACA,MAAA,wBAA4C,IAAjB,KAAKtB,QAAiB,MAAQ,MAAQ,QAE5EuB,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,QACP/I,EAAI,aACJgJ,GAAK,YACL7T,EAAI,WACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAwB,qBACxB1L,QAAU,SAAUxE,EAAQgd,GACpB7X,IAAAA,EAAqB,IAAXnF,EAAgB,IACd,IAAXA,EAAgB,IACL,IAAXA,EAAgB,IACL,IAAXA,EAAgB,IAAM,IAIpBA,MAHQ,MAAXgd,GAA6B,MAAXA,IAClB7X,EAAS,KAENnF,EAASmF,GAEpBuG,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVqkB,IAAAA,GAAW,oFAAoF5lB,MAAM,KACrGP,GAAc,kDAAkDO,MAAM,KAEtEH,GAAc,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,yBAA0B,4BAA6B,QAAS,QAAS,QAAS,QAAS,SAGvJgmB,GAAgB,wJAEXC,SAAAA,GAAStjB,GACNA,OAAAA,EAAI,GAAOA,EAAI,GAAsB,MAAZA,EAAI,IAEhCujB,SAAAA,GAAY9vB,EAAQugB,EAAe7e,EAAKykB,GACzCtP,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,IACO6e,OAAAA,GAAiB4F,EAAY,aAAe,gBACnD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,UAAY,UAEzC6W,EAAS,YAGnB,IAAA,IACM0J,OAAAA,EAAgB,SAAY4F,EAAW,SAAW,UACxD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,SAAW,SAExC6W,EAAS,WAGnB,IAAA,IACM0J,OAAAA,EAAgB,SAAY4F,EAAW,SAAW,UACxD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,SAAW,SAExC6W,EAAS,WAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,MAAQ,OAC5C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,MAAQ,OAErC6W,EAAS,MAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,QAAU,UAC9C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,SAAW,UAExC6W,EAAS,SAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,MAAQ,QAC5C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUgZ,GAAS7vB,GAAU,OAAS,OAEtC6W,EAAS,QAsQvBkZ,SAAAA,GAAoB/vB,EAAQugB,EAAe7e,EAAKykB,GACjDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,UAAW,aACX,GAAA,CAAC6D,EAAS,QAASA,EAAS,UAC7B,EAAA,CAAC,YAAa,eACb,GAAA,CAACA,EAAS,UAAWA,EAAS,YAC/B,EAAA,CAAC,WAAY,cACZ,GAAA,CAACA,EAAS,SAAUA,EAAS,YAEhCugB,OAAAA,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAqD/CsuB,SAAAA,GAAsBhwB,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,UAAW,aACX,GAAA,CAAC6D,EAAS,QAASA,EAAS,UAC7B,EAAA,CAAC,YAAa,eACb,GAAA,CAACA,EAAS,UAAWA,EAAS,YAC/B,EAAA,CAAC,WAAY,cACZ,GAAA,CAACA,EAAS,SAAUA,EAAS,YAEhCugB,OAAAA,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAqD/CuuB,SAAAA,GAAsBjwB,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,cAAe,gBAChB,EAAA,CAAC,UAAW,aACX,GAAA,CAAC6D,EAAS,QAASA,EAAS,UAC7B,EAAA,CAAC,YAAa,eACb,GAAA,CAACA,EAAS,UAAWA,EAAS,YAC/B,EAAA,CAAC,WAAY,cACZ,GAAA,CAACA,EAAS,SAAUA,EAAS,YAEhCugB,OAAAA,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GA3YxDpH,EAAMqX,aAAa,KAAM,CACrBlI,OAASkmB,GACTnmB,YAAcA,GACdG,YAAcimB,GACdlmB,iBAAmBkmB,GAGnBM,kBAAoB,uKACpBC,uBAAyB,sDACzBvmB,YAAcA,GACdwmB,gBAAkBxmB,GAClBymB,iBAAmBzmB,GACnB+C,SAAW,mDAAmD5C,MAAM,KACpE2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAI,OACJD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,oBACNC,KAAO,yBACPiF,EAAI,cAER7F,SAAW,CACPC,QAAS,cACTC,QAAS,eACTC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,kBACN,KAAA,EACA,KAAA,EACM,MAAA,kBACN,KAAA,EACM,MAAA,mBACN,KAAA,EACM,MAAA,oBACN,KAAA,EACM,MAAA,iBACN,KAAA,EACM,MAAA,oBAGnB6B,QAAS,eACTC,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,wBACN,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,wBACN,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,0BAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAIwoB,GACJxf,GAAKwf,GACLrzB,EAAIqzB,GACJvf,GAAKuf,GACLtf,EAAIsf,GACJrf,GAAKqf,GACL9iB,EAAI8iB,GACJpf,GAAKof,GACLnf,EAAImf,GACJlf,GAAKkf,GACLrnB,EAAIqnB,GACJjf,GAAKif,IAET5f,uBAAyB,YACzB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,gEAAgEM,MAAM,KAC/EP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,oEAAoE5C,MAAM,KACrF2C,cAAgB,6BAA6B3C,MAAM,KACnD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,sCACLC,IAAM,6CACNC,KAAO,oDAEXZ,SAAW,CACPC,QAAS,sBACTC,QAAS,sBACTE,QAAS,sBACTD,SAAU,4BACVE,SAAU,4BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SAAUjL,GAERA,OAAAA,GADK,UAAUqQ,KAAKrQ,GAAU,MAAQ,QAAQqQ,KAAKrQ,GAAU,MAAQ,QAGhFkL,KAAO,YACP/I,EAAI,iBACJgJ,GAAK,aACL7T,EAAI,YACJ8T,GAAK,WACLC,EAAI,YACJC,GAAK,WACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,WACJC,GAAK,UACLnI,EAAI,UACJoI,GAAK,UAETX,uBAAwB,cACxB1L,QAAU,SACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,yFAAyFM,MAAM,KACvGP,YAAa,qDAAqDO,MAAM,KACxE4C,SAAU,+EAA+E5C,MAAM,KAC/F2C,cAAe,+BAA+B3C,MAAM,KACpD0C,YAAa,uBAAuB1C,MAAM,KAC1CojB,oBAAqB,EAErB7nB,eAAgB,CACZuK,GAAI,QACJD,IAAM,WACNE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,2BAEVZ,SAAU,CACNC,QAAS,iBACTC,QAAS,gBACTC,SAAU,eACVC,QAAS,eACTC,SAAU,wBACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,UACRC,KAAM,WACN/I,EAAG,mBACHgJ,GAAI,YACJ7T,EAAG,QACH8T,GAAI,WACJC,EAAG,MACHC,GAAI,SACJzD,EAAG,UACH0D,GAAI,aACJC,EAAG,MACHC,GAAI,SACJnI,EAAG,WACHoI,GAAI,cAERX,uBAAwB,mCAExB1L,QAAS,SAAUxE,GACXlE,IACAqJ,EAAS,GAcNnF,OAfCA,EAMA,GAEAmF,EADM,KAPNnF,GAOkB,KAPlBA,GAO8B,KAP9BA,GAO0C,KAP1CA,GAOsD,MAPtDA,EAQS,MAEA,MAVTA,EAYO,IACXmF,EAXS,CACL,GAAI,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,MAAO,MADzD,KAEC,MAAO,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,OAJzDnF,IAeDA,EAASmF,GAEpBuG,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,sFAAsFM,MAAM,KACrGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,qDAAqD5C,MAAM,KACtE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,sCAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,oBACVC,SAAW,mBACXC,QAAU,iBACVC,SAAW,qBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,WACP/I,EAAI,cACJgJ,GAAK,cACL7T,EAAI,WACJ8T,GAAK,cACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,WACJC,GAAK,aACLnI,EAAI,QACJoI,GAAK,SAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAoBdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,6DAA6DO,MAAM,KACjFwlB,kBAAmB,EACnB5iB,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAI,QACJD,IAAK,WACLE,EAAI,aACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAS,sBACTK,SAAU,IACVJ,QAAS,uBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,gCAEdS,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAIszB,GACJxf,GAAK,aACLC,EAAIuf,GACJtf,GAAK,aACLzD,EAAI+iB,GACJrf,GAAKqf,GACLpf,EAAIof,GACJnf,GAAKmf,GACLtnB,EAAIsnB,GACJlf,GAAKkf,IAET7f,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAoBdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,6DAA6DO,MAAM,KACjFwlB,kBAAmB,EACnB5iB,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAI,QACJD,IAAK,WACLE,EAAI,aACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAS,sBACTK,SAAU,IACVJ,QAAS,uBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,gCAEdS,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAIuzB,GACJzf,GAAK,aACLC,EAAIwf,GACJvf,GAAK,aACLzD,EAAIgjB,GACJtf,GAAKsf,GACLrf,EAAIqf,GACJpf,GAAKof,GACLvnB,EAAIunB,GACJnf,GAAKmf,IAET9f,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAoBdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,6DAA6DO,MAAM,KACjFwlB,kBAAmB,EACnB5iB,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAI,QACJD,IAAK,WACLE,EAAI,aACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAS,sBACTK,SAAU,IACVJ,QAAS,uBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,gCAEdS,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAIwzB,GACJ1f,GAAK,aACLC,EAAIyf,GACJxf,GAAK,aACLzD,EAAIijB,GACJvf,GAAKuf,GACLtf,EAAIsf,GACJrf,GAAKqf,GACLxnB,EAAIwnB,GACJpf,GAAKof,IAET/f,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVglB,IAAAA,GAAW,CACX,WACA,aACA,SACA,WACA,KACA,OACA,SACA,WACA,eACA,aACA,aACA,cACD3jB,GAAW,CACV,WACA,OACA,WACA,OACA,aACA,SACA,YAGJrS,EAAMqX,aAAa,KAAM,CACrBlI,OAAS6mB,GACT9mB,YAAc8mB,GACd3jB,SAAWA,GACXD,cAAgBC,GAChBF,YAAc,qCAAqC1C,MAAM,KACzDzE,eAAiB,CAEbuK,GAAK,QACLD,IAAM,WACNE,EAAI,WACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXa,cAAe,QACfjC,KAAO,SAAUnU,GACN,MAAA,OAASA,GAEpB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,KAEA,MAGfxI,SAAW,CACPC,QAAU,cACVC,QAAU,cACVC,SAAW,UACXC,QAAU,cACVC,SAAW,qBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,cACTC,KAAO,YACP/I,EAAI,iBACJgJ,GAAK,cACL7T,EAAI,WACJ8T,GAAK,YACLC,EAAI,aACJC,GAAK,cACLzD,EAAI,WACJ0D,GAAK,YACLC,EAAI,SACJC,GAAK,UACLnI,EAAI,WACJoI,GAAK,aAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCyG,KAAO,CACHL,IAAM,EACNC,IAAM,MAMdhR,EAAMqX,aAAa,KAAM,CACrB4e,mBAAqB,qHAAqHxmB,MAAM,KAChJymB,iBAAmB,qHAAqHzmB,MAAM,KAC9IN,OAAS,SAAUgnB,EAAgBt0B,GAC3B,OAACs0B,EAEwB,iBAAXt0B,GAAuB,IAAIqJ,KAAKrJ,EAAOgzB,UAAU,EAAGhzB,EAAO0M,QAAQ,UAC1E,KAAK6nB,kBAAkBD,EAAevnB,SAEtC,KAAKynB,oBAAoBF,EAAevnB,SAJxC,KAAKynB,qBAOpBnnB,YAAc,oDAAoDO,MAAM,KACxE4C,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzM,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAGhC9Z,KAAO,SAAUnU,GACL,MAAkC,OAAjCA,EAAQ,IAAIqI,cAAc,IAEvC+N,cAAgB,gBAChBxL,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEX2gB,WAAa,CACTthB,QAAU,iBACVC,QAAU,gBACVC,SAAW,eACXC,QAAU,eACVC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,gCACX,QACW,MAAA,mCAGnB+B,SAAW,KAEfN,SAAW,SAAU3N,EAAKwD,GAClBC,IAAAA,EAAS,KAAK0rB,YAAYnvB,GAC1B0M,EAAQlJ,GAAOA,EAAIkJ,QAIhBjJ,OAHHhD,EAAWgD,KACXA,EAASA,EAAO5K,MAAM2K,IAEnBC,EAAOF,QAAQ,KAAOmJ,EAAQ,IAAO,EAAI,MAAQ,SAE5D+B,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,oBACJgJ,GAAK,kBACL7T,EAAI,YACJ8T,GAAK,WACLC,EAAI,UACJC,GAAK,UACLzD,EAAI,WACJ0D,GAAK,WACLC,EAAI,aACJC,GAAK,WACLnI,EAAI,cACJoI,GAAK,aAETX,uBAAwB,WACxB1L,QAAS,MACTkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,eACLC,IAAM,sBACNC,KAAO,6BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,SAO/BxB,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJ7K,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,SAO/BxB,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,QACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,6FAA6FM,MAAM,KAC5GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,qDAAqD5C,MAAM,KACtE2C,cAAgB,gCAAgC3C,MAAM,KACtD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,sBACLC,IAAM,4BACNC,KAAO,wCAEXa,cAAe,cACfjC,KAAM,SAAUnU,GACLA,MAAkC,MAAlCA,EAAM+tB,OAAO,GAAG1lB,eAE3BzF,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,SAAW,SAErBA,EAAU,SAAW,UAGpCtZ,SAAW,CACPC,QAAU,iBACVC,QAAU,iBACVC,SAAW,eACXC,QAAU,iBACVC,SAAW,yBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,WACP/I,EAAI,WACJgJ,GAAK,cACL7T,EAAI,SACJ8T,GAAK,aACLC,EAAI,OACJC,GAAK,WACLzD,EAAI,OACJ0D,GAAK,WACLC,EAAI,SACJC,GAAK,aACLnI,EAAI,OACJoI,GAAK,YAETX,uBAAwB,WACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVwlB,IAAAA,GAAiB,8DAA8D/mB,MAAM,KACrFgnB,GAAgB,kDAAkDhnB,MAAM,KAExEinB,GAAgB,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SACpHC,GAAgB,mLAEpB32B,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,2FAA2FM,MAAM,KAC1GP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACb40B,GAAct0B,EAAEyM,SAEhB4nB,GAAer0B,EAAEyM,SAJjB4nB,IAOfnnB,YAAasnB,GACbvnB,iBAAkBunB,GAClBf,kBAAmB,+FACnBC,uBAAwB,0FACxBvmB,YAAaonB,GACbZ,gBAAiBY,GACjBX,iBAAkBW,GAClBrkB,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,+BACNC,KAAO,sCAEXZ,SAAW,CACPC,QAAU,WACC,MAAA,aAAiC,IAAjB,KAAKlB,QAAiB,IAAM,IAAM,QAE7DmB,QAAU,WACC,MAAA,gBAAoC,IAAjB,KAAKnB,QAAiB,IAAM,IAAM,QAEhEoB,SAAW,WACA,MAAA,cAAkC,IAAjB,KAAKpB,QAAiB,IAAM,IAAM,QAE9DqB,QAAU,WACC,MAAA,cAAkC,IAAjB,KAAKrB,QAAiB,IAAM,IAAM,QAE9DsB,SAAW,WACA,MAAA,0BAA8C,IAAjB,KAAKtB,QAAiB,IAAM,IAAM,QAE1EuB,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,gBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV4lB,IAAAA,GAAmB,8DAA8DnnB,MAAM,KACvFonB,GAAgB,kDAAkDpnB,MAAM,KAExEqnB,GAAgB,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SACpHC,GAAgB,mLAEpB/2B,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,2FAA2FM,MAAM,KAC1GP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACbg1B,GAAc10B,EAAEyM,SAEhBgoB,GAAiBz0B,EAAEyM,SAJnBgoB,IAOfvnB,YAAa0nB,GACb3nB,iBAAkB2nB,GAClBnB,kBAAmB,+FACnBC,uBAAwB,0FACxBvmB,YAAawnB,GACbhB,gBAAiBgB,GACjBf,iBAAkBe,GAClBzkB,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,+BACNC,KAAO,sCAEXZ,SAAW,CACPC,QAAU,WACC,MAAA,aAAiC,IAAjB,KAAKlB,QAAiB,IAAM,IAAM,QAE7DmB,QAAU,WACC,MAAA,gBAAoC,IAAjB,KAAKnB,QAAiB,IAAM,IAAM,QAEhEoB,SAAW,WACA,MAAA,cAAkC,IAAjB,KAAKpB,QAAiB,IAAM,IAAM,QAE9DqB,QAAU,WACC,MAAA,cAAkC,IAAjB,KAAKrB,QAAiB,IAAM,IAAM,QAE9DsB,SAAW,WACA,MAAA,0BAA8C,IAAjB,KAAKtB,QAAiB,IAAM,IAAM,QAE1EuB,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,gBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVgmB,IAAAA,GAAmB,8DAA8DvnB,MAAM,KACvFwnB,GAAgB,kDAAkDxnB,MAAM,KAExEynB,GAAgB,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SACpHC,GAAgB,mLA4EXC,SAAAA,GAAsB1xB,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACH,EAAA,CAAC,eAAgB,cAAe,iBAChC,GAAA,CAAC6D,EAAS,UAAWA,EAAS,YAC9B,EAAA,CAAC,aAAc,aACf,GAAA,CAACA,EAAS,UAAWA,EAAS,YAC9B,EAAA,CAAC,YAAa,YAAa,YAC3B,GAAA,CAACA,EAAS,SAAUA,EAAS,UAC7B,EAAA,CAAC,YAAa,YACd,EAAA,CAAC,UAAW,WAAY,WACxB,GAAA,CAACA,EAAS,OAAQA,EAAS,SAC3B,EAAA,CAAC,YAAa,QAAS,aACvB,GAAA,CAACA,EAAS,SAAUA,EAAS,YAEnCugB,OAAAA,EACOpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAElDykB,EAAWhqB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GA3FnDpH,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,2FAA2FM,MAAM,KAC1GP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACbo1B,GAAc90B,EAAEyM,SAEhBooB,GAAiB70B,EAAEyM,SAJnBooB,IAOf3nB,YAAc8nB,GACd/nB,iBAAmB+nB,GACnBvB,kBAAoB,+FACpBC,uBAAyB,0FACzBvmB,YAAc4nB,GACdpB,gBAAkBoB,GAClBnB,iBAAmBmB,GACnB7kB,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,6BACNC,KAAO,oCAEXZ,SAAW,CACPC,QAAU,WACC,MAAA,aAAiC,IAAjB,KAAKlB,QAAiB,IAAM,IAAM,QAE7DmB,QAAU,WACC,MAAA,gBAAoC,IAAjB,KAAKnB,QAAiB,IAAM,IAAM,QAEhEoB,SAAW,WACA,MAAA,cAAkC,IAAjB,KAAKpB,QAAiB,IAAM,IAAM,QAE9DqB,QAAU,WACC,MAAA,cAAkC,IAAjB,KAAKrB,QAAiB,IAAM,IAAM,QAE9DsB,SAAW,WACA,MAAA,0BAA8C,IAAjB,KAAKtB,QAAiB,IAAM,IAAM,QAE1EuB,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,gBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KA0BdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAgB,6FAA6FM,MAAM,KACnHP,YAAgB,6DAA6DO,MAAM,KACnF4C,SAAgB,iEAAiE5C,MAAM,KACvF2C,cAAgB,gBAAgB3C,MAAM,KACtC0C,YAAgB,gBAAgB1C,MAAM,KACtCzE,eAAiB,CACbuK,GAAO,OACPD,IAAM,UACNE,EAAO,aACPC,GAAO,eACPC,IAAO,oBACPC,KAAO,2BAEXZ,SAAW,CACPC,QAAW,aACXC,QAAW,cACXC,SAAW,qBACXC,QAAW,aACXC,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAS,YACT/I,EAASoqB,GACTphB,GAASohB,GACTj1B,EAASi1B,GACTnhB,GAASmhB,GACTlhB,EAASkhB,GACTjhB,GAASihB,GACT1kB,EAAS0kB,GACThhB,GAAS,WACTC,EAAS+gB,GACT9gB,GAAS8gB,GACTjpB,EAASipB,GACT7gB,GAAS6gB,IAEbxhB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,+FAA+FM,MAAM,KAC9GP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAW,sEAAsE5C,MAAM,KACvF2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,0BACLC,IAAM,gCACNC,KAAO,sCACPiF,EAAI,WACJsa,GAAK,oBACLC,IAAM,0BACNC,KAAO,gCAEXrgB,SAAW,CACPC,QAAU,kBACVC,QAAU,mBACVC,SAAW,gBACXC,QAAU,kBACVC,SAAW,0BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,WACP/I,EAAI,iBACJgJ,GAAK,aACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,WACJ0D,GAAK,UACLC,EAAI,eACJC,GAAK,cACLnI,EAAI,WACJoI,GAAK,WAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVqmB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTt3B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wEAAwEM,MAAM,KACvFP,YAAc,wEAAwEO,MAAM,KAC5F4C,SAAW,qDAAoE5C,MAAM,KACrF2C,cAAgB,qDAAoE3C,MAAM,KAC1F0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXa,cAAe,wBACfjC,KAAM,SAAUnU,GACL,MAAA,aAAa8K,KAAK9K,IAE7B4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,aAEA,cAGfxI,SAAW,CACPC,QAAU,kBACVC,QAAU,iBACVC,SAAW,iBACXC,QAAU,kBACVC,SAAW,uBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,YACJgJ,GAAK,WACL7T,EAAI,WACJ8T,GAAK,WACLC,EAAI,UACJC,GAAK,UACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,SACLnI,EAAI,SACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,SAAU,SAAUD,GAC/B4sB,OAAAA,GAAY5sB,KACpBC,QAAQ,KAAM,MAErBqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B2sB,OAAAA,GAAY3sB,KACpBC,QAAQ,KAAM,MAErBiL,uBAAwB,WACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,MAMVumB,IAAAA,GAAc,wEAAwE9nB,MAAM,KAC5F+nB,GAAgB,CACZ,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAC1DD,GAAY,GAAIA,GAAY,GAAIA,GAAY,IAE3CE,SAAAA,GAAY/xB,EAAQugB,EAAe7e,EAAKykB,GACzCtP,IAAAA,EAAS,GACLnV,OAAAA,GACC,IAAA,IACMykB,OAAAA,EAAW,oBAAsB,kBACvC,IAAA,KACMA,OAAAA,EAAW,WAAa,WAC9B,IAAA,IACMA,OAAAA,EAAW,WAAa,WAC9B,IAAA,KACDtP,EAASsP,EAAW,WAAa,YACjC,MACC,IAAA,IACMA,OAAAA,EAAW,SAAW,QAC5B,IAAA,KACDtP,EAASsP,EAAW,SAAW,SAC/B,MACC,IAAA,IACMA,OAAAA,EAAW,SAAW,QAC5B,IAAA,KACDtP,EAASsP,EAAW,SAAW,SAC/B,MACC,IAAA,IACMA,OAAAA,EAAW,YAAc,WAC/B,IAAA,KACDtP,EAASsP,EAAW,YAAc,YAClC,MACC,IAAA,IACMA,OAAAA,EAAW,SAAW,QAC5B,IAAA,KACDtP,EAASsP,EAAW,SAAW,SAIhCtP,OADPA,EAGKmb,SAAahyB,EAAQmmB,GACnBnmB,OAAAA,EAAS,GAAMmmB,EAAW2L,GAAc9xB,GAAU6xB,GAAY7xB,GAAWA,EAJvEgyB,CAAahyB,EAAQmmB,GAAY,IAAMtP,EAOpDvc,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,2GAA2GM,MAAM,KAC1HP,YAAc,uEAAuEO,MAAM,KAC3F4C,SAAW,qEAAqE5C,MAAM,KACtF2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,mBACLC,IAAM,gCACNC,KAAO,sCACPiF,EAAI,WACJsa,GAAK,cACLC,IAAM,2BACNC,KAAO,iCAEXrgB,SAAW,CACPC,QAAU,oBACVC,QAAU,sBACVC,SAAW,gBACXC,QAAU,mBACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,YACP/I,EAAIyqB,GACJzhB,GAAKyhB,GACLt1B,EAAIs1B,GACJxhB,GAAKwhB,GACLvhB,EAAIuhB,GACJthB,GAAKshB,GACL/kB,EAAI+kB,GACJrhB,GAAKqhB,GACLphB,EAAIohB,GACJnhB,GAAKmhB,GACLtpB,EAAIspB,GACJlhB,GAAKkhB,IAET7hB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,4EAA4E5C,MAAM,KAC7F2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,oBACVC,SAAW,gBACXC,QAAU,kBACVC,SAAW,wBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,YACP/I,EAAI,YACJgJ,GAAK,cACL7T,EAAI,eACJ8T,GAAK,cACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,YACJ0D,GAAK,WACLC,EAAI,cACJC,GAAK,aACLnI,EAAI,UACJoI,GAAK,SAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,uFAAuFM,MAAM,KACtGP,YAAc,iEAAiEO,MAAM,KACrFwlB,kBAAmB,EACnB5iB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,qBACVC,QAAU,gBACVC,SAAW,cACXC,QAAU,cACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,YACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,aACLC,EAAI,YACJC,GAAK,YACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,UACJC,GAAK,UACLnI,EAAI,QACJoI,GAAK,UAETX,uBAAwB,gBACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GAEJ,QACK,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACMhd,OAAAA,GAAqB,IAAXA,EAAe,KAAO,KAGtC,IAAA,IACA,IAAA,IACMA,OAAAA,GAAqB,IAAXA,EAAe,KAAO,SAOvD1F,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,uFAAuFM,MAAM,KACtGP,YAAc,iEAAiEO,MAAM,KACrFwlB,kBAAmB,EACnB5iB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,qBACVC,QAAU,gBACVC,SAAW,cACXC,QAAU,cACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,YACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,aACLC,EAAI,YACJC,GAAK,YACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,UACJC,GAAK,UACLnI,EAAI,QACJoI,GAAK,UAETX,uBAAwB,gBACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GAEJ,QACK,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACMhd,OAAAA,GAAqB,IAAXA,EAAe,KAAO,KAGtC,IAAA,IACA,IAAA,IACMA,OAAAA,GAAqB,IAAXA,EAAe,KAAO,OAGnD0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,uFAAuFM,MAAM,KACtGP,YAAc,iEAAiEO,MAAM,KACrFwlB,kBAAmB,EACnB5iB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,qBACVC,QAAU,gBACVC,SAAW,cACXC,QAAU,cACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,YACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,aACLC,EAAI,YACJC,GAAK,YACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,UACJC,GAAK,UACLnI,EAAI,QACJoI,GAAK,UAETX,uBAAwB,eACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GAIC,IAAA,IACMhd,OAAAA,GAAqB,IAAXA,EAAe,KAAO,IAG3C,QACK,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACMA,OAAAA,GAAqB,IAAXA,EAAe,KAAO,KAGtC,IAAA,IACA,IAAA,IACMA,OAAAA,GAAqB,IAAXA,EAAe,KAAO,OAGnD0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV2mB,IAAAA,GAAsB,6DAA6DloB,MAAM,KACzFmoB,GAAyB,kDAAkDnoB,MAAM,KAErFzP,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,iGAAiGM,MAAM,KAChHP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACb+1B,GAAuBz1B,EAAEyM,SAEzB+oB,GAAoBx1B,EAAEyM,SAJtB+oB,IAOf1C,kBAAmB,EACnB5iB,SAAW,wDAAwD5C,MAAM,KACzE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,gBACTC,QAAS,gBACTC,SAAU,eACVC,QAAS,iBACTC,SAAU,wBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SACTC,KAAO,SACP/I,EAAI,mBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,aACJC,GAAK,aACLnI,EAAI,WACJoI,GAAK,cAETX,uBAAwB,kBACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAAsB,IAAXA,GAA2B,IAAXA,GAAgBA,GAAU,GAAM,MAAQ,OAE9E0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAmBdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAbW,CACX,SAAU,UAAW,QAAS,UAAW,YAAa,YAAa,OAAQ,SAAU,eAAgB,oBAAqB,UAAW,WAarID,YAVgB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAWzG+lB,kBAAkB,EAClB5iB,SAVa,CAAC,eAAgB,WAAY,WAAY,cAAe,YAAa,YAAa,cAW/FD,cATgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAU3DD,YARc,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MASnDnH,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,2BAEVZ,SAAU,CACNC,QAAS,gBACTC,QAAS,kBACTC,SAAU,eACVC,QAAS,gBACTC,SAAU,2BACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,OACRC,KAAM,YACN/I,EAAG,gBACHgJ,GAAI,aACJ7T,EAAG,UACH8T,GAAI,aACJC,EAAG,iBACHC,GAAI,oBACJzD,EAAG,KACH0D,GAAI,QACJC,EAAG,KACHC,GAAI,QACJnI,EAAG,SACHoI,GAAI,aAERX,uBAAwB,mBACxB1L,QAAS,SAAUxE,GAERA,OAAAA,GADiB,IAAXA,EAAe,IAAMA,EAAS,IAAO,EAAI,KAAO,OAGjE0L,KAAM,CACFL,IAAK,EACLC,IAAK,KAuIJ6mB,SAAAA,GAAsBnyB,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,oBAAqB,iBACrB,GAAA,CAAC6D,EAAS,cAAeA,EAAS,WACnC,EAAA,CAAC,aAAc,aACd,GAAA,CAACA,EAAS,YAAaA,EAAS,WACjC,EAAA,CAAC,YAAa,UACb,GAAA,CAACA,EAAS,WAAYA,EAAS,UAChC,EAAA,CAAC,YAAa,UACb,GAAA,CAACA,EAAS,WAAYA,EAAS,QAChC,EAAA,CAAC,eAAgB,aAChB,GAAA,CAACA,EAAS,cAAeA,EAAS,WACnC,EAAA,CAAC,aAAc,YACd,GAAA,CAACA,EAAS,YAAaA,EAAS,YAEnCugB,OAAAA,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GApIxDpH,EAAMqX,aAAa,KAAM,CACrBlI,OAbW,CACX,gBAAiB,aAAc,UAAW,aAAc,aAAc,eAAgB,cAAe,cAAe,eAAgB,aAAc,eAAgB,gBAalKD,YAVgB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAWxG+lB,kBAAmB,EACnB5iB,SAVa,CAAC,cAAe,UAAW,UAAW,YAAa,YAAa,WAAY,eAWzFD,cATkB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAU7DD,YARgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MASrDnH,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,oBACVC,QAAU,sBACVC,SAAW,gBACXC,QAAU,iBACVC,SAAW,6BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,gBACP/I,EAAI,gBACJgJ,GAAK,YACL7T,EAAI,UACJ8T,GAAK,gBACLC,EAAI,OACJC,GAAK,aACLzD,EAAI,QACJ0D,GAAK,WACLC,EAAI,OACJC,GAAK,YACLnI,EAAI,WACJoI,GAAK,eAETX,uBAAyB,mBACzB1L,QAAU,SAAUxE,GAETA,OAAAA,GADiB,IAAXA,EAAe,IAAMA,EAAS,IAAO,EAAI,KAAO,OAGjE0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yFAAyFM,MAAM,KACxGP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAkB,EAClB5iB,SAAW,mDAAmD5C,MAAM,KACpE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,6BACNC,KAAO,oCAEXZ,SAAW,CACPC,QAAU,WACC,MAAA,UAA8B,IAAjB,KAAKlB,QAAiB,KAAO,KAAO,QAE5DmB,QAAU,WACC,MAAA,UAA8B,IAAjB,KAAKnB,QAAiB,KAAO,KAAO,QAE5DoB,SAAW,WACA,MAAA,UAA8B,IAAjB,KAAKpB,QAAiB,KAAO,KAAO,QAE5DqB,QAAU,WACC,MAAA,UAA8B,IAAjB,KAAKrB,QAAiB,IAAM,KAAO,QAE3DsB,SAAW,WACA,MAAA,qBAAyC,IAAjB,KAAKtB,QAAiB,KAAO,KAAO,QAEvEuB,SAAW,KAEfQ,aAAe,CACXC,OAAS,SAAUqd,GACXA,OAAsB,IAAtBA,EAAI5kB,QAAQ,MACL,IAAM4kB,EAEV,MAAQA,GAEnBpd,KAAO,SACP/I,EAAI,eACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,YACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAwBdhR,EAAMqX,aAAa,WAAY,CAC3BlI,OAAS,4EAA4EM,MAAM,KAC3FP,YAAc,4DAA4DO,MAAM,KAChFwlB,kBAAmB,EACnB5iB,SAAW,qDAAsD5C,MAAM,KACvE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,iBACLD,IAAM,oBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,6BACNC,KAAO,6CACPyf,KAAM,mCAEVrgB,SAAW,CACPC,QAAS,WACTC,QAAS,cACTC,SAAU,uBACVC,QAAS,WACTC,SAAU,qBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,KACTC,KAAO,UACP/I,EAAI6qB,GACJ7hB,GAAK6hB,GACL11B,EAAI01B,GACJ5hB,GAAK4hB,GACL3hB,EAAI2hB,GACJ1hB,GAAK0hB,GACLnlB,EAAImlB,GACJzhB,GAAKyhB,GACLxhB,EAAIwhB,GACJvhB,GAAKuhB,GACL1pB,EAAI0pB,GACJthB,GAAKshB,IAETjiB,uBAAyB,cACzB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GAEC,IAAA,IACMhd,OAAAA,EAAS,KACpB,QACK,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,IAAA,IACMA,OAAAA,IAGnB0L,KAAO,CACHL,IAAM,EACNC,IAAM,GAEVwF,cAAe,8BACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,SAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,YAAbva,EACAua,EACa,aAAbva,EACAua,EAAO,GAAKA,EAAOA,EAAO,GACb,UAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,UACAA,EAAO,GACP,WACAA,EAAO,GACP,QAEA,UAOfua,IAAAA,GAAc,CACL,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGb/3B,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,yFAAyFM,MAAM,KACvGP,YAAa,yEAAyEO,MAAM,KAC5FwlB,kBAAkB,EAClB5iB,SAAU,wDAAwD5C,MAAM,KACxE2C,cAAe,mCAAmC3C,MAAM,KACxD0C,YAAa,qBAAqB1C,MAAM,KACxCzE,eAAgB,CACZuK,GAAI,gBACJD,IAAK,mBACLE,EAAG,aACHC,GAAI,cACJC,IAAK,6BACLC,KAAM,oCAEVZ,SAAU,CACNC,QAAS,UACTC,QAAS,YACTC,SAAU,WACVC,QAAS,cACTC,SAAU,mBACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,QACRC,KAAM,WACN/I,EAAG,WACHgJ,GAAI,WACJ7T,EAAG,WACH8T,GAAI,WACJC,EAAG,UACHC,GAAI,UACJzD,EAAG,UACH0D,GAAI,UACJC,EAAG,WACHC,GAAI,WACJnI,EAAG,UACHoI,GAAI,WAERoH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtCqtB,OAAAA,GAAYrtB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BotB,OAAAA,GAAYptB,MAK3B8L,cAAe,qBACfiH,aAAc,SAAUF,EAAMva,GAItBA,OAHS,KAATua,IACAA,EAAO,GAEM,QAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,SAAbva,EACAua,EACa,SAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,SAAbva,EACAua,EAAO,QADX,GAIXva,SAAU,SAAUua,EAAMe,EAAQ+P,GAC1B9Q,OAAAA,EAAO,EACA,MACAA,EAAO,GACP,OACAA,EAAO,GACP,OACAA,EAAO,GACP,OAEA,OAGfnM,KAAM,CACFL,IAAK,EACLC,IAAK,KAMbhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,0EAA0EM,MAAM,KACzFP,YAAc,4DAA4DO,MAAM,KAChF4C,SAAW,uCAAuC5C,MAAM,KACxD2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,iBACLC,IAAM,uBACNC,KAAO,6BACPiF,EAAI,WACJsa,GAAK,aACLC,IAAM,mBACNC,KAAO,yBAEXrgB,SAAW,CACPC,QAAU,cACVC,QAAU,aACVC,SAAW,iBACXC,QAAU,eACVC,SAAW,+BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,UACP/I,EAAI,aACJgJ,GAAK,WACL7T,EAAI,MACJ8T,GAAK,UACLC,EAAI,MACJC,GAAK,SAAUzQ,GACPA,OAAW,IAAXA,EACO,SAEJA,EAAS,SAEpBgN,EAAI,MACJ0D,GAAK,SAAU1Q,GACPA,OAAW,IAAXA,EACO,SAEJA,EAAS,SAEpB2Q,EAAI,OACJC,GAAK,SAAU5Q,GACPA,OAAW,IAAXA,EACO,UAEJA,EAAS,WAEpByI,EAAI,MACJoI,GAAK,SAAU7Q,GACPA,OAAW,IAAXA,EACO,SACAA,EAAS,IAAO,GAAgB,KAAXA,EACrBA,EAAS,OAEbA,EAAS,UAGxB8Q,cAAe,gEACfjC,KAAO,SAAUnU,GACN,MAAA,8BAA8B8K,KAAK9K,IAE9C4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,aACAA,EAAO,GACP,QACAA,EAAO,GACP8Q,EAAU,SAAW,eACrB9Q,EAAO,GACP8Q,EAAU,QAAU,eAEpB,UAOf2J,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KA0FAC,SAAAA,GAAYxyB,EAAQugB,EAAe7e,GACpCmV,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,KAQMmV,OANHA,GADW,IAAX7W,EACU,UACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,UAEA,UAGb,IAAA,IACMugB,OAAAA,EAAgB,eAAiB,eACvC,IAAA,KAQM1J,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,SAEA,SAGb,IAAA,IACMugB,OAAAA,EAAgB,YAAc,cACpC,IAAA,KAQM1J,OANHA,GADW,IAAX7W,EACU,MACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,OAEA,OAGb,IAAA,KAMM6W,OAJHA,GADW,IAAX7W,EACU,MAEA,OAGb,IAAA,KAQM6W,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,UAEA,UAGb,IAAA,KAQM6W,OANHA,GADW,IAAX7W,EACU,SACQ,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAC7B,SAEA,UA/I1B1F,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,8EAA8EM,MAAM,KAC7FP,YAAc,6DAA6DO,MAAM,KACjFwlB,kBAAkB,EAClB5iB,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,kCAAkC3C,MAAM,KACxD0C,YAAc,qBAAqB1C,MAAM,KACzCzE,eAAiB,CACbuK,GAAK,aACLD,IAAM,gBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAU,UACVC,QAAU,UACVC,SAAW,WACXC,QAAU,UACVC,SAAW,mBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,UACP/I,EAAI,cACJgJ,GAAK,WACL7T,EAAI,UACJ8T,GAAK,UACLC,EAAI,UACJC,GAAK,UACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,WACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,WAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtCutB,OAAAA,GAAYvtB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BstB,OAAAA,GAAYttB,MAK3B8L,cAAe,qBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,QAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,SAAbva,EACAua,EACa,UAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,QAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,MACAA,EAAO,GACP,OACAA,EAAO,GACP,QACAA,EAAO,GACP,MAEA,OAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAoEdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACLtN,OAAQ,oGAAoG4N,MAAM,KAClHwkB,WAAY,gGAAgGxkB,MAAM,MAEtHP,YAAc,+DAA+DO,MAAM,KACnFwlB,kBAAkB,EAClB5iB,SAAW,4DAA4D5C,MAAM,KAC7E2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAW,eACXC,QAAW,eACXC,SAAW,WACC,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,wBACN,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,oBAGnB6B,QAAW,eACXC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,2BACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,yBAGnB+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAS,WACT/I,EAAS,cACTgJ,GAASkiB,GACT/1B,EAAS+1B,GACTjiB,GAASiiB,GACThiB,EAASgiB,GACT/hB,GAAS+hB,GACTxlB,EAAS,MACT0D,GAAS8hB,GACT7hB,EAAS,SACTC,GAAS4hB,GACT/pB,EAAS,SACToI,GAAS2hB,IAEbtiB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVmnB,IAAAA,GAAc,gEAAgE1oB,MAAM,KAC/E2oB,SAAAA,GAAY1yB,EAAQugB,EAAe7e,EAAKykB,GACzCkI,IAAAA,EAAMruB,EACF0B,OAAAA,GACC,IAAA,IACOykB,OAAAA,GAAY5F,EAAiB,mBAAqB,oBACzD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,GAAiB,aAAe,cACzD,IAAA,IACM,MAAA,OAAS4F,GAAY5F,EAAgB,QAAU,UACrD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,EAAgB,QAAU,UACnD,IAAA,IACM,MAAA,OAAS4F,GAAY5F,EAAgB,OAAS,UACpD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,EAAgB,OAAS,UAClD,IAAA,IACM,MAAA,OAAS4F,GAAY5F,EAAgB,OAAS,UACpD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,EAAgB,OAAS,UAClD,IAAA,IACM,MAAA,OAAS4F,GAAY5F,EAAgB,SAAW,YACtD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,EAAgB,SAAW,YACpD,IAAA,IACM,MAAA,OAAS4F,GAAY5F,EAAgB,MAAQ,QACnD,IAAA,KACM8N,OAAAA,GAAOlI,GAAY5F,EAAgB,MAAQ,QAEnD,MAAA,GAEF7U,SAAAA,GAAKya,GACH,OAACA,EAAW,GAAK,WAAa,IAAMsM,GAAY,KAAK7kB,OAAS,aA2NhE+kB,SAAAA,GAASpmB,GACVA,OAAAA,EAAI,KAAQ,IAELA,EAAI,IAAO,EAKjBqmB,SAAAA,GAAY5yB,EAAQugB,EAAe7e,EAAKykB,GACzCtP,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,IACM6e,OAAAA,GAAiB4F,EAAW,mBAAqB,mBACvD,IAAA,KACGwM,OAAAA,GAAS3yB,GACF6W,GAAU0J,GAAiB4F,EAAW,WAAa,YAEvDtP,EAAS,UACf,IAAA,IACM0J,OAAAA,EAAgB,SAAW,SACjC,IAAA,KACGoS,OAAAA,GAAS3yB,GACF6W,GAAU0J,GAAiB4F,EAAW,UAAY,WAClD5F,EACA1J,EAAS,SAEbA,EAAS,SACf,IAAA,KACG8b,OAAAA,GAAS3yB,GACF6W,GAAU0J,GAAiB4F,EAAW,gBAAkB,iBAE5DtP,EAAS,cACf,IAAA,IACG0J,OAAAA,EACO,QAEJ4F,EAAW,MAAQ,OACzB,IAAA,KACGwM,OAAAA,GAAS3yB,GACLugB,EACO1J,EAAS,QAEbA,GAAUsP,EAAW,OAAS,SAC9B5F,EACA1J,EAAS,QAEbA,GAAUsP,EAAW,MAAQ,QACnC,IAAA,IACG5F,OAAAA,EACO,UAEJ4F,EAAW,QAAU,SAC3B,IAAA,KACGwM,OAAAA,GAAS3yB,GACLugB,EACO1J,EAAS,UAEbA,GAAUsP,EAAW,SAAW,WAChC5F,EACA1J,EAAS,UAEbA,GAAUsP,EAAW,QAAU,UACrC,IAAA,IACM5F,OAAAA,GAAiB4F,EAAW,KAAO,MACzC,IAAA,KACGwM,OAAAA,GAAS3yB,GACF6W,GAAU0J,GAAiB4F,EAAW,KAAO,QAEjDtP,GAAU0J,GAAiB4F,EAAW,KAAO,QA5RhE7rB,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oGAAoGM,MAAM,KACnHP,YAAc,qDAAqDO,MAAM,KACzE4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,gCAAgC3C,MAAM,KACtD0C,YAAc,qBAAqB1C,MAAM,KACzCzE,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,cACJC,GAAK,gBACLC,IAAM,qBACNC,KAAO,4BAEXa,cAAe,SACfjC,KAAM,SAAUnU,GACLA,MAAkC,MAAlCA,EAAM+tB,OAAO,GAAG1lB,eAE3BzF,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,IACW,IAAZua,EAAmB,KAAO,MAEd,IAAZA,EAAmB,KAAO,MAGzCtZ,SAAW,CACPC,QAAU,gBACVC,QAAU,oBACVC,SAAW,WACA9D,OAAAA,GAAK3Q,KAAK,MAAM,IAE3B0U,QAAU,oBACVC,SAAW,WACAhE,OAAAA,GAAK3Q,KAAK,MAAM,IAE3B4U,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,KACP/I,EAAIorB,GACJpiB,GAAKoiB,GACLj2B,EAAIi2B,GACJniB,GAAKmiB,GACLliB,EAAIkiB,GACJjiB,GAAKiiB,GACL1lB,EAAI0lB,GACJhiB,GAAKgiB,GACL/hB,EAAI+hB,GACJ9hB,GAAK8hB,GACLjqB,EAAIiqB,GACJ7hB,GAAK6hB,IAETxiB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,CACLtN,OAAQ,4GAA4G4N,MAAM,KAC1HwkB,WAAY,gGAAgGxkB,MAAM,MAEtHP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,gEAAgE5C,MAAM,KACjF2C,cAAgB,+BAA+B3C,MAAM,KACrD0C,YAAc,+BAA+B1C,MAAM,KACnDzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,iBACLC,IAAM,wBACNC,KAAO,+BAEXZ,SAAW,CACPC,QAAS,aACTC,QAAS,YACTE,QAAS,YACTD,SAAU,WACC,MAAA,sBAEXE,SAAU,WACC,MAAA,8BAEXC,SAAU,KAEdQ,aAAe,CACXC,OAAS,UACTC,KAAO,UACP/I,EAAI,mBACJgJ,GAAK,cACL7T,EAAI,OACJ8T,GAAK,UACLC,EAAI,MACJC,GAAK,SACLzD,EAAI,KACJ0D,GAAK,QACLC,EAAI,OACJC,GAAK,UACLnI,EAAI,OACJoI,GAAK,WAETC,cAAe,oCACfjC,KAAM,SAAUnU,GACL,MAAA,uBAAuB8K,KAAK9K,IAEvC4C,SAAW,SAAUua,GACbA,OAAAA,EAAO,EACA,UACAA,EAAO,GACP,WACAA,EAAO,GACP,UAEA,YAGf3H,uBAAwB,0BACxB1L,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,MACA,IAAA,IACA,IAAA,IACA,IAAA,OACGhd,OAAW,IAAXA,EACOA,EAAS,MAEbA,EAAS,MACpB,QACWA,OAAAA,IAGnB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yFAAyFM,MAAM,KACxGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,6CAA6C5C,MAAM,KAC9D2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXa,cAAe,wBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,SAAbva,EACOua,EACa,UAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,SAAbva,GAAoC,UAAbA,EACvBua,EAAO,QADX,GAIXva,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACD,OACAA,EAAQ,GACR,QACAA,EAAQ,GACR,OAEA,SAGfiB,SAAW,CACPC,QAAU,sBACVC,QAAU,mBACVC,SAAW,kBACXC,QAAU,qBACVC,SAAW,uBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,eACP/I,EAAI,iBACJgJ,GAAK,WACL7T,EAAI,UACJ8T,GAAK,WACLC,EAAI,QACJC,GAAK,SACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KA8EdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oFAAoFM,MAAM,KACnGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,mFAAmF5C,MAAM,KACpG2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,oBACVC,SAAW,gBACXC,QAAU,iBACVC,SAAW,0BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,iBACP/I,EAAIsrB,GACJtiB,GAAKsiB,GACLn2B,EAAIm2B,GACJriB,GAAKqiB,GACLpiB,EAAI,cACJC,GAAKmiB,GACL5lB,EAAI4lB,GACJliB,GAAKkiB,GACLjiB,EAAIiiB,GACJhiB,GAAKgiB,GACLnqB,EAAImqB,GACJ/hB,GAAK+hB,IAET1iB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,gGAAgGM,MAAM,KAC/GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,iBACTC,QAAS,mBACTC,SAAU,iBACVC,QAAS,iBACTC,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,6BACX,QACW,MAAA,+BAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,SAAU9I,GACR,OAAE,YAAa9B,KAAK8B,GAAK,MAAQ,MAAQ,IAAMA,GAE1D+I,KAAO,QACP/I,EAAI,iBACJgJ,GAAK,aACL7T,EAAI,YACJ8T,GAAK,YACLC,EAAI,SACJC,GAAK,SACLzD,EAAI,YACJ0D,GAAK,YACLC,EAAI,UACJC,GAAK,UACLnI,EAAI,UACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAS,MACTkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,gGAAgGM,MAAM,KAC/GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,iBACTC,QAAS,mBACTC,SAAU,iBACVC,QAAS,iBACTC,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,6BACX,QACW,MAAA,+BAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,SAAU9I,GACR,OAAE,YAAa9B,KAAK8B,GAAK,MAAQ,MAAQ,IAAMA,GAE1D+I,KAAO,QACP/I,EAAI,iBACJgJ,GAAK,aACL7T,EAAI,YACJ8T,GAAK,YACLC,EAAI,SACJC,GAAK,SACLzD,EAAI,YACJ0D,GAAK,YACLC,EAAI,UACJC,GAAK,UACLnI,EAAI,UACJoI,GAAK,WAETX,uBAAyB,WACzB1L,QAAS,MACTkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wCAAwCM,MAAM,KACvDP,YAAc,yCAAyCO,MAAM,KAC7D4C,SAAW,8BAA8B5C,MAAM,KAC/C2C,cAAgB,gBAAgB3C,MAAM,KACtC0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,YACLC,IAAM,kBACNC,KAAO,uBACPiF,EAAI,aACJsa,GAAK,YACLC,IAAM,kBACNC,KAAO,wBAEX5e,cAAe,SACfjC,KAAO,SAAUnU,GACNA,MAAU,OAAVA,GAEX4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,KAEA,MAGfxI,SAAW,CACPC,QAAU,UACVC,QAAU,UACVC,SAAW,SAAUwD,GACbA,OAAAA,EAAItH,OAAS,KAAKA,OACX,cAEA,WAGf+D,QAAU,UACVC,SAAW,SAAUsD,GACb,OAAA,KAAKtH,OAASsH,EAAItH,OACX,cAEA,WAGfiE,SAAW,KAEfO,uBAAyB,WACzB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,IACpB,QACWA,OAAAA,IAGnBmQ,aAAe,CACXC,OAAS,MACTC,KAAO,MACP/I,EAAI,KACJgJ,GAAK,MACL7T,EAAI,KACJ8T,GAAK,MACLC,EAAI,MACJC,GAAK,OACLzD,EAAI,KACJ0D,GAAK,MACLC,EAAI,MACJC,GAAK,OACLnI,EAAI,KACJoI,GAAK,SAMbvW,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yFAAyFM,MAAM,KACxGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,+CAA+C5C,MAAM,KAChE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXa,cAAe,6BACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,WAAbva,EACOua,EACa,WAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,WAAbva,GAAsC,UAAbA,EACzBua,EAAO,QADX,GAIXva,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACD,SACAA,EAAQ,GACR,SACAA,EAAQ,GACR,SAEA,SAGfiB,SAAW,CACPC,QAAU,2BACVC,QAAU,sBACVC,SAAW,kBACXC,QAAU,wBACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,gBACTC,KAAO,uBACP/I,EAAI,kBACJgJ,GAAK,WACL7T,EAAI,kBACJ8T,GAAK,WACLC,EAAI,gBACJC,GAAK,SACLzD,EAAI,WACJ0D,GAAK,YACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACL8kB,WAAY,qGAAqGxkB,MAAM,KACvH5N,OAAQ,sGAAsG4N,MAAM,MAExHP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,CACP4hB,WAAY,gEAAgExkB,MAAM,KAClF5N,OAAQ,iEAAiE4N,MAAM,KAC/Eyc,SAAU,iBAEd9Z,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,iBACVE,QAAU,kBACVD,SAAW,wBACXE,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SAAU9I,GACP,MAAA,yBAA0B9B,KAAK8B,GACnCA,EAAErC,QAAQ,KAAM,MAChBqC,EAAI,MAEZ+I,KAAO,SAAU/I,GACR,MAAA,4BAA6B9B,KAAK8B,GAC5BA,EAAErC,QAAQ,SAAU,UAE1B,OAAQO,KAAK8B,GACPA,EAAErC,QAAQ,QAAS,iBADzB,GAITqC,EAAI,iBACJgJ,GAAK,UACL7T,EAAI,OACJ8T,GAAK,UACLC,EAAI,QACJC,GAAK,WACLzD,EAAI,MACJ0D,GAAK,SACLC,EAAI,MACJC,GAAK,SACLnI,EAAI,OACJoI,GAAK,WAETX,uBAAwB,8BACxB1L,QAAU,SAAUxE,GACZA,OAAW,IAAXA,EACOA,EAEI,IAAXA,EACOA,EAAS,MAEfA,EAAS,IAAQA,GAAU,KAAQA,EAAS,IAAO,GAAQA,EAAS,KAAQ,EACtE,MAAQA,EAEZA,EAAS,MAEpB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVunB,IAAAA,GAAa,CACV,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACC,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,OAGTv4B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,0DAA0D5C,MAAM,KAC3E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,mBACVC,QAAU,mBACVC,SAAW,kBACXC,QAAU,kBACVC,SAAW,kCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,WACP/I,EAAI,iBACJgJ,GAAK,YACL7T,EAAI,YACJ8T,GAAK,WACLC,EAAI,YACJC,GAAK,WACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,UACJoI,GAAK,UAETX,uBAAwB,kBACxB1L,QAAU,SAAUxE,GAGTA,OAAAA,GAAU6yB,GAAW7yB,IAAW6yB,GAF/B7yB,EAAS,KAEuC6yB,GADhD7yB,GAAU,IAAM,IAAM,QAGlC0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVwnB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTz4B,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,yEAAyEM,MAC7E,KAEJP,YAAa,yEAAyEO,MAClF,KAEJ4C,SAAU,iDAAiD5C,MAAM,KACjE2C,cAAe,oBAAoB3C,MAAM,KACzC0C,YAAa,oBAAoB1C,MAAM,KACvCojB,oBAAoB,EACpB7nB,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,2BAEVa,cAAe,cACfjC,KAAM,SAAUnU,GACLA,MAAU,UAAVA,GAEX4C,SAAU,SAAUua,EAAMe,EAAQ+P,GAC1B9Q,OAAAA,EAAO,GACA,QAEA,SAGfxI,SAAU,CACNC,QAAS,oBACTC,QAAS,kBACTC,SAAU,iBACVC,QAAS,qBACTC,SAAU,8BACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,QACRC,KAAM,QACN/I,EAAG,iBACHgJ,GAAI,YACJ7T,EAAG,UACH8T,GAAI,UACJC,EAAG,UACHC,GAAI,UACJzD,EAAG,UACH0D,GAAI,UACJC,EAAG,QACHC,GAAI,QACJnI,EAAG,WACHoI,GAAI,YAERX,uBAAyB,YACzB1L,QAAU,OACVyT,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC+tB,OAAAA,GAAY/tB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B8tB,OAAAA,GAAY9tB,MAG3B0G,KAAM,CACFL,IAAK,EACLC,IAAK,KAMT0nB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGT34B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,6FAA6FM,MAAM,KAC5GP,YAAc,2EAA2EO,MAAM,KAC/FwlB,kBAAkB,EAClB5iB,SAAW,0DAA0D5C,MAAM,KAC3E2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,wBAAwB1C,MAAM,KAC5CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,sBACNC,KAAO,6BAEXZ,SAAW,CACPC,QAAU,YACVC,QAAU,YACVC,SAAW,WACXC,QAAU,cACVC,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,WACP/I,EAAI,gBACJgJ,GAAK,gBACL7T,EAAI,aACJ8T,GAAK,WACLC,EAAI,YACJC,GAAK,UACLzD,EAAI,WACJ0D,GAAK,SACLC,EAAI,cACJC,GAAK,YACLnI,EAAI,YACJoI,GAAK,WAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtCiuB,OAAAA,GAAYjuB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BguB,OAAAA,GAAYhuB,MAG3B8L,cAAe,gCACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,WAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,aAAbva,EACAua,EACa,aAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,SAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,GACP,WACAA,EAAO,GACP,WACAA,EAAO,GACP,OAEA,UAGf3H,uBAAwB,eACxB1L,QAAU,SAAUxE,GACTA,OAAAA,EAAS,OAEpB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yCAAyCM,MAAM,KACxDP,YAAc,yCAAyCO,MAAM,KAC7D4C,SAAW,8BAA8B5C,MAAM,KAC/C2C,cAAgB,gBAAgB3C,MAAM,KACtC0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,cACJC,GAAK,gBACLC,IAAM,uBACNC,KAAO,4BACPiF,EAAI,cACJsa,GAAK,gBACLC,IAAM,uBACNC,KAAO,6BAEXrgB,SAAW,CACPC,QAAU,QACVC,QAAU,QACVC,SAAW,UACXC,QAAU,QACVC,SAAW,cACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,OACTC,KAAO,OACP/I,EAAI,MACJgJ,GAAK,MACL7T,EAAI,KACJ8T,GAAK,MACLC,EAAI,OACJC,GAAK,OACLzD,EAAI,KACJ0D,GAAK,MACLC,EAAI,MACJC,GAAK,MACLnI,EAAI,MACJoI,GAAK,OAETX,uBAAyB,iBACzB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,IACf,IAAA,IACMA,OAAAA,EAAS,IACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,IACpB,QACWA,OAAAA,IAGnB8Q,cAAgB,QAChBjC,KAAO,SAAUvK,GACNA,MAAU,OAAVA,GAEXhH,SAAW,SAAUua,EAAMe,EAAQsa,GACxBrb,OAAAA,EAAO,GAAK,KAAO,QAM9Bsb,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAETC,GAAW,CACP,eACA,QACA,QACA,QACA,QACA,WACA,SACA,MACA,UACA,eACA,eACA,gBAIJ/4B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS4pB,GACT7pB,YAAc6pB,GACd1mB,SAAW,0EAA0E5C,MAAM,KAC3F2C,cAAgB,2DAA2D3C,MAAM,KACjF0C,YAAc,gBAAgB1C,MAAM,KACpCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXa,cAAe,kBACfjC,KAAM,SAAUnU,GACL,MAAA,UAAU8K,KAAK9K,IAE1B4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,UAEA,WAGfxI,SAAW,CACPC,QAAU,sBACVC,QAAU,uBACVC,SAAW,oBACXC,QAAU,qBACVC,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,KACP/I,EAAI,kBACJgJ,GAAK,WACL7T,EAAI,cACJ8T,GAAK,YACLC,EAAI,eACJC,GAAK,aACLzD,EAAI,WACJ0D,GAAK,SACLC,EAAI,YACJC,GAAK,UACLnI,EAAI,WACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtCouB,OAAAA,GAAYpuB,KACpBC,QAAQ,KAAM,MAErBqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BmuB,OAAAA,GAAYnuB,KACpBC,QAAQ,KAAM,MAErByG,KAAO,CACHL,IAAM,EACNC,IAAM,MAMVgoB,IAAAA,GAAa,CACV,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACC,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,OAuDAC,SAAAA,GAAsBvzB,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,aAAc,gBACf,EAAA,CAAC,YAAa,eACd,EAAA,CAAC,UAAW,aACZ,EAAA,CAAC,WAAY,eACb,EAAA,CAAC,UAAW,eAEdokB,OAAAA,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAuB/C8xB,SAAAA,GAA4BxzB,GAE7BlC,GADJkC,EAAS2I,SAAS3I,EAAQ,IACtBlC,MAAMkC,GACC,OAAA,EAEPA,GAAAA,EAAS,EAEF,OAAA,EACJ,GAAIA,EAAS,GAEZ,OAAA,GAAKA,GAAUA,GAAU,EAI1B,GAAIA,EAAS,IAAK,CAEjBwuB,IAAAA,EAAYxuB,EAAS,GACrBwuB,OACOgF,GADO,IAAdhF,EADsCxuB,EAAS,GAIhBwuB,GAChC,GAAIxuB,EAAS,IAAO,CAEhBA,KAAAA,GAAU,IACbA,GAAkB,GAEfwzB,OAAAA,GAA4BxzB,GAI5BwzB,OAAAA,GADPxzB,GAAkB,KAhH1B1F,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,kFAAkFM,MAAM,KACjGP,YAAc,qDAAqDO,MAAM,KACzE4C,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,kBACVC,QAAU,kBACVC,SAAW,iBACXC,QAAU,kBACVC,SAAW,wCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,WACP/I,EAAI,iBACJgJ,GAAK,YACL7T,EAAI,YACJ8T,GAAK,WACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,UACJoI,GAAK,UAETX,uBAAwB,wBACxB1L,QAAU,SAAUxE,GAGTA,OAAAA,GAAUszB,GAAWtzB,IAAWszB,GAF/BtzB,EAAS,KAEuCszB,GADhDtzB,GAAU,IAAM,IAAM,QAGlC0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAuEdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,uFAAuFM,MAAM,KACrGP,YAAa,+DAA+DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAU,mEAAmE5C,MAAM,KACnF2C,cAAe,8BAA8B3C,MAAM,KACnD0C,YAAa,uBAAuB1C,MAAM,KAC1CojB,oBAAqB,EACrB7nB,eAAgB,CACZuK,GAAI,cACJD,IAAK,iBACLE,EAAG,aACHC,GAAI,eACJC,IAAK,2BACLC,KAAM,kCAEVZ,SAAU,CACNC,QAAS,eACTK,SAAU,IACVJ,QAAS,eACTC,SAAU,eACVC,QAAS,mBACTC,SAAU,WAEE,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACM,MAAA,0BACX,QACW,MAAA,4BAIvBuC,aAAe,CACXC,OAzFCqjB,SAAkBle,GAEnBie,OAAAA,GADSje,EAAOvR,OAAO,EAAGuR,EAAO1M,QAAQ,OAElC,KAAO0M,EAEX,MAAQA,GAqFXlF,KAnFCqjB,SAAgBne,GAEjBie,OAAAA,GADSje,EAAOvR,OAAO,EAAGuR,EAAO1M,QAAQ,OAElC,QAAU0M,EAEd,SAAWA,GA+EdjO,EAAI,kBACJgJ,GAAK,cACL7T,EAAI82B,GACJhjB,GAAK,cACLC,EAAI+iB,GACJ9iB,GAAK,aACLzD,EAAIumB,GACJ7iB,GAAK,UACLC,EAAI4iB,GACJ3iB,GAAK,WACLnI,EAAI8qB,GACJ1iB,GAAK,WAETX,uBAAwB,YACxB1L,QAAS,MACTkH,KAAM,CACFL,IAAK,EACLC,IAAK,KAMbhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,6EAA6EM,MAAM,KAC5FP,YAAc,6EAA6EO,MAAM,KACjG4C,SAAW,sCAAsC5C,MAAM,KACvD2C,cAAgB,oCAAoC3C,MAAM,KAC1D0C,YAAc,mBAAmB1C,MAAM,KACvCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,6BAEXa,cAAe,kBACfjC,KAAM,SAAUnU,GACLA,MAAU,WAAVA,GAEX4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,WAEA,UAGfxI,SAAW,CACPC,QAAU,kBACVC,QAAU,mBACVC,SAAW,wBACXC,QAAU,qBACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EAAI,mBACJgJ,GAAK,YACL7T,EAAI,SACJ8T,GAAK,UACLC,EAAI,YACJC,GAAK,aACLzD,EAAI,QACJ0D,GAAK,SACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,OACJoI,GAAK,SAETX,uBAAwB,eACxB1L,QAAU,SAAUxE,GACT,MAAA,MAAQA,KAMnBiD,IAAAA,GAAQ,CACD,GAAA,6BACD,EAAA,wBACA,GAAA,0BACA,EAAA,2BACA,GAAA,4BACA,EAAA,qBACA,GAAA,sBACA,EAAA,uBACA,GAAA,4BACA,EAAA,mBACA,GAAA,oBASD0wB,SAAAA,GAAkB3zB,EAAQugB,EAAe7e,EAAKykB,GAC5C5F,OAAAA,EAAgB+N,GAAM5sB,GAAK,GAAMykB,EAAWmI,GAAM5sB,GAAK,GAAK4sB,GAAM5sB,GAAK,GAEzEkyB,SAAAA,GAAQ5zB,GACNA,OAAAA,EAAS,IAAO,GAAMA,EAAS,IAAMA,EAAS,GAEhDsuB,SAAAA,GAAM5sB,GACJuB,OAAAA,GAAMvB,GAAKqI,MAAM,KAEnB8pB,SAAAA,GAAY7zB,EAAQugB,EAAe7e,EAAKykB,GACzCtP,IAAAA,EAAS7W,EAAS,IAClBA,OAAW,IAAXA,EACO6W,EAAS8c,GAAkB3zB,EAAQugB,EAAe7e,EAAI,GAAIykB,GAC1D5F,EACA1J,GAAU+c,GAAQ5zB,GAAUsuB,GAAM5sB,GAAK,GAAK4sB,GAAM5sB,GAAK,IAE1DykB,EACOtP,EAASyX,GAAM5sB,GAAK,GAEpBmV,GAAU+c,GAAQ5zB,GAAUsuB,GAAM5sB,GAAK,GAAK4sB,GAAM5sB,GAAK,IAI1EpH,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACLtN,OAAQ,oGAAoG4N,MAAM,KAClHwkB,WAAY,kGAAkGxkB,MAAM,KACpHyc,SAAU,+DAEdhd,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,CACPxQ,OAAQ,oFAAoF4N,MAAM,KAClGwkB,WAAY,2FAA2FxkB,MAAM,KAC7Gyc,SAAU,cAEd9Z,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,iBAAiB1C,MAAM,KACrCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,sCACNC,KAAO,4CACPiF,EAAI,aACJsa,GAAK,wBACLC,IAAM,sCACNC,KAAO,4CAEXrgB,SAAW,CACPC,QAAU,gBACVC,QAAU,aACVC,SAAW,UACXC,QAAU,aACVC,SAAW,qBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,WACP/I,EApECwsB,SAAiB9zB,EAAQugB,EAAe7e,EAAKykB,GAC9C5F,OAAAA,EACO,kBAEA4F,EAAW,kBAAoB,mBAiEtC7V,GAAKujB,GACLp3B,EAAIk3B,GACJpjB,GAAKsjB,GACLrjB,EAAImjB,GACJljB,GAAKojB,GACL7mB,EAAI2mB,GACJjjB,GAAKmjB,GACLljB,EAAIgjB,GACJ/iB,GAAKijB,GACLprB,EAAIkrB,GACJ9iB,GAAKgjB,IAET3jB,uBAAwB,cACxB1L,QAAU,SAAUxE,GACTA,OAAAA,EAAS,QAEpB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVyoB,IAAAA,GAAU,CACJ,GAAA,qCAAqChqB,MAAM,KAC5C,EAAA,iCAAiCA,MAAM,KACtC,GAAA,iCAAiCA,MAAM,KACxC,EAAA,iCAAiCA,MAAM,KACtC,GAAA,iCAAiCA,MAAM,KACxC,EAAA,6BAA6BA,MAAM,KAClC,GAAA,6BAA6BA,MAAM,KACpC,EAAA,iCAAiCA,MAAM,KACtC,GAAA,iCAAiCA,MAAM,KACxC,EAAA,wBAAwBA,MAAM,KAC7B,GAAA,wBAAwBA,MAAM,MAK/BiqB,SAAAA,GAAS1F,EAAOtuB,EAAQugB,GACzBA,OAAAA,EAEOvgB,EAAS,IAAO,GAAKA,EAAS,KAAQ,GAAKsuB,EAAM,GAAKA,EAAM,GAI5DtuB,EAAS,IAAO,GAAKA,EAAS,KAAQ,GAAKsuB,EAAM,GAAKA,EAAM,GAGlE2F,SAAAA,GAAyBj0B,EAAQugB,EAAe7e,GAC9C1B,OAAAA,EAAS,IAAMg0B,GAASD,GAAQryB,GAAM1B,EAAQugB,GAEhD2T,SAAAA,GAAyBl0B,EAAQugB,EAAe7e,GAC9CsyB,OAAAA,GAASD,GAAQryB,GAAM1B,EAAQugB,GAM1CjmB,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,uGAAuGM,MAAM,KACtHP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,0EAA0E5C,MAAM,KAC3F2C,cAAgB,kBAAkB3C,MAAM,KACxC0C,YAAc,kBAAkB1C,MAAM,KACtCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,cACJC,GAAK,uBACLC,IAAM,8BACNC,KAAO,qCAEXZ,SAAW,CACPC,QAAU,uBACVC,QAAU,oBACVC,SAAW,qBACXC,QAAU,sBACVC,SAAW,gCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EA9BC6sB,SAAgBn0B,EAAQugB,GACtBA,OAAAA,EAAgB,iBAAmB,kBA8BtCjQ,GAAK2jB,GACLx3B,EAAIy3B,GACJ3jB,GAAK0jB,GACLzjB,EAAI0jB,GACJzjB,GAAKwjB,GACLjnB,EAAIknB,GACJxjB,GAAKujB,GACLtjB,EAAIujB,GACJtjB,GAAKqjB,GACLxrB,EAAIyrB,GACJrjB,GAAKojB,IAET/jB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV8oB,IAAAA,GAAa,CACbC,MAAO,CACH/jB,GAAI,CAAC,SAAU,UAAW,WAC1B7T,EAAG,CAAC,cAAe,iBACnB8T,GAAI,CAAC,QAAS,SAAU,UACxBC,EAAG,CAAC,YAAa,eACjBC,GAAI,CAAC,MAAO,OAAQ,QACpBC,GAAI,CAAC,MAAO,OAAQ,QACpBE,GAAI,CAAC,SAAU,UAAW,WAC1BC,GAAI,CAAC,SAAU,SAAU,WAE7ByjB,uBAAwB,SAAUt0B,EAAQu0B,GAC/Bv0B,OAAW,IAAXA,EAAeu0B,EAAQ,GAAMv0B,GAAU,GAAKA,GAAU,EAAIu0B,EAAQ,GAAKA,EAAQ,IAE1FnF,UAAW,SAAUpvB,EAAQugB,EAAe7e,GACpC6yB,IAAAA,EAAUH,GAAWC,MAAM3yB,GAC3BA,OAAe,IAAfA,EAAIhG,OACG6kB,EAAgBgU,EAAQ,GAAKA,EAAQ,GAErCv0B,EAAS,IAAMo0B,GAAWE,uBAAuBt0B,EAAQu0B,KAwRnEC,SAAAA,GAAYx0B,EAAQugB,EAAe7e,EAAKykB,GACrCzkB,OAAAA,GACC,IAAA,IACM6e,OAAAA,EAAgB,gBAAkB,kBACxC,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,UAAY,aAC5C,IAAA,IACA,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,SAAW,YAC3C,IAAA,IACA,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,OAAS,WACzC,IAAA,IACA,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,QAAU,WAC1C,IAAA,IACA,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,OAAS,UACzC,IAAA,IACA,IAAA,KACMvgB,OAAAA,GAAUugB,EAAgB,OAAS,WAC9C,QACWvgB,OAAAA,GAzSnB1F,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,mFAAmFM,MAAM,KACjGP,YAAa,2DAA2DO,MAAM,KAC9EwlB,kBAAmB,EACnB5iB,SAAU,4DAA4D5C,MAAM,KAC5E2C,cAAe,qCAAqC3C,MAAM,KAC1D0C,YAAa,uBAAuB1C,MAAM,KAC1CojB,oBAAqB,EACrB7nB,eAAgB,CACZuK,GAAI,OACJD,IAAM,UACNE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,2BAEVZ,SAAU,CACNC,QAAS,eACTC,QAAS,gBAETC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,wBACN,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,oBAGnB6B,QAAW,cACXC,SAAW,WAUA+kB,MATY,CACf,6BACA,iCACA,4BACA,4BACA,8BACA,2BACA,4BAEgB,KAAK7mB,QAE7B+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAS,WACT/I,EAAS,mBACTgJ,GAAS8jB,GAAWhF,UACpB3yB,EAAS23B,GAAWhF,UACpB7e,GAAS6jB,GAAWhF,UACpB5e,EAAS4jB,GAAWhF,UACpB3e,GAAS2jB,GAAWhF,UACpBpiB,EAAS,MACT0D,GAAS0jB,GAAWhF,UACpBze,EAAS,SACTC,GAASwjB,GAAWhF,UACpB3mB,EAAS,SACToI,GAASujB,GAAWhF,WAExBlf,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,8IAA8IM,MAAM,KAC5JP,YAAa,iEAAiEO,MAAM,KACpFJ,YAAa,yCACbumB,kBAAmB,yCACnBxmB,iBAAkB,yCAClBymB,uBAAwB,yCACxBxjB,SAAU,kDAAkD5C,MAAM,KAClE2C,cAAe,wBAAwB3C,MAAM,KAC7C0C,YAAa,wBAAwB1C,MAAM,KAC3CzE,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,wBACLC,KAAM,+BAEVZ,SAAU,CACNC,QAAS,wBACTC,QAAS,eACTC,SAAU,cACVC,QAAS,iBACTC,SAAU,2BACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,cACRC,KAAM,WACN/I,EAAG,mBACHgJ,GAAI,YACJ7T,EAAG,YACH8T,GAAI,YACJC,EAAG,WACHC,GAAI,WACJzD,EAAG,QACH0D,GAAI,QACJC,EAAG,YACHC,GAAI,YACJnI,EAAG,SACHoI,GAAI,UAERX,uBAAwB,WACxB1L,QAAS,MACTkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,uFAAuFM,MAAM,KACtGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,wDAAwD5C,MAAM,KACzE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,YACJC,GAAK,cACLC,IAAM,mBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,eACVC,SAAW,oBACXC,QAAU,gBACVC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,4BACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,8BAGnB+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,UACP/I,EAAI,kBACJgJ,GAAK,aACL7T,EAAI,SACJ8T,GAAK,YACLC,EAAI,MACJC,GAAK,UACLzD,EAAI,MACJ0D,GAAK,UACLC,EAAI,QACJC,GAAK,YACLnI,EAAI,SACJoI,GAAK,aAETX,uBAAwB,8BACxB1L,QAAU,SAAUxE,GACZwuB,IAAAA,EAAYxuB,EAAS,GACrByuB,EAAczuB,EAAS,IACvBA,OAAW,IAAXA,EACOA,EAAS,MACO,IAAhByuB,EACAzuB,EAAS,MACTyuB,EAAc,IAAMA,EAAc,GAClCzuB,EAAS,MACK,IAAdwuB,EACAxuB,EAAS,MACK,IAAdwuB,EACAxuB,EAAS,MACK,IAAdwuB,GAAiC,IAAdA,EACnBxuB,EAAS,MAETA,EAAS,OAGxB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yFAAyFM,MAAM,KACxGP,YAAc,yEAAyEO,MAAM,KAC7FwlB,kBAAmB,EACnB5iB,SAAW,wEAAwE5C,MAAM,KACzF2C,cAAgB,2CAA2C3C,MAAM,KACjE0C,YAAc,wBAAwB1C,MAAM,KAC5CzE,eAAiB,CACbuK,GAAK,aACLD,IAAM,gBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAU,aACVC,QAAU,YACVC,SAAW,WACXC,QAAU,cACVC,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,aACTC,KAAO,WACP/I,EAAI,gBACJgJ,GAAK,cACL7T,EAAI,eACJ8T,GAAK,cACLC,EAAI,eACJC,GAAK,cACLzD,EAAI,YACJ0D,GAAK,WACLC,EAAI,WACJC,GAAK,UACLnI,EAAI,WACJoI,GAAK,WAETC,cAAe,gDACfiH,aAAe,SAAUF,EAAMva,GAItBA,OAHQ,KAATua,IACAA,EAAO,GAEO,WAAbva,GAAyBua,GAAQ,GACjB,iBAAbva,GACa,eAAbA,EACGua,EAAO,GAEPA,GAGfva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,GACP,SACAA,EAAO,GACP,eACAA,EAAO,GACP,aAEA,YAiCnBvd,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,+LAA+LM,MAAM,KAC9MP,YAAc,6EAA6EO,MAAM,KACjGwlB,kBAAmB,EACnB5iB,SAAW,6CAA6C5C,MAAM,KAC9D2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,oBACLC,IAAM,0BACNC,KAAO,iCAEXa,cAAe,SACfjC,KAAO,SAAUnU,GACNA,MAAU,OAAVA,GAEX4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,KAEA,MAGfxI,SAAW,CACPC,QAAU,eACVC,QAAU,eACVC,SAAW,iBACXC,QAAU,eACVC,SAAW,qBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,UACP/I,EAAIktB,GACJlkB,GAAKkkB,GACL/3B,EAAI+3B,GACJjkB,GAAKikB,GACLhkB,EAAIgkB,GACJ/jB,GAAK+jB,GACLxnB,EAAIwnB,GACJ9jB,GAAK8jB,GACL7jB,EAAI6jB,GACJ5jB,GAAK4jB,GACL/rB,EAAI+rB,GACJ3jB,GAAK2jB,IAETtkB,uBAAwB,eACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,QACpB,QACWA,OAAAA,MAOnB00B,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGAC,SAAAA,GAAe50B,EAAQugB,EAAehL,EAAQ4Q,GAE/ChhB,IAAAA,EAAS,GACTob,GAAAA,EACQhL,OAAAA,GACC,IAAA,IAAKpQ,EAAS,aAAc,MAC5B,IAAA,KAAMA,EAAS,WAAY,MAC3B,IAAA,IAAKA,EAAS,WAAY,MAC1B,IAAA,KAAMA,EAAS,YAAa,MAC5B,IAAA,IAAKA,EAAS,SAAU,MACxB,IAAA,KAAMA,EAAS,SAAU,MACzB,IAAA,IAAKA,EAAS,UAAW,MACzB,IAAA,KAAMA,EAAS,UAAW,MAC1B,IAAA,IAAKA,EAAS,WAAY,MAC1B,IAAA,KAAMA,EAAS,WAAY,MAC3B,IAAA,IAAKA,EAAS,UAAW,MACzB,IAAA,KAAMA,EAAS,gBAIhBoQ,OAAAA,GACC,IAAA,IAAKpQ,EAAS,eAAgB,MAC9B,IAAA,KAAMA,EAAS,aAAc,MAC7B,IAAA,IAAKA,EAAS,aAAc,MAC5B,IAAA,KAAMA,EAAS,aAAc,MAC7B,IAAA,IAAKA,EAAS,WAAY,MAC1B,IAAA,KAAMA,EAAS,WAAY,MAC3B,IAAA,IAAKA,EAAS,YAAa,MAC3B,IAAA,KAAMA,EAAS,YAAa,MAC5B,IAAA,IAAKA,EAAS,cAAe,MAC7B,IAAA,KAAMA,EAAS,cAAe,MAC9B,IAAA,IAAKA,EAAS,YAAa,MAC3B,IAAA,KAAMA,EAAS,YAGrBA,OAAAA,EAAOF,QAAQ,MAAOjF,GAGjC1F,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAa,gFAAgFO,MAAM,KACnGwlB,kBAAmB,EACnB5iB,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,kCAAkC3C,MAAM,KACxD0C,YAAc,qBAAqB1C,MAAM,KACzCzE,eAAiB,CACbuK,GAAK,eACLD,IAAM,kBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXZ,SAAW,CACPC,QAAU,UACVC,QAAU,aACVC,SAAW,WACXC,QAAU,WACVC,SAAU,mBACVC,SAAW,KAEfQ,aAAe,CACXC,OAAQ,UACRC,KAAM,WACN/I,EAAGstB,GACHtkB,GAAIskB,GACJn4B,EAAGm4B,GACHrkB,GAAIqkB,GACJpkB,EAAGokB,GACHnkB,GAAImkB,GACJ5nB,EAAG4nB,GACHlkB,GAAIkkB,GACJjkB,EAAGikB,GACHhkB,GAAIgkB,GACJnsB,EAAGmsB,GACH/jB,GAAI+jB,IAER3c,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC2vB,OAAAA,GAAY3vB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B0vB,OAAAA,GAAY1vB,MAG3B8L,cAAe,+BACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,WAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,UAAbva,EACAua,EACa,WAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,aAAbva,EACAua,EAAO,QADX,GAIXva,SAAU,SAAUua,EAAMe,EAAQ+P,GAC1B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,GACP,QACAA,EAAO,GACP,SACAA,EAAO,GACP,WAEA,UAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,oFAAoFM,MAAM,KACnGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,6CAA6C5C,MAAM,KAC9D2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXa,cAAe,8BACfiH,aAAc,SAAUF,EAAMva,GAItBA,OAHS,KAATua,IACAA,EAAO,GAEM,SAAbva,EACOua,EACa,cAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,WAAbva,GAAsC,UAAbA,EACzBua,EAAO,QADX,GAIXva,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACD,OACAA,EAAQ,GACR,YACAA,EAAQ,GACR,SAEA,SAGfiB,SAAW,CACPC,QAAU,sBACVC,QAAU,kBACVC,SAAW,kBACXC,QAAU,sBACVC,SAAW,wBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,gBACP/I,EAAI,gBACJgJ,GAAK,UACL7T,EAAI,UACJ8T,GAAK,WACLC,EAAI,QACJC,GAAK,SACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oFAAoFM,MAAM,KACnGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,6CAA6C5C,MAAM,KAC9D2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXa,cAAe,8BACfiH,aAAc,SAAUF,EAAMva,GAItBA,OAHS,KAATua,IACAA,EAAO,GAEM,SAAbva,EACOua,EACa,cAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,WAAbva,GAAsC,UAAbA,EACzBua,EAAO,QADX,GAIXva,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACD,OACAA,EAAQ,GACR,YACAA,EAAQ,GACR,SAEA,SAGfiB,SAAW,CACPC,QAAU,sBACVC,QAAU,kBACVC,SAAW,kBACXC,QAAU,sBACVC,SAAW,wBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,gBACP/I,EAAI,gBACJgJ,GAAK,UACL7T,EAAI,UACJ8T,GAAK,WACLC,EAAI,QACJC,GAAK,SACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,iEAAiE5C,MAAM,KAClF2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,iBACVC,QAAU,iBACVC,SAAW,gBACXC,QAAU,qBACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,SACP/I,EAAI,eACJgJ,GAAK,aACL7T,EAAI,SACJ8T,GAAK,YACLC,EAAI,SACJC,GAAK,aACLzD,EAAI,UACJ0D,GAAK,YACLC,EAAI,QACJC,GAAK,UACLnI,EAAI,OACJoI,GAAK,UAETX,uBAAyB,WACzB1L,QAAS,MACTkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVupB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTx6B,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,2FAA2FM,MAAM,KACzGP,YAAa,mDAAmDO,MAAM,KACtE4C,SAAU,wDAAwD5C,MAAM,KACxE2C,cAAe,2BAA2B3C,MAAM,KAChD0C,YAAa,2BAA2B1C,MAAM,KAE9CzE,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAEVZ,SAAU,CACNC,QAAS,kBACTC,QAAS,sBACTC,SAAU,gBACVC,QAAS,mBACTC,SAAU,6BACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,gBACRC,KAAM,kBACN/I,EAAG,kBACHgJ,GAAK,aACL7T,EAAG,WACH8T,GAAI,WACJC,EAAG,UACHC,GAAI,UACJzD,EAAG,SACH0D,GAAI,SACJC,EAAG,OACHC,GAAI,OACJnI,EAAG,UACHoI,GAAI,WAERoH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC8vB,OAAAA,GAAY9vB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B6vB,OAAAA,GAAY7vB,MAG3B0G,KAAM,CACFL,IAAK,EACLC,IAAK,KAMbhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAW,qDAAqD5C,MAAM,KACtE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,eACLC,IAAM,2BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAS,iBACTC,QAAS,oBACTC,SAAU,gBACVC,QAAS,iBACTC,SAAU,0BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,WACP/I,EAAI,gBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,cACLC,EAAI,UACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,WACLC,EAAI,WACJC,GAAK,aACLnI,EAAI,SACJoI,GAAK,SAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVypB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGT16B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,uFAAuFM,MAAM,KACtGP,YAAc,uEAAuEO,MAAM,KAC3FwlB,kBAAmB,EACnB5iB,SAAW,wDAAwD5C,MAAM,KACzE2C,cAAgB,0CAA0C3C,MAAM,KAChE0C,YAAc,4BAA4B1C,MAAM,KAChDojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,eACLD,IAAM,kBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAEXgI,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtCgwB,OAAAA,GAAYhwB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B+vB,OAAAA,GAAY/vB,MAG3B8L,cAAe,yBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,SAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,UAAbva,EACAua,EACa,WAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,SAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,QACAA,EAAO,GACP,SACAA,EAAO,GACP,OAEA,QAGfxI,SAAW,CACPC,QAAU,UACVC,QAAU,YACVC,SAAW,qBACXC,QAAU,YACVC,SAAW,oBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,OACTC,KAAO,WACP/I,EAAI,YACJgJ,GAAK,aACL7T,EAAI,WACJ8T,GAAK,WACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,WACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,WAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV2pB,IAAAA,GAAwB,6DAA6DlrB,MAAM,KAC3FmrB,GAA2B,kDAAkDnrB,MAAM,KAEnForB,GAAgB,CAAC,QAAS,QAAS,iBAAkB,QAAS,SAAU,cAAe,cAAe,QAAS,QAAS,QAAS,QAAS,SAC1IC,GAAgB,qKAEpB96B,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACb+4B,GAAyBz4B,EAAEyM,SAE3B+rB,GAAsBx4B,EAAEyM,SAJxB+rB,IAQftrB,YAAayrB,GACb1rB,iBAAkB0rB,GAClBlF,kBAAmB,4FACnBC,uBAAwB,mFAExBvmB,YAAcurB,GACd/E,gBAAkB+E,GAClB9E,iBAAmB8E,GAEnBxoB,SAAW,6DAA6D5C,MAAM,KAC9E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,kBACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,mBACTC,SAAU,2BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,UACTC,KAAO,aACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,SACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,YACJC,GAAK,aACLnI,EAAI,WACJoI,GAAK,WAETX,uBAAwB,kBACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAAsB,IAAXA,GAA2B,IAAXA,GAAgBA,GAAU,GAAM,MAAQ,OAE9E0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV+pB,IAAAA,GAAwB,6DAA6DtrB,MAAM,KAC3FurB,GAA2B,kDAAkDvrB,MAAM,KAEnFwrB,GAAgB,CAAC,QAAS,QAAS,iBAAkB,QAAS,SAAU,cAAe,cAAe,QAAS,QAAS,QAAS,QAAS,SAC1IC,GAAgB,qKAEpBl7B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,SAAU/M,EAAGN,GACnB,OAACM,EAEM,QAAQ+I,KAAKrJ,GACbm5B,GAAyB74B,EAAEyM,SAE3BmsB,GAAsB54B,EAAEyM,SAJxBmsB,IAQf1rB,YAAa6rB,GACb9rB,iBAAkB8rB,GAClBtF,kBAAmB,4FACnBC,uBAAwB,mFAExBvmB,YAAc2rB,GACdnF,gBAAkBmF,GAClBlF,iBAAmBkF,GAEnB5oB,SAAW,6DAA6D5C,MAAM,KAC9E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,kBACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,mBACTC,SAAU,2BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,UACTC,KAAO,aACP/I,EAAI,oBACJgJ,GAAK,cACL7T,EAAI,aACJ8T,GAAK,aACLC,EAAI,UACJC,GAAK,SACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,YACJC,GAAK,aACLnI,EAAI,WACJoI,GAAK,WAETX,uBAAwB,kBACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAAsB,IAAXA,GAA2B,IAAXA,GAAgBA,GAAU,GAAM,MAAQ,OAE9E0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qFAAqFM,MAAM,KACpGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,qDAAqD5C,MAAM,KACtE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,eACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAS,oBACTC,QAAS,uBACTC,SAAU,mBACVC,QAAS,oBACTC,SAAU,gCACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,WACP/I,EAAI,eACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,UACJ0D,GAAK,WACLC,EAAI,YACJC,GAAK,aACLnI,EAAI,SACJoI,GAAK,SAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVmqB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAETC,GAAc,CACL,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTp7B,EAAMqX,aAAa,QAAS,CAExBlI,OAAS,sEAAsEM,MAAM,KACrFP,YAAc,sEAAsEO,MAAM,KAC1F4C,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,iCAAiC3C,MAAM,KACvD0C,YAAc,iCAAiC1C,MAAM,KACrDzE,eAAiB,CACbuK,GAAK,aACLD,IAAM,gBACNE,EAAI,aACJC,GAAK,cACLC,IAAM,0BACNC,KAAO,iCAEXZ,SAAW,CACPC,QAAU,UACVC,QAAU,UACVC,SAAW,kBACXC,QAAU,UACVC,SAAW,mBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,UACTC,KAAO,WACP/I,EAAI,YACJgJ,GAAK,WACL7T,EAAI,UACJ8T,GAAK,UACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,YACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC0wB,OAAAA,GAAY1wB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5BywB,OAAAA,GAAYzwB,MAK3B8L,cAAe,uBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,QAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,SAAbva,EACAua,EACa,WAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,SAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,MACAA,EAAO,GACP,OACAA,EAAO,GACP,SACAA,EAAO,GACP,OAEA,OAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVqqB,IAAAA,GAAmB,mGAAmG5rB,MAAM,KAC5H6rB,GAAmB,qGAAqG7rB,MAAM,KACzH8rB,SAAAA,GAAStpB,GACNA,OAAAA,EAAI,GAAK,GAAOA,EAAI,GAAK,MAAWA,EAAI,IAAM,IAAQ,EAEzDupB,SAAAA,GAAY91B,EAAQugB,EAAe7e,GACpCmV,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,KACMmV,OAAAA,GAAUgf,GAAS71B,GAAU,UAAY,UAC/C,IAAA,IACMugB,OAAAA,EAAgB,SAAW,SACjC,IAAA,KACM1J,OAAAA,GAAUgf,GAAS71B,GAAU,SAAW,SAC9C,IAAA,IACMugB,OAAAA,EAAiB,UAAa,UACpC,IAAA,KACM1J,OAAAA,GAAUgf,GAAS71B,GAAU,UAAY,UAC/C,IAAA,KACM6W,OAAAA,GAAUgf,GAAS71B,GAAU,WAAa,YAChD,IAAA,KACM6W,OAAAA,GAAUgf,GAAS71B,GAAU,OAAS,QAmMhD+1B,SAAAA,GAAyB/1B,EAAQugB,EAAe7e,GACjDvF,IAQA6e,EAAY,IAIThb,OAHHA,EAAS,KAAO,IAAOA,GAAU,KAAOA,EAAS,KAAQ,KACzDgb,EAAY,QAEThb,EAASgb,EAZH,CACC,GAAA,UACA,GAAA,SACA,GAAA,MACA,GAAA,OACA,GAAA,OACA,GAAA,OAMqBtZ,GAsD9Bs0B,SAAAA,GAAyBh2B,EAAQugB,EAAe7e,GACjDvF,IALgBkyB,EAChBC,EAYA5sB,MAAQ,MAARA,EACO6e,EAAgB,SAAW,SAG3BvgB,EAAS,KAjBAquB,GAiB6BruB,EAhB7CsuB,EAIS,CACH/N,GAAAA,EAAgB,yBAA2B,yBAC3CA,GAAAA,EAAgB,sBAAwB,sBACxC,GAAA,iBACA,GAAA,gBACA,GAAA,uBACA,GAAA,gBAMgC7e,GAhBzBqI,MAAM,KAChBskB,EAAM,IAAO,GAAKA,EAAM,KAAQ,GAAKC,EAAM,GAAMD,EAAM,IAAM,GAAKA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,KAAO,IAAMC,EAAM,GAAKA,EAAM,IAhQrJh0B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,SAAUgnB,EAAgBt0B,GAC3B,OAACs0B,EAEiB,KAAXt0B,EAIA,IAAMy5B,GAAiBnF,EAAevnB,SAAW,IAAMysB,GAAiBlF,EAAevnB,SAAW,IAClG,SAAS1D,KAAKrJ,GACdy5B,GAAiBnF,EAAevnB,SAEhCysB,GAAiBlF,EAAevnB,SAThCysB,IAYfnsB,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,6DAA6D5C,MAAM,KAC9E2C,cAAgB,2BAA2B3C,MAAM,KACjD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAS,cACTC,QAAS,eACTC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,qBAEN,KAAA,EACM,MAAA,mBAEN,KAAA,EACM,MAAA,iBAEN,KAAA,EACM,MAAA,kBAEX,QACW,MAAA,oBAGnB6B,QAAS,iBACTC,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,4BACN,KAAA,EACM,MAAA,wBACN,KAAA,EACM,MAAA,yBACX,QACW,MAAA,2BAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,eACJgJ,GAAKwlB,GACLr5B,EAAIq5B,GACJvlB,GAAKulB,GACLtlB,EAAIslB,GACJrlB,GAAKqlB,GACL9oB,EAAI,UACJ0D,GAAK,SACLC,EAAI,UACJC,GAAKklB,GACLrtB,EAAI,MACJoI,GAAKilB,IAET5lB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,2FAA2FM,MAAM,KAC1GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,iFAAiF5C,MAAM,KAClG2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,mCACNC,KAAO,0CAEXZ,SAAW,CACPC,QAAS,eACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,gBACTC,SAAU,WACE,OAAe,IAAf,KAAK9B,OAA8B,IAAf,KAAKA,MAC7B,wBADJ,yBAIJ+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,QACP/I,EAAI,kBACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAwB,WACxB1L,QAAU,QAKdlK,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,2FAA2FM,MAAM,KAC1GP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,iFAAiF5C,MAAM,KAClG2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,8BACNC,KAAO,qCAEXZ,SAAW,CACPC,QAAS,eACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,gBACTC,SAAU,WACE,OAAe,IAAf,KAAK9B,OAA8B,IAAf,KAAKA,MAC7B,wBADJ,yBAIJ+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,QACP/I,EAAI,WACJgJ,GAAK,cACL7T,EAAI,YACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,UACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,WAETX,uBAAwB,WACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAsBdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oGAAoGM,MAAM,KACnHP,YAAc,gEAAgEO,MAAM,KACpFwlB,kBAAkB,EAClB5iB,SAAW,kDAAkD5C,MAAM,KACnE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,cACLC,IAAM,mBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,cACTC,QAAS,gBACTC,SAAU,eACVC,QAAS,eACTC,SAAU,uBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,WACTC,KAAO,aACP/I,EAAI,iBACJgJ,GAAKylB,GACLt5B,EAAI,WACJ8T,GAAKwlB,GACLvlB,EAAI,QACJC,GAAKslB,GACL/oB,EAAI,OACJ0D,GAAKqlB,GACLplB,EAAI,SACJC,GAAKmlB,GACLttB,EAAI,QACJoI,GAAKklB,IAETrqB,KAAO,CACHL,IAAM,EACNC,IAAM,KA0BV2qB,IAAAA,GAAgB,CAAC,QAAS,QAAS,QAAS,QAAS,WAAY,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAK3H37B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACLtN,OAAQ,oFAAoF4N,MAAM,KAClGwkB,WAAY,kFAAkFxkB,MAAM,MAExGP,YAAc,CAEVrN,OAAQ,gEAAgE4N,MAAM,KAC9EwkB,WAAY,gEAAgExkB,MAAM,MAEtF4C,SAAW,CACP4hB,WAAY,gEAAgExkB,MAAM,KAClF5N,OAAQ,gEAAgE4N,MAAM,KAC9Eyc,SAAU,kDAEd9Z,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CH,YAAcqsB,GACd7F,gBAAkB6F,GAClB5F,iBAAmB4F,GAGnBtsB,YAAa,2MAGbD,iBAAkB,2MAGlBwmB,kBAAmB,wHAGnBC,uBAAwB,6FACxB7qB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,iBACLC,IAAM,uBACNC,KAAO,8BAEXZ,SAAW,CACPC,QAAS,kBACTC,QAAS,iBACTE,QAAS,gBACTD,SAAU,SAAUwD,GACZA,GAAAA,EAAItH,SAAW,KAAKA,OAchB,OAAe,IAAf,KAAKkC,MACE,oBAEA,mBAhBH,OAAA,KAAKA,OACJ,KAAA,EACM,MAAA,6BACN,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,6BACN,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,+BAUvB8B,SAAU,SAAUsD,GACZA,GAAAA,EAAItH,SAAW,KAAKA,OAchB,OAAe,IAAf,KAAKkC,MACE,oBAEA,mBAhBH,OAAA,KAAKA,OACJ,KAAA,EACM,MAAA,2BACN,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,2BACN,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,6BAUvB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,WACTC,KAAO,WACP/I,EAAI,mBACJgJ,GAAK0lB,GACLv5B,EAAIu5B,GACJzlB,GAAKylB,GACLxlB,EAAI,MACJC,GAAKulB,GACLhpB,EAAI,OACJ0D,GAAKslB,GACLrlB,EAAI,QACJC,GAAKolB,GACLvtB,EAAI,MACJoI,GAAKmlB,IAETllB,cAAe,wBACfjC,KAAO,SAAUnU,GACN,MAAA,iBAAiB8K,KAAK9K,IAEjC4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,OACAA,EAAO,GACP,MAEA,UAGf3H,uBAAwB,mBACxB1L,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,KACf,IAAA,IACMA,OAAAA,EAAS,MACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,KACpB,QACWA,OAAAA,IAGnB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMV4qB,IAAAA,GAAW,CACX,QACA,UACA,OACA,QACA,MACA,MACA,SACA,OACA,UACA,SACA,QACA,SAEAC,GAAS,CACT,MACA,OACA,QACA,OACA,OACA,MACA,QAGJ77B,EAAMqX,aAAa,KAAM,CACrBlI,OAASysB,GACT1sB,YAAc0sB,GACdvpB,SAAWwpB,GACXzpB,cAAgBypB,GAChB1pB,YAAc0pB,GACd7wB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXa,cAAe,UACfjC,KAAO,SAAUnU,GACN,MAAA,QAAUA,GAErB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,MAEJ,OAEXxI,SAAW,CACPC,QAAU,UACVC,QAAU,aACVC,SAAW,yBACXC,QAAU,aACVC,SAAW,4BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,QACP/I,EAAI,YACJgJ,GAAK,WACL7T,EAAI,SACJ8T,GAAK,SACLC,EAAI,UACJC,GAAK,UACLzD,EAAI,WACJ0D,GAAK,WACLC,EAAI,WACJC,GAAK,WACLnI,EAAI,SACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCyG,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,mJAAmJM,MAAM,KAClKP,YAAc,6DAA6DO,MAAM,KACjF4C,SAAW,6EAA6E5C,MAAM,KAC9F2C,cAAgB,mCAAmC3C,MAAM,KACzD0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,oBACLC,IAAM,gCACNC,KAAO,uCAEXZ,SAAW,CACPC,QAAS,eACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,eACTC,SAAU,wBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,YACTC,KAAO,WACP/I,EAAI,mBACJgJ,GAAI,eACJ7T,EAAI,eACJ8T,GAAK,cACLC,EAAI,cACJC,GAAK,aACLzD,EAAI,cACJ0D,GAAK,cACLC,EAAI,aACJC,GAAK,WACLnI,EAAI,aACJoI,GAAK,YAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAOdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,kGAAkGM,MAAM,KACjHP,YAAc,wDAAwDO,MAAM,KAC5E4C,SAAW,gEAAgE5C,MAAM,KACjF2C,cAAgB,gCAAgC3C,MAAM,KACtD0C,YAAc,qBAAqB1C,MAAM,KACzCojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,sBACNC,KAAO,sCAEXZ,SAAW,CACPC,QAAU,aACVC,QAAU,cACVC,SAAW,aACXC,QAAU,cACVC,SAAW,sBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EAAI,eACJgJ,GAAK,WACL7T,EAAI,YACJ8T,GAAK,cACLC,EAAI,MACJC,GAAK,SACLzD,EAAI,OACJ0D,GAAK,SACLC,EAAI,OACJC,GAAK,SACLnI,EAAI,MACJoI,GAAK,UAETX,uBAAwB,eACxB1L,QAAU,SAAUxE,GACTA,OAAAA,EAAS,SAEpB8Q,cAAgB,4BAChBjC,KAAO,SAAUnU,GACNA,MAAU,SAAVA,GAA8B,YAAVA,GAE/B4C,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,OAAS,UAEnBA,EAAU,QAAU,aAOnCyN,IAAAA,GAAW,oFAAoFrsB,MAAM,KACrGssB,GAAgB,kDAAkDtsB,MAAM,KACnEusB,SAAAA,GAAS/pB,GACNA,OAAAA,EAAI,GAAOA,EAAI,EAElBgqB,SAAAA,GAAYv2B,EAAQugB,EAAe7e,EAAKykB,GACzCtP,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,IACO6e,OAAAA,GAAiB4F,EAAY,aAAe,gBACnD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,UAAY,UAEzC6W,EAAS,YAGnB,IAAA,IACM0J,OAAAA,EAAgB,SAAY4F,EAAW,SAAW,UACxD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,SAAW,SAExC6W,EAAS,WAGnB,IAAA,IACM0J,OAAAA,EAAgB,SAAY4F,EAAW,SAAW,UACxD,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,SAAW,SAExC6W,EAAS,WAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,MAAQ,OAC5C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,MAAQ,OAErC6W,EAAS,QAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,SAAW,WAC/C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,UAAY,YAEzC6W,EAAS,WAGnB,IAAA,IACO0J,OAAAA,GAAiB4F,EAAY,MAAQ,QAC5C,IAAA,KACG5F,OAAAA,GAAiB4F,EACVtP,GAAUyf,GAASt2B,GAAU,OAAS,SAEtC6W,EAAS,SAqFvB2f,SAAAA,GAAsBx2B,EAAQugB,EAAe7e,EAAKykB,GACnDtP,IAAAA,EAAS7W,EAAS,IACd0B,OAAAA,GACC,IAAA,IACM6e,OAAAA,GAAiB4F,EAAW,eAAiB,kBACnD,IAAA,KAUMtP,OARHA,GADW,IAAX7W,EACUugB,EAAgB,UAAY,UACpB,IAAXvgB,EACGugB,GAAiB4F,EAAW,UAAY,WAC3CnmB,EAAS,EACNugB,GAAiB4F,EAAW,UAAY,WAExC,SAGb,IAAA,IACM5F,OAAAA,EAAgB,aAAe,aACrC,IAAA,KAUM1J,OARHA,GADW,IAAX7W,EACUugB,EAAgB,SAAW,SACnB,IAAXvgB,EACGugB,GAAiB4F,EAAW,SAAW,WAC1CnmB,EAAS,EACNugB,GAAiB4F,EAAW,SAAW,WAEvC5F,GAAiB4F,EAAW,QAAU,WAGnD,IAAA,IACM5F,OAAAA,EAAgB,UAAY,UAClC,IAAA,KAUM1J,OARHA,GADW,IAAX7W,EACUugB,EAAgB,MAAQ,MAChB,IAAXvgB,EACGugB,GAAiB4F,EAAW,MAAQ,QACvCnmB,EAAS,EACNugB,GAAiB4F,EAAW,MAAQ,QAEpC5F,GAAiB4F,EAAW,KAAO,QAGhD,IAAA,IACM5F,OAAAA,GAAiB4F,EAAW,SAAW,YAC7C,IAAA,KAQMtP,OANHA,GADW,IAAX7W,EACUugB,GAAiB4F,EAAW,MAAQ,OAC5B,IAAXnmB,EACGugB,GAAiB4F,EAAW,MAAQ,UAEpC5F,GAAiB4F,EAAW,MAAQ,QAGjD,IAAA,IACM5F,OAAAA,GAAiB4F,EAAW,WAAa,eAC/C,IAAA,KAUMtP,OARHA,GADW,IAAX7W,EACUugB,GAAiB4F,EAAW,QAAU,UAC9B,IAAXnmB,EACGugB,GAAiB4F,EAAW,SAAW,WAC1CnmB,EAAS,EACNugB,GAAiB4F,EAAW,SAAW,SAEvC5F,GAAiB4F,EAAW,UAAY,SAGrD,IAAA,IACM5F,OAAAA,GAAiB4F,EAAW,WAAa,aAC/C,IAAA,KAUMtP,OARHA,GADW,IAAX7W,EACUugB,GAAiB4F,EAAW,OAAS,QAC7B,IAAXnmB,EACGugB,GAAiB4F,EAAW,OAAS,SACxCnmB,EAAS,EACNugB,GAAiB4F,EAAW,OAAS,OAErC5F,GAAiB4F,EAAW,MAAQ,QA3J9D7rB,EAAMqX,aAAa,KAAM,CACrBlI,OAAS2sB,GACT5sB,YAAc6sB,GACd1pB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAI,OACJD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,cACTC,QAAS,gBACTC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,kBACN,KAAA,EACA,KAAA,EACM,MAAA,kBACN,KAAA,EACM,MAAA,kBACN,KAAA,EACM,MAAA,oBACN,KAAA,EACM,MAAA,kBACN,KAAA,EACM,MAAA,oBAGnB6B,QAAS,eACTC,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,uBACN,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,uBACN,KAAA,EACA,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,yBAGnB+B,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAIivB,GACJjmB,GAAKimB,GACL95B,EAAI85B,GACJhmB,GAAKgmB,GACL/lB,EAAI+lB,GACJ9lB,GAAK8lB,GACLvpB,EAAIupB,GACJ7lB,GAAK6lB,GACL5lB,EAAI4lB,GACJ3lB,GAAK2lB,GACL9tB,EAAI8tB,GACJ1lB,GAAK0lB,IAETrmB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAwFdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAkB,EAClB5iB,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,eACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAW,gBACXC,QAAW,gBAEXC,SAAW,WACC,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,wBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACM,MAAA,uBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,qBAGnB6B,QAAW,iBACXC,SAAW,WACC,OAAA,KAAK9B,OACJ,KAAA,EACM,MAAA,+BACN,KAAA,EACM,MAAA,6BACN,KAAA,EACM,MAAA,8BACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,4BAGnB+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAS,UACT/I,EAASkvB,GACTlmB,GAASkmB,GACT/5B,EAAS+5B,GACTjmB,GAASimB,GACThmB,EAASgmB,GACT/lB,GAAS+lB,GACTxpB,EAASwpB,GACT9lB,GAAS8lB,GACT7lB,EAAS6lB,GACT5lB,GAAS4lB,GACT/tB,EAAS+tB,GACT3lB,GAAS2lB,IAEbtmB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,gFAAgFM,MAAM,KAC/FP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,4DAA4D5C,MAAM,KAC7E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,mBAAmB1C,MAAM,KACvCojB,oBAAqB,EACrBrc,cAAe,QACfjC,KAAM,SAAUnU,GACLA,MAAoB,MAApBA,EAAM+tB,OAAO,IAExBnrB,SAAW,SAAU8Q,EAAOE,EAASqa,GAC1Bva,OAAAA,EAAQ,GAAK,KAAO,MAE/B9I,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,cACVC,QAAU,gBACVC,SAAW,eACXC,QAAU,cACVC,SAAW,wBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,aACP/I,EAAI,eACJgJ,GAAK,aACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,UACJC,GAAK,SACLzD,EAAI,WACJ0D,GAAK,UACLC,EAAI,WACJC,GAAK,UACLnI,EAAI,UACJoI,GAAK,WAETX,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVmrB,IAAAA,GAAe,CACfpC,MAAO,CACH/jB,GAAI,CAAC,UAAW,UAAW,WAC3B7T,EAAG,CAAC,cAAe,gBACnB8T,GAAI,CAAC,QAAS,SAAU,UACxBC,EAAG,CAAC,YAAa,eACjBC,GAAI,CAAC,MAAO,OAAQ,QACpBC,GAAI,CAAC,MAAO,OAAQ,QACpBE,GAAI,CAAC,QAAS,SAAU,UACxBC,GAAI,CAAC,SAAU,SAAU,WAE7ByjB,uBAAwB,SAAUt0B,EAAQu0B,GAC/Bv0B,OAAW,IAAXA,EAAeu0B,EAAQ,GAAMv0B,GAAU,GAAKA,GAAU,EAAIu0B,EAAQ,GAAKA,EAAQ,IAE1FnF,UAAW,SAAUpvB,EAAQugB,EAAe7e,GACpC6yB,IAAAA,EAAUkC,GAAapC,MAAM3yB,GAC7BA,OAAe,IAAfA,EAAIhG,OACG6kB,EAAgBgU,EAAQ,GAAKA,EAAQ,GAErCv0B,EAAS,IAAMy2B,GAAanC,uBAAuBt0B,EAAQu0B,KAK9Ej6B,EAAMqX,aAAa,UAAW,CAC1BlI,OAAQ,mFAAmFM,MAAM,KACjGP,YAAa,2DAA2DO,MAAM,KAC9EwlB,kBAAkB,EAClB5iB,SAAU,sDAAsD5C,MAAM,KACtE2C,cAAe,qCAAqC3C,MAAM,KAC1D0C,YAAa,uBAAuB1C,MAAM,KAC1CojB,oBAAqB,EACrB7nB,eAAgB,CACZuK,GAAI,OACJD,IAAM,UACNE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,2BAEVZ,SAAU,CACNC,QAAS,eACTC,QAAS,eACTC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,sBACN,KAAA,EACM,MAAA,qBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,oBAGnB6B,QAAW,cACXC,SAAW,WAUA+kB,MATY,CACf,2BACA,+BACA,4BACA,0BACA,8BACA,2BACA,4BAEgB,KAAK7mB,QAE7B+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAS,SACT/I,EAAS,mBACTgJ,GAASmmB,GAAarH,UACtB3yB,EAASg6B,GAAarH,UACtB7e,GAASkmB,GAAarH,UACtB5e,EAASimB,GAAarH,UACtB3e,GAASgmB,GAAarH,UACtBpiB,EAAS,MACT0D,GAAS+lB,GAAarH,UACtBze,EAAS,QACTC,GAAS6lB,GAAarH,UACtB3mB,EAAS,SACToI,GAAS4lB,GAAarH,WAE1Blf,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVorB,IAAAA,GAAe,CACfrC,MAAO,CACH/jB,GAAI,CAAC,UAAW,UAAW,WAC3B7T,EAAG,CAAC,cAAe,gBACnB8T,GAAI,CAAC,QAAS,SAAU,UACxBC,EAAG,CAAC,YAAa,eACjBC,GAAI,CAAC,MAAO,OAAQ,QACpBC,GAAI,CAAC,MAAO,OAAQ,QACpBE,GAAI,CAAC,QAAS,SAAU,UACxBC,GAAI,CAAC,SAAU,SAAU,WAE7ByjB,uBAAwB,SAAUt0B,EAAQu0B,GAC/Bv0B,OAAW,IAAXA,EAAeu0B,EAAQ,GAAMv0B,GAAU,GAAKA,GAAU,EAAIu0B,EAAQ,GAAKA,EAAQ,IAE1FnF,UAAW,SAAUpvB,EAAQugB,EAAe7e,GACpC6yB,IAAAA,EAAUmC,GAAarC,MAAM3yB,GAC7BA,OAAe,IAAfA,EAAIhG,OACG6kB,EAAgBgU,EAAQ,GAAKA,EAAQ,GAErCv0B,EAAS,IAAM02B,GAAapC,uBAAuBt0B,EAAQu0B,KAK9Ej6B,EAAMqX,aAAa,KAAM,CACrBlI,OAAQ,mFAAmFM,MAAM,KACjGP,YAAa,2DAA2DO,MAAM,KAC9EwlB,kBAAkB,EAClB5iB,SAAU,wDAAwD5C,MAAM,KACxE2C,cAAe,qCAAqC3C,MAAM,KAC1D0C,YAAa,uBAAuB1C,MAAM,KAC1CojB,oBAAqB,EACrB7nB,eAAgB,CACZuK,GAAI,OACJD,IAAM,UACNE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,2BAEVZ,SAAU,CACNC,QAAS,eACTC,QAAS,eACTC,SAAU,WACE,OAAA,KAAK5B,OACJ,KAAA,EACM,MAAA,uBACN,KAAA,EACM,MAAA,qBACN,KAAA,EACM,MAAA,sBACN,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM,MAAA,oBAGnB6B,QAAW,cACXC,SAAW,WAUA+kB,MATY,CACf,4BACA,gCACA,4BACA,0BACA,8BACA,2BACA,4BAEgB,KAAK7mB,QAE7B+B,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAS,SACT/I,EAAS,mBACTgJ,GAASomB,GAAatH,UACtB3yB,EAASi6B,GAAatH,UACtB7e,GAASmmB,GAAatH,UACtB5e,EAASkmB,GAAatH,UACtB3e,GAASimB,GAAatH,UACtBpiB,EAAS,MACT0D,GAASgmB,GAAatH,UACtBze,EAAS,QACTC,GAAS8lB,GAAatH,UACtB3mB,EAAS,SACToI,GAAS6lB,GAAatH,WAE1Blf,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,mHAAmHM,MAAM,KAClIP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,sEAAsE5C,MAAM,KACvF2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,mBACVC,QAAU,kBACVC,SAAW,gBACXC,QAAU,iBACVC,SAAW,8BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,iBACP/I,EAAI,qBACJgJ,GAAK,cACL7T,EAAI,SACJ8T,GAAK,aACLC,EAAI,SACJC,GAAK,aACLzD,EAAI,UACJ0D,GAAK,cACLC,EAAI,UACJC,GAAK,cACLnI,EAAI,UACJoI,GAAK,eAETC,cAAe,mCACfxT,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACD,UACAA,EAAQ,GACR,QACAA,EAAQ,GACR,aAEA,WAGf2J,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,YAAbva,EACOua,EACa,UAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,eAAbva,GAA0C,YAAbA,EACvB,IAATua,EACO,EAEJA,EAAO,QAJX,GAOX3H,uBAAwB,UACxB1L,QAAU,KACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,oDAAoD5C,MAAM,KACrE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,0BACNC,KAAO,+BACPwf,IAAM,mBACNC,KAAO,wBAEXrgB,SAAW,CACPC,QAAS,YACTC,QAAS,eACTE,QAAS,YACTD,SAAU,eACVE,SAAU,iBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,eACP/I,EAAI,iBACJgJ,GAAK,cACL7T,EAAI,WACJ8T,GAAK,aACLC,EAAI,WACJC,GAAK,YACLzD,EAAI,SACJ0D,GAAK,WACLC,EAAI,WACJC,GAAK,aACLnI,EAAI,SACJoI,GAAK,SAETX,uBAAwB,eACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,IAClC,IAANlE,EAAW,IACL,IAANA,EAAW,IACA,MAGpB4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,sFAAsFM,MAAM,KACrGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,kCAAkC3C,MAAM,KACxD0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,eACVC,QAAU,iBACVC,SAAW,8BACXC,QAAU,YACVC,SAAW,kCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,aACTC,KAAO,WACP/I,EAAI,aACJgJ,GAAK,aACL7T,EAAI,cACJ8T,GAAK,YACLC,EAAI,aACJC,GAAK,WACLzD,EAAI,YACJ0D,GAAK,YACLC,EAAI,cACJC,GAAK,WACLnI,EAAI,cACJoI,GAAK,YAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVqrB,IAAAA,GAAc,CACT,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACNC,GAAc,CACR,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAGTt8B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,0FAA0FO,MAAM,KAC9G4C,SAAW,8FAA8F5C,MAAM,KAC/G2C,cAAgB,mDAAmD3C,MAAM,KACzE0C,YAAc,sBAAsB1C,MAAM,KAC1CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,aACVC,QAAU,YACVC,SAAW,WACXC,QAAU,cACVC,SAAW,yBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,UACP/I,EAAI,oBACJgJ,GAAK,eACL7T,EAAI,cACJ8T,GAAK,gBACLC,EAAI,gBACJC,GAAK,eACLzD,EAAI,WACJ0D,GAAK,aACLC,EAAI,YACJC,GAAK,cACLnI,EAAI,aACJoI,GAAK,eAETX,uBAAwB,aACxB1L,QAAU,SAAUxE,GACTA,OAAAA,EAAS,OAEpBiY,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,gBAAiB,SAAUD,GACtC4xB,OAAAA,GAAY5xB,MAG3Bsb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,MAAO,SAAUD,GAC5B2xB,OAAAA,GAAY3xB,MAI3B8L,cAAe,wCACfxT,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,EACP,SACAA,EAAO,GACP,QACAA,EAAO,GACP,WACAA,EAAO,GACP,WACAA,EAAO,GACP,QAEA,UAGfE,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,UAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,UAAbva,GAAqC,SAAbA,EACxBua,EACa,YAAbva,GACAua,GAAQ,GAAKA,EAEbA,EAAO,IAGtBnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,mEAAmEO,MAAM,KACvFwlB,kBAAmB,EACnB5iB,SAAW,8DAA8D5C,MAAM,KAC/E2C,cAAgB,kCAAkC3C,MAAM,KACxD0C,YAAc,qBAAqB1C,MAAM,KACzCzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,sBACNC,KAAO,6BAEXZ,SAAW,CACPC,QAAU,YACVC,QAAU,YACVC,SAAW,WACXC,QAAU,aACVC,SAAW,gBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,QACTC,KAAO,YACP/I,EAAI,iBACJgJ,GAAK,aACL7T,EAAI,YACJ8T,GAAK,cACLC,EAAI,SACJC,GAAK,WACLzD,EAAI,UACJ0D,GAAK,YACLC,EAAI,SACJC,GAAK,WACLnI,EAAI,cACJoI,GAAK,iBAETX,uBAAyB,WACzB1L,QAAU,MACVsM,cAAe,iCACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,WAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,SAAbva,EACAua,EACa,cAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,aAAbva,EACAua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,SACAA,EAAO,GACP,OACAA,EAAO,GACP,YACAA,EAAO,GACP,WAEA,UAGfnM,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,MAAO,CACtBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,kDAAkD5C,MAAM,KACnE2C,cAAgB,iCAAiC3C,MAAM,KACvD0C,YAAc,yBAAyB1C,MAAM,KAC7CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAS,gBACTC,QAAS,gBACTC,SAAU,gBACVC,QAAS,oBACTC,SAAU,+BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EAAI,eACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,YACJ0D,GAAK,WACLC,EAAI,YACJC,GAAK,WACLnI,EAAI,YACJoI,GAAK,YAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVurB,IAAAA,GAAa,CACV,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACC,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,OAGTv8B,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yEAAyEM,MAAM,KACxFP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,mBACVC,QAAU,mBACVE,QAAU,mBACVD,SAAW,kCACXE,SAAW,oCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,SACP/I,EAAI,eACJ7K,EAAI,YACJ8T,GAAK,YACLC,EAAI,UACJC,GAAK,UACLzD,EAAI,SACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,SACLnI,EAAI,SACJoI,GAAK,UAETC,cAAe,qBACfiH,aAAc,SAAUF,EAAMva,GAItBA,OAHS,KAATua,IACAA,EAAO,GAEM,QAAbva,EACOua,EAAO,EAAIA,EAAOA,EAAO,GACZ,SAAbva,EACAua,EACa,QAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,UAAbva,EACAua,EAAO,QADX,GAIXva,SAAU,SAAUua,EAAMe,EAAQ+P,GAC1B9Q,OAAAA,EAAO,EACA,MACAA,EAAO,GACP,OACAA,EAAO,GACP,MACAA,EAAO,GACP,QAEA,OAGf3H,uBAAwB,kBACxB1L,QAAS,SAAUxE,GAGRA,OAAAA,GAAU62B,GAAW72B,IAAW62B,GAF/B72B,EAAS,KAEuC62B,GADhD72B,GAAU,IAAM,IAAM,QAGlC0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,oGAAoGM,MAAM,KACnHP,YAAc,iEAAiEO,MAAM,KACrFwlB,kBAAkB,EAClB5iB,SAAW,iDAAiD5C,MAAM,KAClE2C,cAAgB,8CAA8C3C,MAAM,KACpE0C,YAAc,yBAAyB1C,MAAM,KAC7CojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,OACLD,IAAM,UACNE,EAAI,aACJC,GAAK,cACLC,IAAM,wBACNC,KAAO,oCAEXa,cAAe,wBACfjC,KAAM,SAAUnU,GACLA,MAAU,eAAVA,GAEX4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,aAEA,cAGfxI,SAAW,CACPC,QAAU,mBACVC,QAAU,qBACVC,SAAW,qBACXC,QAAU,wBACVC,SAAW,6BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,YACP/I,EAAI,eACJgJ,GAAK,YACL7T,EAAI,SACJ8T,GAAK,UACLC,EAAI,YACJC,GAAK,aACLzD,EAAI,QACJ0D,GAAK,SACLC,EAAI,UACJC,GAAK,WACLnI,EAAI,OACJoI,GAAK,WAMbvW,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,wBAAwB1C,MAAM,KAC5CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,YACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,6BAEXZ,SAAW,CACPC,QAAS,oBACTC,QAAS,gBACTC,SAAU,0BACVC,QAAS,eACTC,SAAU,4BACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,gBACTC,KAAO,mBACP/I,EAAI,gBACJgJ,GAAK,aACL7T,EAAI,eACJ8T,GAAK,YACLC,EAAI,aACJC,GAAK,UACLzD,EAAI,aACJ0D,GAAK,UACLC,EAAI,cACJC,GAAK,WACLnI,EAAI,aACJoI,GAAK,WAETX,uBAAwB,UACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAEX0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVwrB,IAAAA,GAAe,iDAAiD/sB,MAAM,KA0BjEgtB,SAAAA,GAAY/2B,EAAQugB,EAAehL,EAAQ4Q,GAC5C6Q,IAAAA,EAiBCC,SAAaj3B,GACdk3B,IAAAA,EAAUj3B,KAAKE,MAAOH,EAAS,IAAQ,KAC3Cm3B,EAAMl3B,KAAKE,MAAOH,EAAS,IAAO,IAClCo3B,EAAMp3B,EAAS,GACfq3B,EAAO,GACHH,EAAU,IACVG,GAAQP,GAAaI,GAAW,SAEhCC,EAAM,IACNE,IAAmB,KAATA,EAAe,IAAM,IAAMP,GAAaK,GAAO,OAEzDC,EAAM,IACNC,IAAmB,KAATA,EAAe,IAAM,IAAMP,GAAaM,IAE9CC,MAAS,KAATA,EAAe,OAASA,EA/BfJ,CAAaj3B,GACtBuV,OAAAA,GACC,IAAA,KACMyhB,OAAAA,EAAa,OACnB,IAAA,KACMA,OAAAA,EAAa,OACnB,IAAA,KACMA,OAAAA,EAAa,OACnB,IAAA,KACMA,OAAAA,EAAa,OACnB,IAAA,KACMA,OAAAA,EAAa,OACnB,IAAA,KACMA,OAAAA,EAAa,QAqBhC18B,EAAMqX,aAAa,MAAO,CACtBlI,OAAS,kMAAkMM,MAAM,KACjNP,YAAc,0HAA0HO,MAAM,KAC9IwlB,kBAAmB,EACnB5iB,SAAW,2DAA2D5C,MAAM,KAC5E2C,cAAgB,2DAA2D3C,MAAM,KACjF0C,YAAc,2DAA2D1C,MAAM,KAC/EzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAS,cACTC,QAAS,cACTC,SAAU,MACVC,QAAS,cACTC,SAAU,MACVC,SAAU,KAEdQ,aAAe,CACXC,OAnFCknB,SAAgBnyB,GACjBua,IAAAA,EAAOva,EAQJua,OAPPA,GAAmC,IAA3Bva,EAAO0D,QAAQ,OACvB6W,EAAK/d,MAAM,GAAI,GAAK,OACQ,IAA3BwD,EAAO0D,QAAQ,OAChB6W,EAAK/d,MAAM,GAAI,GAAK,OACQ,IAA3BwD,EAAO0D,QAAQ,OAChB6W,EAAK/d,MAAM,GAAI,GAAK,MACpB+d,EAAO,QA4EHrP,KAxECknB,SAAcpyB,GACfua,IAAAA,EAAOva,EAQJua,OAPPA,GAAmC,IAA3Bva,EAAO0D,QAAQ,OACvB6W,EAAK/d,MAAM,GAAI,GAAK,OACQ,IAA3BwD,EAAO0D,QAAQ,OAChB6W,EAAK/d,MAAM,GAAI,GAAK,OACQ,IAA3BwD,EAAO0D,QAAQ,OAChB6W,EAAK/d,MAAM,GAAI,GAAK,MACpB+d,EAAO,QAiEHpY,EAAI,UACJgJ,GAAKymB,GACLt6B,EAAI,UACJ8T,GAAKwmB,GACLvmB,EAAI,UACJC,GAAKsmB,GACL/pB,EAAI,UACJ0D,GAAKqmB,GACLpmB,EAAI,UACJC,GAAKmmB,GACLtuB,EAAI,UACJoI,GAAKkmB,IAET7mB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAIVksB,IAAAA,GAAa,CACV,EAAA,QACA,EAAA,QACA,EAAA,QACC,GAAA,QACA,GAAA,QACD,EAAA,OACA,EAAA,OACC,GAAA,OACA,GAAA,OACD,EAAA,QACA,EAAA,QACE,IAAA,QACF,EAAA,OACA,EAAA,QACC,GAAA,QACA,GAAA,QACA,GAAA,QACA,GAAA,SA6HCC,SAAAA,GAAsBz3B,EAAQugB,EAAe7e,EAAKykB,GACnDhqB,IAAAA,EAAS,CACJ,EAAA,CAAC,kBAAmB,mBACnB,GAAA,CAAC6D,EAAS,WAAiBA,EAAS,YACrC,EAAA,CAAC,UAAY,cACZ,GAAA,CAACA,EAAS,SAAeA,EAAS,UACnC,EAAA,CAAC,UAAY,eACZ,GAAA,CAACA,EAAS,SAAeA,EAAS,UACnC,EAAA,CAAC,UAAY,eACZ,GAAA,CAACA,EAAS,SAAeA,EAAS,UACnC,EAAA,CAAC,SAAW,aACX,GAAA,CAACA,EAAS,SAAeA,EAAS,UACnC,EAAA,CAAC,QAAU,YACV,GAAA,CAACA,EAAS,OAAaA,EAAS,SAEnCmmB,OAAAA,EAAWhqB,EAAOuF,GAAK,GAAM6e,EAAgBpkB,EAAOuF,GAAK,GAAKvF,EAAOuF,GAAK,GAgN5Eg2B,SAAAA,GAAyB13B,EAAQugB,EAAe7e,GACjDvF,IALgBkyB,EAChBC,EAYA5sB,MAAQ,MAARA,EACO6e,EAAgB,UAAY,UAEtB,MAAR7e,EACE6e,EAAgB,SAAW,SAG3BvgB,EAAS,KApBAquB,GAoB6BruB,EAnB7CsuB,EAIS,CACH/N,GAAAA,EAAgB,yBAA2B,yBAC3CA,GAAAA,EAAgB,yBAA2B,yBAC3CA,GAAAA,EAAgB,sBAAwB,sBACxC,GAAA,gBACA,GAAA,wBACA,GAAA,kBASgC7e,GAnBzBqI,MAAM,KAChBskB,EAAM,IAAO,GAAKA,EAAM,KAAQ,GAAKC,EAAM,GAAMD,EAAM,IAAM,GAAKA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,KAAO,IAAMC,EAAM,GAAKA,EAAM,IA0C5IqJ,SAAAA,GAAqBlK,GACnB,OAAA,WACIA,OAAAA,EAAM,KAAwB,KAAjB,KAAKrf,QAAiB,IAAM,IAAM,QAnY9D9T,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,6EAA6EM,MAAM,KAC5FP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,wDAAwD5C,MAAM,KACzE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,kBACVC,QAAU,kBACVC,SAAW,2BACXC,QAAU,WACVC,SAAW,yBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,WACTC,KAAO,UACP/I,EAAI,gBACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,UACJoI,GAAK,UAETrM,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,KACMhd,OAAAA,EACX,QACQA,GAAW,IAAXA,EACOA,OAAAA,EAAS,QAEhBnE,IAAAA,EAAImE,EAAS,GAGVA,OAAAA,GAAUw3B,GAAW37B,IAAM27B,GAF1Bx3B,EAAS,IAAMnE,IAE4B27B,GAD3Cx3B,GAAU,IAAM,IAAM,SAI1C0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAQdhR,EAAMqX,aAAa,MAAO,CACtBlI,OAAS,sFAAsFM,MAAM,KACrGP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,sDAAsD5C,MAAM,KACvE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,wBACLC,IAAM,8BACNC,KAAO,0CAEXa,cAAe,aACfjC,KAAO,SAAUnU,GACN,MAAA,QAAWA,EAAMqI,eAE5BzF,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,MAAS,MAEnBA,EAAU,MAAS,OAGlCtZ,SAAW,CACPC,QAAU,cACVC,QAAU,cACVC,SAAW,cACXC,QAAU,eACVC,SAAW,8BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,YACTC,KAAO,OACP/I,EAAImwB,GACJnnB,GAAKmnB,GACLh7B,EAAIg7B,GACJlnB,GAAKknB,GACLjnB,EAAIinB,GACJhnB,GAAKgnB,GACLzqB,EAAIyqB,GACJ/mB,GAAK+mB,GACL9mB,EAAI8mB,GACJ7mB,GAAK6mB,GACLhvB,EAAIgvB,GACJ5mB,GAAK4mB,IAETvnB,uBAAwB,YACxB1L,QAAU,MACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAwBdhR,EAAMqX,aAAa,WAAY,CAC3BlI,OAAS,wFAAwFM,MAAM,KACvGP,YAAc,wFAAwFO,MAAM,KAC5G4C,SAAW,kDAAkD5C,MAAM,KACnE2C,cAAgB,kDAAkD3C,MAAM,KACxE0C,YAAc,kDAAkD1C,MAAM,KACtEzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,eACTC,QAAS,cACTC,SAAU,cACVC,QAAS,gBACTC,SAAU,cACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,iBACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,UACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,cACLzD,EAAI,MACJ0D,GAAK,WACLC,EAAI,QACJC,GAAK,YACLnI,EAAI,QACJoI,GAAK,aAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,MAMdhR,EAAMqX,aAAa,MAAO,CACtBlI,OAAS,kFAAkFM,MAAM,KACjGP,YAAc,kFAAkFO,MAAM,KACtG4C,SAAW,kDAAkD5C,MAAM,KACnE2C,cAAgB,kDAAkD3C,MAAM,KACxE0C,YAAc,kDAAkD1C,MAAM,KACtEzE,eAAiB,CACbuK,GAAK,QACLD,IAAK,WACLE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAEXZ,SAAW,CACPC,QAAS,cACTC,QAAS,cACTC,SAAU,cACVC,QAAS,eACTC,SAAU,cACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,gBACTC,KAAO,SACP/I,EAAI,OACJgJ,GAAK,UACL7T,EAAI,QACJ8T,GAAK,WACLC,EAAI,OACJC,GAAK,cACLzD,EAAI,MACJ0D,GAAK,WACLC,EAAI,QACJC,GAAK,YACLnI,EAAI,QACJoI,GAAK,aAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,MAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAQ,sFAAsFM,MAC1F,KAEJP,YAAa,sFAAsFO,MAC/F,KAEJ4C,SAAU,yDAAyD5C,MAC/D,KAEJ2C,cAAe,uBAAuB3C,MAAM,KAC5C0C,YAAa,uBAAuB1C,MAAM,KAC1CzE,eAAgB,CACZuK,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,0BACJC,IAAK,iCACLC,KAAM,wCAEVa,cAAe,qDACfiH,aAAc,SAAUF,EAAMva,GAKtBA,OAJS,KAATua,IACAA,EAAO,GAGM,eAAbva,GACa,UAAbA,GACa,iBAAbA,EAEOua,EACa,iBAAbva,GAA4C,QAAbA,EAC/Bua,EAAO,GAEPA,GAAQ,GAAKA,EAAOA,EAAO,IAG1Cva,SAAU,SAAUua,EAAMe,EAAQ+P,GAC1BrR,IAAAA,EAAY,IAAPO,EAAae,EAClBtB,OAAAA,EAAK,IACE,aACAA,EAAK,IACL,QACAA,EAAK,KACL,eACAA,EAAK,KACL,MACAA,EAAK,KACL,eAEA,OAGfjI,SAAU,CACNC,QAAS,mBACTC,QAAS,kBACTC,SAAU,4BACVC,QAAS,eACTC,SAAU,6BACVC,SAAU,KAEdQ,aAAc,CACVC,OAAQ,WACRC,KAAM,WACN/I,EAAG,eACHgJ,GAAI,YACJ7T,EAAG,YACH8T,GAAI,WACJC,EAAG,YACHC,GAAI,WACJzD,EAAG,UACH0D,GAAI,SACJC,EAAG,UACHC,GAAI,SACJnI,EAAG,UACHoI,GAAI,UAGRX,uBAAwB,6BACxB1L,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,QACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,SACpB,QACWA,OAAAA,IAGnBiY,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCyG,KAAM,CAEFL,IAAK,EACLC,IAAK,KAwDbhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,CACK,OAAA,yFAAyFM,MAAM,KAC3F,WAAA,iGAAiGA,MAAM,MAEzHP,YAAc,yDAAyDO,MAAM,KAC7E4C,SAjCKirB,SAAoBn7B,EAAGN,GACxBwQ,IAAAA,EAAW,CACG,WAAA,0DAA0D5C,MAAM,KAChE,WAAA,0DAA0DA,MAAM,KAClE,SAAA,4DAA4DA,MAAM,MAG9EtN,OAAM,IAANA,EACOkQ,EAAQ,WAAehL,MAAM,EAAG,GAAG6K,OAAOG,EAAQ,WAAehL,MAAM,EAAG,IAEhFlF,EASEkQ,EALS,qBAAsBnH,KAAKrJ,GACvC,aACE,sCAAuCqJ,KAAKrJ,GAC1C,WACA,cACkBM,EAAEmR,OARjBjB,EAAQ,YAuBnBD,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,iBACLC,IAAM,wBACNC,KAAO,+BAEXZ,SAAW,CACPC,QAASqoB,GAAqB,cAC9BpoB,QAASooB,GAAqB,YAC9BloB,QAASkoB,GAAqB,WAC9BnoB,SAAUmoB,GAAqB,cAC/BjoB,SAAU,WACE,OAAA,KAAK9B,OACJ,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACM+pB,OAAAA,GAAqB,oBAAoB58B,KAAK,MACpD,KAAA,EACA,KAAA,EACA,KAAA,EACM48B,OAAAA,GAAqB,qBAAqB58B,KAAK,QAGlE4U,SAAU,KAEdQ,aAAe,CACXC,OAAS,QACTC,KAAO,UACP/I,EAAI,kBACJgJ,GAAKonB,GACLj7B,EAAIi7B,GACJnnB,GAAKmnB,GACLlnB,EAAI,SACJC,GAAKinB,GACL1qB,EAAI,OACJ0D,GAAKgnB,GACL/mB,EAAI,SACJC,GAAK8mB,GACLjvB,EAAI,MACJoI,GAAK6mB,IAGT5mB,cAAe,wBACfjC,KAAM,SAAUnU,GACL,MAAA,iBAAiB8K,KAAK9K,IAEjC4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,EACA,OACAA,EAAO,GACP,QACAA,EAAO,GACP,MAEA,UAGf3H,uBAAwB,iBACxB1L,QAAS,SAAUxE,EAAQgd,GACfA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACMhd,OAAAA,EAAS,KACf,IAAA,IACMA,OAAAA,EAAS,MACpB,QACWA,OAAAA,IAGnB0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMVusB,IAAAA,GAAW,CACX,QACA,QACA,OACA,QACA,MACA,MACA,SACA,OACA,QACA,SACA,QACA,SAEAC,GAAS,CACT,QACA,MACA,OACA,MACA,SACA,OACA,QAgmBGx9B,OA7lBPA,EAAMqX,aAAa,KAAM,CACrBlI,OAASouB,GACTruB,YAAcquB,GACdlrB,SAAWmrB,GACXprB,cAAgBorB,GAChBrrB,YAAcqrB,GACdxyB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXa,cAAe,UACfjC,KAAO,SAAUnU,GACN,MAAA,QAAUA,GAErB4C,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3B9Q,OAAAA,EAAO,GACA,MAEJ,OAEXxI,SAAW,CACPC,QAAU,eACVC,QAAU,eACVC,SAAW,iBACXC,QAAU,sBACVC,SAAW,yBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,SACP/I,EAAI,YACJgJ,GAAK,WACL7T,EAAI,UACJ8T,GAAK,SACLC,EAAI,YACJC,GAAK,WACLzD,EAAI,SACJ0D,GAAK,QACLC,EAAI,UACJC,GAAK,SACLnI,EAAI,UACJoI,GAAK,UAEToH,SAAU,SAAU1C,GACTA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCqb,WAAY,SAAU/K,GACXA,OAAAA,EAAOtQ,QAAQ,KAAM,MAEhCyG,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,UAAW,CAC1BlI,OAAS,6EAA6EM,MAAM,KAC5FP,YAAc,oDAAoDO,MAAM,KACxE4C,SAAW,+DAA+D5C,MAAM,KAChF2C,cAAgB,kCAAkC3C,MAAM,KACxD0C,YAAc,yBAAyB1C,MAAM,KAC7CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,uBACVC,QAAU,mBACVC,SAAW,2BACXC,QAAU,uBACVC,SAAW,oCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,kBACTC,KAAO,qBACP/I,EAAI,SACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,UACJoI,GAAK,UAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,yEAAyEM,MAAM,KACxFP,YAAc,kDAAkDO,MAAM,KACtE4C,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,8BAA8B3C,MAAM,KACpD0C,YAAc,uBAAuB1C,MAAM,KAC3CzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,uBACVC,QAAU,mBACVC,SAAW,2BACXC,QAAU,sBACVC,SAAW,mCACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,gBACTC,KAAO,oBACP/I,EAAI,SACJgJ,GAAK,YACL7T,EAAI,aACJ8T,GAAK,YACLC,EAAI,WACJC,GAAK,UACLzD,EAAI,UACJ0D,GAAK,SACLC,EAAI,SACJC,GAAK,QACLnI,EAAI,UACJoI,GAAK,UAETnF,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,qGAAqGM,MAAM,KACpHP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAW,yDAAyD5C,MAAM,KAC1E2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,uBAAuB1C,MAAM,KAC3CojB,oBAAqB,EACrBrc,cAAe,SACfjC,KAAO,SAAUnU,GACN,MAAA,QAAQ8K,KAAK9K,IAExB4C,SAAW,SAAU8Q,EAAOE,EAASqa,GAC7Bva,OAAAA,EAAQ,GACDua,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAGhCrjB,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,oBACLC,IAAM,0BACNC,KAAO,gCACPiF,EAAI,YACJsa,GAAK,aACLC,IAAM,mBACNC,KAAO,yBAEXrgB,SAAW,CACPC,QAAS,mBACTC,QAAS,oBACTC,SAAU,yBACVC,QAAS,mBACTC,SAAU,yBACVC,SAAU,KAEdQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EAAI,WACJgJ,GAAK,UACL7T,EAAI,WACJ8T,GAAK,UACLC,EAAI,UACJC,GAAK,SACLzD,EAAI,WACJ0D,GAAK,UACLC,EAAI,YACJC,GAAK,WACLnI,EAAI,UACJoI,GAAK,UAETX,uBAAwB,UACxB1L,QAAU,SAAUxE,GACTA,OAAAA,GAEX0L,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,WAAY,CAC3BlI,OAAS,6GAA6GM,MAAM,KAC5HP,YAAc,8DAA8DO,MAAM,KAClFwlB,kBAAmB,EACnB5iB,SAAW,yEAAyE5C,MAAM,KAC1F2C,cAAgB,qCAAqC3C,MAAM,KAC3D0C,YAAc,4BAA4B1C,MAAM,KAChDojB,oBAAqB,EACrB7nB,eAAiB,CACbuK,GAAK,QACLC,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAEXZ,SAAW,CACPC,QAAU,kBACVC,QAAU,sBACVC,SAAW,eACXC,QAAU,uBACVC,SAAW,uBACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,UACP/I,EAAI,mBACJgJ,GAAK,eACL7T,EAAI,aACJ8T,GAAK,eACLC,EAAI,YACJC,GAAK,YACLzD,EAAI,SACJ0D,GAAK,WACLC,EAAI,YACJC,GAAK,cACLnI,EAAI,UACJoI,GAAK,aAETX,uBAAwB,uBACxB1L,QAAU,SAAUxE,GACZlE,IAAAA,EAAIkE,EAAS,GAKVA,OAAAA,GAJiC,MAAvBA,EAAS,IAAM,IAAa,KAClC,IAANlE,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,OAG3B4P,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,KAAM,CACrBlI,OAAS,0FAA0FM,MAAM,KACzGP,YAAc,gEAAgEO,MAAM,KACpF4C,SAAW,uDAAuD5C,MAAM,KACxE2C,cAAgB,sCAAsC3C,MAAM,KAC5D0C,YAAc,2BAA2B1C,MAAM,KAC/CzE,eAAiB,CACbuK,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXZ,SAAW,CACPC,QAAU,gBACVC,QAAU,eACVC,SAAW,8BACXC,QAAU,eACVC,SAAW,6BACXC,SAAW,KAEfQ,aAAe,CACXC,OAAS,SACTC,KAAO,WACP/I,EAAI,oBACJgJ,GAAI,WACJ7T,EAAI,cACJ8T,GAAK,aACLC,EAAI,cACJC,GAAK,aACLzD,EAAI,WACJ0D,GAAK,UACLC,EAAI,WACJC,GAAK,UACLnI,EAAI,YACJoI,GAAK,YAETX,uBAAyB,gBACzB1L,QAAU,UACVkH,KAAO,CACHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wCAAwCM,MAAM,KACvDP,YAAc,yCAAyCO,MAAM,KAC7D4C,SAAW,8BAA8B5C,MAAM,KAC/C2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,YACLC,IAAM,kBACNC,KAAO,sBACPiF,EAAI,WACJsa,GAAK,YACLC,IAAM,kBACNC,KAAO,uBAEX5e,cAAe,oBACfiH,aAAc,SAAUF,EAAMva,GAItBA,OAHS,KAATua,IACAA,EAAO,GAEM,OAAbva,GAAkC,OAAbA,GACJ,OAAbA,EACGua,EACa,OAAbva,GAAkC,OAAbA,EACrBua,EAAO,GAGPA,GAAQ,GAAKA,EAAOA,EAAO,IAG1Cva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3BrR,IAAAA,EAAY,IAAPO,EAAae,EAClBtB,OAAAA,EAAK,IACE,KACAA,EAAK,IACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KAEA,MAGfjI,SAAW,CACPC,QAAU,SACVC,QAAU,SACVC,SAAW,YACXC,QAAU,SACVC,SAAW,YACXC,SAAW,KAEfO,uBAAwB,iBACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,IACf,IAAA,IACMA,OAAAA,EAAS,IACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,IACpB,QACWA,OAAAA,IAGnBmQ,aAAe,CACXC,OAAS,MACTC,KAAO,MACP/I,EAAI,KACJgJ,GAAK,OACL7T,EAAI,OACJ8T,GAAK,QACLC,EAAI,OACJC,GAAK,QACLzD,EAAI,MACJ0D,GAAK,OACLC,EAAI,OACJC,GAAK,QACLnI,EAAI,MACJoI,GAAK,QAETnF,KAAO,CAEHL,IAAM,EACNC,IAAM,KAMdhR,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wCAAwCM,MAAM,KACvDP,YAAc,yCAAyCO,MAAM,KAC7D4C,SAAW,8BAA8B5C,MAAM,KAC/C2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,YACLC,IAAM,kBACNC,KAAO,sBACPiF,EAAI,WACJsa,GAAK,YACLC,IAAM,kBACNC,KAAO,uBAEX5e,cAAe,oBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,OAAbva,GAAkC,OAAbA,GAAkC,OAAbA,EACnCua,EACa,OAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,OAAbva,GAAkC,OAAbA,EACrBua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3BrR,IAAAA,EAAY,IAAPO,EAAae,EAClBtB,OAAAA,EAAK,IACE,KACAA,EAAK,IACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KAEA,MAGfjI,SAAW,CACPC,QAAU,SACVC,QAAU,SACVC,SAAW,YACXC,QAAU,SACVC,SAAW,YACXC,SAAW,KAEfO,uBAAwB,iBACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,IACf,IAAA,IACMA,OAAAA,EAAS,IACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,IACpB,QACWA,OAAAA,IAGnBmQ,aAAe,CACXC,OAAS,MACTC,KAAO,MACP/I,EAAI,KACJgJ,GAAK,OACL7T,EAAI,OACJ8T,GAAK,QACLC,EAAI,OACJC,GAAK,QACLzD,EAAI,MACJ0D,GAAK,OACLC,EAAI,OACJC,GAAK,QACLnI,EAAI,MACJoI,GAAK,UAMbvW,EAAMqX,aAAa,QAAS,CACxBlI,OAAS,wCAAwCM,MAAM,KACvDP,YAAc,yCAAyCO,MAAM,KAC7D4C,SAAW,8BAA8B5C,MAAM,KAC/C2C,cAAgB,uBAAuB3C,MAAM,KAC7C0C,YAAc,gBAAgB1C,MAAM,KACpCzE,eAAiB,CACbuK,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,YACLC,IAAM,kBACNC,KAAO,sBACPiF,EAAI,WACJsa,GAAK,YACLC,IAAM,kBACNC,KAAO,uBAEX5e,cAAe,oBACfiH,aAAe,SAAUF,EAAMva,GAIvBA,OAHS,KAATua,IACAA,EAAO,GAEM,OAAbva,GAAkC,OAAbA,GAAkC,OAAbA,EACnCua,EACa,OAAbva,EACAua,GAAQ,GAAKA,EAAOA,EAAO,GACd,OAAbva,GAAkC,OAAbA,EACrBua,EAAO,QADX,GAIXva,SAAW,SAAUua,EAAMe,EAAQ+P,GAC3BrR,IAAAA,EAAY,IAAPO,EAAae,EAClBtB,OAAAA,EAAK,IACE,KACAA,EAAK,IACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KACAA,EAAK,KACL,KAEA,MAGfjI,SAAW,CACPC,QAAU,UACVC,QAAU,UACVC,SAAW,aACXC,QAAU,UACVC,SAAW,aACXC,SAAW,KAEfO,uBAAwB,iBACxB1L,QAAU,SAAUxE,EAAQgd,GAChBA,OAAAA,GACC,IAAA,IACA,IAAA,IACA,IAAA,MACMhd,OAAAA,EAAS,IACf,IAAA,IACMA,OAAAA,EAAS,IACf,IAAA,IACA,IAAA,IACMA,OAAAA,EAAS,IACpB,QACWA,OAAAA,IAGnBmQ,aAAe,CACXC,OAAS,MACTC,KAAO,MACP/I,EAAI,KACJgJ,GAAK,OACL7T,EAAI,OACJ8T,GAAK,QACLC,EAAI,OACJC,GAAK,QACLzD,EAAI,MACJ0D,GAAK,OACLC,EAAI,OACJC,GAAK,QACLnI,EAAI,MACJoI,GAAK,UAIbvW,EAAM8B,OAAO,MAEN9B","file":"moment.b8f6d161.js","sourceRoot":"../src","sourcesContent":[";(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n    //! moment.js\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM : function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            ss : '%d sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-dz', {\n        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-kw', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '0': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months$1 = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    hooks.defineLocale('ar-ly', {\n        months : months$1,\n        monthsShort : months$1,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$1 = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    hooks.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$1[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss : '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$2 = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap$1 = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm$1 = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals$1 = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize$1 = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm$1(number),\n                str = plurals$1[u][pluralForm$1(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months$2 = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    hooks.defineLocale('ar', {\n        months : months$2,\n        monthsShort : months$2,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize$1('s'),\n            ss : pluralize$1('s'),\n            m : pluralize$1('m'),\n            mm : pluralize$1('m'),\n            h : pluralize$1('h'),\n            hh : pluralize$1('h'),\n            d : pluralize$1('d'),\n            dd : pluralize$1('d'),\n            M : pluralize$1('M'),\n            MM : pluralize$1('M'),\n            y : pluralize$1('y'),\n            yy : pluralize$1('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap$1[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$2[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n\n    hooks.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyə',\n            ss : '%d saniyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM : function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    hooks.defineLocale('be', {\n        months : {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n        },\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM : function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[В изминалата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bm', {\n        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'MMMM [tile] D [san] YYYY',\n            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bi lɛrɛ] LT',\n            nextDay : '[Sini lɛrɛ] LT',\n            nextWeek : 'dddd [don lɛrɛ] LT',\n            lastDay : '[Kunu lɛrɛ] LT',\n            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s kɔnɔ',\n            past : 'a bɛ %s bɔ',\n            s : 'sanga dama dama',\n            ss : 'sekondi %d',\n            m : 'miniti kelen',\n            mm : 'miniti %d',\n            h : 'lɛrɛ kelen',\n            hh : 'lɛrɛ %d',\n            d : 'tile kelen',\n            dd : 'tile %d',\n            M : 'kalo kelen',\n            MM : 'kalo %d',\n            y : 'san kelen',\n            yy : 'san %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$3 = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap$2 = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    hooks.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm সময়',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কয়েক সেকেন্ড',\n            ss : '%d সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$2[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$3[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'রাত' && hour >= 4) ||\n                    (meridiem === 'দুপুর' && hour < 5) ||\n                    meridiem === 'বিকাল') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$4 = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap$3 = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    hooks.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            ss : '%d སྐར་ཆ།',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap$3[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$4[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                    (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                    meridiem === 'དགོང་དག') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    hooks.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            ss : '%d eilenn',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ca', {\n        months : {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n            format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n            isFormat: /D[oD]?(\\s)+MMMM/\n        },\n        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [de] YYYY',\n            ll : 'D MMM YYYY',\n            LLL : 'D MMMM [de] YYYY [a les] H:mm',\n            lll : 'D MMM YYYY, H:mm',\n            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll : 'ddd D MMM YYYY, H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'd\\'aquí %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            ss : '%d segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$3 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    var monthsRegex$1 = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural$1(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n    function translate$1(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n                break;\n        }\n    }\n\n    hooks.defineLocale('cs', {\n        months : months$3,\n        monthsShort : monthsShort,\n        monthsRegex : monthsRegex$1,\n        monthsShortRegex : monthsRegex$1,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm',\n            l : 'D. M. YYYY'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate$1,\n            ss : translate$1,\n            m : translate$1,\n            mm : translate$1,\n            h : translate$1,\n            hh : translate$1,\n            d : translate$1,\n            dd : translate$1,\n            M : translate$1,\n            MM : translate$1,\n            y : translate$1,\n            yy : translate$1\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cv', {\n        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пӗр-ик ҫеккунт',\n            ss : '%d ҫеккунт',\n            m : 'пӗр минут',\n            mm : '%d минут',\n            h : 'пӗр сехет',\n            hh : '%d сехет',\n            d : 'пӗр кун',\n            dd : '%d кун',\n            M : 'пӗр уйӑх',\n            MM : '%d уйӑх',\n            y : 'пӗр ҫул',\n            yy : '%d ҫул'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal : '%d-мӗш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay : '[i dag kl.] LT',\n            nextDay : '[i morgen kl.] LT',\n            nextWeek : 'på dddd [kl.] LT',\n            lastDay : '[i går kl.] LT',\n            lastWeek : '[i] dddd[s kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            ss : '%d sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$1(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-ch', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime$1,\n            mm : '%d Minuten',\n            h : processRelativeTime$1,\n            hh : '%d Stunden',\n            d : processRelativeTime$1,\n            dd : processRelativeTime$1,\n            M : processRelativeTime$1,\n            MM : processRelativeTime$1,\n            y : processRelativeTime$1,\n            yy : processRelativeTime$1\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime$2,\n            mm : '%d Minuten',\n            h : processRelativeTime$2,\n            hh : '%d Stunden',\n            d : processRelativeTime$2,\n            dd : processRelativeTime$2,\n            M : processRelativeTime$2,\n            MM : processRelativeTime$2,\n            y : processRelativeTime$2,\n            yy : processRelativeTime$2\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$4 = [\n        'ޖެނުއަރީ',\n        'ފެބްރުއަރީ',\n        'މާރިޗު',\n        'އޭޕްރީލު',\n        'މޭ',\n        'ޖޫން',\n        'ޖުލައި',\n        'އޯގަސްޓު',\n        'ސެޕްޓެމްބަރު',\n        'އޮކްޓޯބަރު',\n        'ނޮވެމްބަރު',\n        'ޑިސެމްބަރު'\n    ], weekdays = [\n        'އާދިއްތަ',\n        'ހޯމަ',\n        'އަންގާރަ',\n        'ބުދަ',\n        'ބުރާސްފަތި',\n        'ހުކުރު',\n        'ހޮނިހިރު'\n    ];\n\n    hooks.defineLocale('dv', {\n        months : months$4,\n        monthsShort : months$4,\n        weekdays : weekdays,\n        weekdaysShort : weekdays,\n        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat : {\n\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/M/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM : function (input) {\n            return 'މފ' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar : {\n            sameDay : '[މިއަދު] LT',\n            nextDay : '[މާދަމާ] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[އިއްޔެ] LT',\n            lastWeek : '[ފާއިތުވި] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ތެރޭގައި %s',\n            past : 'ކުރިން %s',\n            s : 'ސިކުންތުކޮޅެއް',\n            ss : 'd% ސިކުންތު',\n            m : 'މިނިޓެއް',\n            mm : 'މިނިޓު %d',\n            h : 'ގަޑިއިރެއް',\n            hh : 'ގަޑިއިރު %d',\n            d : 'ދުވަހެއް',\n            dd : 'ދުވަސް %d',\n            M : 'މަހެއް',\n            MM : 'މަސް %d',\n            y : 'އަހަރެއް',\n            yy : 'އަހަރު %d'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 7,  // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-SG', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY h:mm A',\n            LLLL : 'dddd, MMMM D, YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ie', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-il', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-nz', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-a de] MMMM, YYYY',\n            LLL : 'D[-a de] MMMM, YYYY HH:mm',\n            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'post %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            ss : '%d sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort$1 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-do', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$1[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$2,\n        monthsShortRegex: monthsRegex$2,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$1,\n        longMonthsParse: monthsParse$1,\n        shortMonthsParse: monthsParse$1,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-us', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$2[m.month()];\n            } else {\n                return monthsShortDot$1[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$3,\n        monthsShortRegex: monthsRegex$3,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$2,\n        longMonthsParse: monthsParse$2,\n        shortMonthsParse: monthsParse$2,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'MM/DD/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse$3 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$3[m.month()];\n            } else {\n                return monthsShortDot$2[m.month()];\n            }\n        },\n        monthsRegex : monthsRegex$4,\n        monthsShortRegex : monthsRegex$4,\n        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse : monthsParse$3,\n        longMonthsParse : monthsParse$3,\n        shortMonthsParse : monthsParse$3,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$3(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'ss': [number + 'sekundi', number + 'sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'H:mm:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime$3,\n            ss     : processRelativeTime$3,\n            m      : processRelativeTime$3,\n            mm     : processRelativeTime$3,\n            h      : processRelativeTime$3,\n            hh     : processRelativeTime$3,\n            d      : processRelativeTime$3,\n            dd     : '%d päeva',\n            M      : processRelativeTime$3,\n            MM     : processRelativeTime$3,\n            y      : processRelativeTime$3,\n            yy     : processRelativeTime$3\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] HH:mm',\n            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            ss : '%d segundo',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$5 = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap$4 = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    hooks.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چند ثانیه',\n            ss : 'ثانیه d%',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap$4[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$5[match];\n            }).replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n    function translate$2(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                return isFuture ? 'sekunnin' : 'sekuntia';\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    hooks.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] HH.mm',\n            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate$2,\n            ss : translate$2,\n            m : translate$2,\n            mm : translate$2,\n            h : translate$2,\n            hh : translate$2,\n            d : translate$2,\n            dd : translate$2,\n            M : translate$2,\n            MM : translate$2,\n            y : translate$2,\n            yy : translate$2\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D. MMMM, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            ss : '%d sekundir',\n            m : 'ein minuttur',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaður',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ch', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    hooks.defineLocale('fy', {\n        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'oer %s',\n            past : '%s lyn',\n            s : 'in pear sekonden',\n            ss : '%d sekonden',\n            m : 'ien minút',\n            mm : '%d minuten',\n            h : 'ien oere',\n            hh : '%d oeren',\n            d : 'ien dei',\n            dd : '%d dagen',\n            M : 'ien moanne',\n            MM : '%d moannen',\n            y : 'ien jier',\n            yy : '%d jierren'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n\n    var months$5 = [\n        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'\n    ];\n\n    var monthsShort$4 = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];\n\n    var weekdays$1 = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];\n\n    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];\n\n    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];\n\n    hooks.defineLocale('ga', {\n        months: months$5,\n        monthsShort: monthsShort$4,\n        monthsParseExact: true,\n        weekdays: weekdays$1,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné aig] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d mí',\n            y: 'bliain',\n            yy: '%d bliain'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$6 = [\n        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n    ];\n\n    var monthsShort$5 = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\n    var weekdays$2 = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\n    var weekdaysShort$1 = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\n    var weekdaysMin$1 = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    hooks.defineLocale('gd', {\n        months : months$6,\n        monthsShort : monthsShort$5,\n        monthsParseExact : true,\n        weekdays : weekdays$2,\n        weekdaysShort : weekdaysShort$1,\n        weekdaysMin : weekdaysMin$1,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[An-diugh aig] LT',\n            nextDay : '[A-màireach aig] LT',\n            nextWeek : 'dddd [aig] LT',\n            lastDay : '[An-dè aig] LT',\n            lastWeek : 'dddd [seo chaidh] [aig] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ann an %s',\n            past : 'bho chionn %s',\n            s : 'beagan diogan',\n            ss : '%d diogan',\n            m : 'mionaid',\n            mm : '%d mionaidean',\n            h : 'uair',\n            hh : '%d uairean',\n            d : 'latha',\n            dd : '%d latha',\n            M : 'mìos',\n            MM : '%d mìosan',\n            y : 'bliadhna',\n            yy : '%d bliadhna'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n        ordinal : function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('gl', {\n        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$4(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['thodde secondanim', 'thodde second'],\n            'ss': [number + ' secondanim', number + ' second'],\n            'm': ['eka mintan', 'ek minute'],\n            'mm': [number + ' mintanim', number + ' mintam'],\n            'h': ['eka voran', 'ek vor'],\n            'hh': [number + ' voranim', number + ' voram'],\n            'd': ['eka disan', 'ek dis'],\n            'dd': [number + ' disanim', number + ' dis'],\n            'M': ['eka mhoinean', 'ek mhoino'],\n            'MM': [number + ' mhoineanim', number + ' mhoine'],\n            'y': ['eka vorsan', 'ek voros'],\n            'yy': [number + ' vorsanim', number + ' vorsam']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-latn', {\n        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'A h:mm [vazta]',\n            LTS : 'A h:mm:ss [vazta]',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY A h:mm [vazta]',\n            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n        },\n        calendar : {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Ieta to] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fatlo] dddd[,] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s',\n            past : '%s adim',\n            s : processRelativeTime$4,\n            ss : processRelativeTime$4,\n            m : processRelativeTime$4,\n            mm : processRelativeTime$4,\n            h : processRelativeTime$4,\n            hh : processRelativeTime$4,\n            d : processRelativeTime$4,\n            dd : processRelativeTime$4,\n            M : processRelativeTime$4,\n            MM : processRelativeTime$4,\n            y : processRelativeTime$4,\n            yy : processRelativeTime$4\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /rati|sokalli|donparam|sanje/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokalli') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokalli';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$6 = {\n            '1': '૧',\n            '2': '૨',\n            '3': '૩',\n            '4': '૪',\n            '5': '૫',\n            '6': '૬',\n            '7': '૭',\n            '8': '૮',\n            '9': '૯',\n            '0': '૦'\n        },\n        numberMap$5 = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0'\n        };\n\n    hooks.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પેહલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ'\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap$5[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$6[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6 // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY HH:mm',\n            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            ss : '%d שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            }\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM : function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$7 = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap$6 = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    hooks.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            ss : '%d सेकंड',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$6[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$7[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function translate$3(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('hr', {\n        months : {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n        },\n        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate$3,\n            m      : translate$3,\n            mm     : translate$3,\n            h      : translate$3,\n            hh     : translate$3,\n            d      : 'dan',\n            dd     : translate$3,\n            M      : 'mjesec',\n            MM     : translate$3,\n            y      : 'godinu',\n            yy     : translate$3\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate$4(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    hooks.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D. H:mm',\n            LLLL : 'YYYY. MMMM D., dddd H:mm'\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate$4,\n            ss : translate$4,\n            m : translate$4,\n            mm : translate$4,\n            h : translate$4,\n            hh : translate$4,\n            d : translate$4,\n            dd : translate$4,\n            M : translate$4,\n            MM : translate$4,\n            y : translate$4,\n            yy : translate$4\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('hy-am', {\n        months : {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n        },\n        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            ss : '%d վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            ss : '%d detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function plural$2(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate$5(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    hooks.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate$5,\n            ss : translate$5,\n            m : translate$5,\n            mm : translate$5,\n            h : 'klukkustund',\n            hh : translate$5,\n            d : translate$5,\n            dd : translate$5,\n            M : translate$5,\n            MM : translate$5,\n            y : translate$5,\n            yy : translate$5\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it-ch', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ja', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日 dddd HH:mm',\n            l : 'YYYY/MM/DD',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日(ddd) HH:mm'\n        },\n        meridiemParse: /午前|午後/i,\n        isPM : function (input) {\n            return input === '午後';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : function (now) {\n                if (now.week() < this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay : '[昨日] LT',\n            lastWeek : function (now) {\n                if (this.week() < now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}日/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            ss : '%d秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('jv', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar : {\n            sameDay : '[Dinten puniko pukul] LT',\n            nextDay : '[Mbenjang pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kala wingi pukul] LT',\n            lastWeek : 'dddd [kepengker pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'wonten ing %s',\n            past : '%s ingkang kepengker',\n            s : 'sawetawis detik',\n            ss : '%d detik',\n            m : 'setunggal menit',\n            mm : '%d menit',\n            h : 'setunggal jam',\n            hh : '%d jam',\n            d : 'sedinten',\n            dd : '%d dinten',\n            M : 'sewulan',\n            MM : '%d wulan',\n            y : 'setaun',\n            yy : '%d taun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ka', {\n        months : {\n            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n            isFormat: /(წინა|შემდეგ)/\n        },\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            ss : '%d წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$1 = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші'\n    };\n\n    hooks.defineLocale('kk', {\n        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгін сағат] LT',\n            nextDay : '[Ертең сағат] LT',\n            nextWeek : 'dddd [сағат] LT',\n            lastDay : '[Кеше сағат] LT',\n            lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ішінде',\n            past : '%s бұрын',\n            s : 'бірнеше секунд',\n            ss : '%d секунд',\n            m : 'бір минут',\n            mm : '%d минут',\n            h : 'бір сағат',\n            hh : '%d сағат',\n            d : 'бір күн',\n            dd : '%d күн',\n            M : 'бір ай',\n            MM : '%d ай',\n            y : 'бір жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$1[number] || suffixes$1[a] || suffixes$1[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$8 = {\n        '1': '១',\n        '2': '២',\n        '3': '៣',\n        '4': '៤',\n        '5': '៥',\n        '6': '៦',\n        '7': '៧',\n        '8': '៨',\n        '9': '៩',\n        '0': '០'\n    }, numberMap$7 = {\n        '១': '1',\n        '២': '2',\n        '៣': '3',\n        '៤': '4',\n        '៥': '5',\n        '៦': '6',\n        '៧': '7',\n        '៨': '8',\n        '៩': '9',\n        '០': '0'\n    };\n\n    hooks.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        dayOfMonthOrdinalParse : /ទី\\d{1,2}/,\n        ordinal : 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap$7[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$8[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$9 = {\n        '1': '೧',\n        '2': '೨',\n        '3': '೩',\n        '4': '೪',\n        '5': '೫',\n        '6': '೬',\n        '7': '೭',\n        '8': '೮',\n        '9': '೯',\n        '0': '೦'\n    },\n    numberMap$8 = {\n        '೧': '1',\n        '೨': '2',\n        '೩': '3',\n        '೪': '4',\n        '೫': '5',\n        '೬': '6',\n        '೭': '7',\n        '೮': '8',\n        '೯': '9',\n        '೦': '0'\n    };\n\n    hooks.defineLocale('kn', {\n        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[ಇಂದು] LT',\n            nextDay : '[ನಾಳೆ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ನಿನ್ನೆ] LT',\n            lastWeek : '[ಕೊನೆಯ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ನಂತರ',\n            past : '%s ಹಿಂದೆ',\n            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss : '%d ಸೆಕೆಂಡುಗಳು',\n            m : 'ಒಂದು ನಿಮಿಷ',\n            mm : '%d ನಿಮಿಷ',\n            h : 'ಒಂದು ಗಂಟೆ',\n            hh : '%d ಗಂಟೆ',\n            d : 'ಒಂದು ದಿನ',\n            dd : '%d ದಿನ',\n            M : 'ಒಂದು ತಿಂಗಳು',\n            MM : '%d ತಿಂಗಳು',\n            y : 'ಒಂದು ವರ್ಷ',\n            yy : '%d ವರ್ಷ'\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap$8[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$9[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal : function (number) {\n            return number + 'ನೇ';\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 A h:mm',\n            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n            l : 'YYYY.MM.DD.',\n            ll : 'YYYY년 MMMM D일',\n            lll : 'YYYY년 MMMM D일 A h:mm',\n            llll : 'YYYY년 MMMM D일 dddd A h:mm'\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇 초',\n            ss : '%d초',\n            m : '1분',\n            mm : '%d분',\n            h : '한 시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한 달',\n            MM : '%d달',\n            y : '일 년',\n            yy : '%d년'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse : /오전|오후/,\n        isPM : function (token) {\n            return token === '오후';\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$a = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap$9 = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    },\n    months$7 = [\n        'کانونی دووەم',\n        'شوبات',\n        'ئازار',\n        'نیسان',\n        'ئایار',\n        'حوزەیران',\n        'تەمموز',\n        'ئاب',\n        'ئەیلوول',\n        'تشرینی یەكەم',\n        'تشرینی دووەم',\n        'كانونی یەکەم'\n    ];\n\n\n    hooks.defineLocale('ku', {\n        months : months$7,\n        monthsShort : months$7,\n        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar : {\n            sameDay : '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay : '[به‌یانی كاتژمێر] LT',\n            nextWeek : 'dddd [كاتژمێر] LT',\n            lastDay : '[دوێنێ كاتژمێر] LT',\n            lastWeek : 'dddd [كاتژمێر] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'له‌ %s',\n            past : '%s',\n            s : 'چه‌ند چركه‌یه‌ك',\n            ss : 'چركه‌ %d',\n            m : 'یه‌ك خوله‌ك',\n            mm : '%d خوله‌ك',\n            h : 'یه‌ك كاتژمێر',\n            hh : '%d كاتژمێر',\n            d : 'یه‌ك ڕۆژ',\n            dd : '%d ڕۆژ',\n            M : 'یه‌ك مانگ',\n            MM : '%d مانگ',\n            y : 'یه‌ك ساڵ',\n            yy : '%d ساڵ'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap$9[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$a[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$2 = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү'\n    };\n\n    hooks.defineLocale('ky', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгүн саат] LT',\n            nextDay : '[Эртең саат] LT',\n            nextWeek : 'dddd [саат] LT',\n            lastDay : '[Кечээ саат] LT',\n            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ичинде',\n            past : '%s мурун',\n            s : 'бирнече секунд',\n            ss : '%d секунд',\n            m : 'бир мүнөт',\n            mm : '%d мүнөт',\n            h : 'бир саат',\n            hh : '%d саат',\n            d : 'бир күн',\n            dd : '%d күн',\n            M : 'бир ай',\n            MM : '%d ай',\n            y : 'бир жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$2[number] || suffixes$2[a] || suffixes$2[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$5(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    hooks.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            ss : '%d Sekonnen',\n            m : processRelativeTime$5,\n            mm : '%d Minutten',\n            h : processRelativeTime$5,\n            hh : '%d Stonnen',\n            d : processRelativeTime$5,\n            dd : '%d Deeg',\n            M : processRelativeTime$5,\n            MM : '%d Méint',\n            y : processRelativeTime$5,\n            yy : '%d Joer'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('lo', {\n        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar : {\n            sameDay : '[ມື້ນີ້ເວລາ] LT',\n            nextDay : '[ມື້ອື່ນເວລາ] LT',\n            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ອີກ %s',\n            past : '%sຜ່ານມາ',\n            s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss : '%d ວິນາທີ' ,\n            m : '1 ນາທີ',\n            mm : '%d ນາທີ',\n            h : '1 ຊົ່ວໂມງ',\n            hh : '%d ຊົ່ວໂມງ',\n            d : '1 ມື້',\n            dd : '%d ມື້',\n            M : '1 ເດືອນ',\n            MM : '%d ເດືອນ',\n            y : '1 ປີ',\n            yy : '%d ປີ'\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal : function (number) {\n            return 'ທີ່' + number;\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var units = {\n        'ss' : 'sekundė_sekundžių_sekundes',\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate$6(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    hooks.defineLocale('lt', {\n        months : {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n        },\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n            isFormat: /dddd HH:mm/\n        },\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            ss : translate$6,\n            m : translateSingular,\n            mm : translate$6,\n            h : translateSingular,\n            hh : translate$6,\n            d : translateSingular,\n            dd : translate$6,\n            M : translateSingular,\n            MM : translate$6,\n            y : translateSingular,\n            yy : translate$6\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var units$1 = {\n        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'h': 'stundas_stundām_stunda_stundas'.split('_'),\n        'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n        'd': 'dienas_dienām_diena_dienas'.split('_'),\n        'dd': 'dienas_dienām_diena_dienas'.split('_'),\n        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'y': 'gada_gadiem_gads_gadi'.split('_'),\n        'yy': 'gada_gadiem_gads_gadi'.split('_')\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format$1(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural$1(number, withoutSuffix, key) {\n        return number + ' ' + format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    hooks.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY.',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'pēc %s',\n            past : 'pirms %s',\n            s : relativeSeconds,\n            ss : relativeTimeWithPlural$1,\n            m : relativeTimeWithSingular,\n            mm : relativeTimeWithPlural$1,\n            h : relativeTimeWithSingular,\n            hh : relativeTimeWithPlural$1,\n            d : relativeTimeWithSingular,\n            dd : relativeTimeWithPlural$1,\n            M : relativeTimeWithSingular,\n            MM : relativeTimeWithPlural$1,\n            y : relativeTimeWithSingular,\n            yy : relativeTimeWithPlural$1\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    hooks.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mjesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : '[Во] dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm -നു',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            ss : '%d സെക്കൻഡ്',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                    meridiem === 'വൈകുന്നേരം') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function translate$7(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    hooks.defineLocale('mn', {\n        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY оны MMMMын D',\n            LLL : 'YYYY оны MMMMын D HH:mm',\n            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM : function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar : {\n            sameDay : '[Өнөөдөр] LT',\n            nextDay : '[Маргааш] LT',\n            nextWeek : '[Ирэх] dddd LT',\n            lastDay : '[Өчигдөр] LT',\n            lastWeek : '[Өнгөрсөн] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s дараа',\n            past : '%s өмнө',\n            s : translate$7,\n            ss : translate$7,\n            m : translate$7,\n            mm : translate$7,\n            h : translate$7,\n            hh : translate$7,\n            d : translate$7,\n            dd : translate$7,\n            M : translate$7,\n            MM : translate$7,\n            y : translate$7,\n            yy : translate$7\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$b = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap$a = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture)\n    {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's': output = 'काही सेकंद'; break;\n                case 'ss': output = '%d सेकंद'; break;\n                case 'm': output = 'एक मिनिट'; break;\n                case 'mm': output = '%d मिनिटे'; break;\n                case 'h': output = 'एक तास'; break;\n                case 'hh': output = '%d तास'; break;\n                case 'd': output = 'एक दिवस'; break;\n                case 'dd': output = '%d दिवस'; break;\n                case 'M': output = 'एक महिना'; break;\n                case 'MM': output = '%d महिने'; break;\n                case 'y': output = 'एक वर्ष'; break;\n                case 'yy': output = '%d वर्षे'; break;\n            }\n        }\n        else {\n            switch (string) {\n                case 's': output = 'काही सेकंदां'; break;\n                case 'ss': output = '%d सेकंदां'; break;\n                case 'm': output = 'एका मिनिटा'; break;\n                case 'mm': output = '%d मिनिटां'; break;\n                case 'h': output = 'एका तासा'; break;\n                case 'hh': output = '%d तासां'; break;\n                case 'd': output = 'एका दिवसा'; break;\n                case 'dd': output = '%d दिवसां'; break;\n                case 'M': output = 'एका महिन्या'; break;\n                case 'MM': output = '%d महिन्यां'; break;\n                case 'y': output = 'एका वर्षा'; break;\n                case 'yy': output = '%d वर्षां'; break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    hooks.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm वाजता',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$a[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$b[match];\n            });\n        },\n        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात्री') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळी') {\n                return hour;\n            } else if (meridiem === 'दुपारी') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'सायंकाळी') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mt', {\n        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Illum fil-]LT',\n            nextDay : '[Għada fil-]LT',\n            nextWeek : 'dddd [fil-]LT',\n            lastDay : '[Il-bieraħ fil-]LT',\n            lastWeek : 'dddd [li għadda] [fil-]LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'f’ %s',\n            past : '%s ilu',\n            s : 'ftit sekondi',\n            ss : '%d sekondi',\n            m : 'minuta',\n            mm : '%d minuti',\n            h : 'siegħa',\n            hh : '%d siegħat',\n            d : 'ġurnata',\n            dd : '%d ġranet',\n            M : 'xahar',\n            MM : '%d xhur',\n            y : 'sena',\n            yy : '%d sni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$c = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap$b = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n\n    hooks.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss : '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap$b[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$c[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'noen sekunder',\n            ss : '%d sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$d = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap$c = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    hooks.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$c[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$d[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोलि] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडि',\n            s : 'केही क्षण',\n            ss : '%d सेकेण्ड',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex$5 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl-be', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$1[m.month()];\n            } else {\n                return monthsShortWithDots$1[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$5,\n        monthsShortRegex: monthsRegex$5,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse$4,\n        longMonthsParse : monthsParse$4,\n        shortMonthsParse : monthsParse$4,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$2 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$2 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex$6 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$2[m.month()];\n            } else {\n                return monthsShortWithDots$2[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$6,\n        monthsShortRegex: monthsRegex$6,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse$5,\n        longMonthsParse : monthsParse$5,\n        shortMonthsParse : monthsParse$5,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s sidan',\n            s : 'nokre sekund',\n            ss : '%d sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$e = {\n        '1': '੧',\n        '2': '੨',\n        '3': '੩',\n        '4': '੪',\n        '5': '੫',\n        '6': '੬',\n        '7': '੭',\n        '8': '੮',\n        '9': '੯',\n        '0': '੦'\n    },\n    numberMap$d = {\n        '੧': '1',\n        '੨': '2',\n        '੩': '3',\n        '੪': '4',\n        '੫': '5',\n        '੬': '6',\n        '੭': '7',\n        '੮': '8',\n        '੯': '9',\n        '੦': '0'\n    };\n\n    hooks.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm ਵਜੇ',\n            LTS : 'A h:mm:ss ਵਜੇ',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n        },\n        calendar : {\n            sameDay : '[ਅਜ] LT',\n            nextDay : '[ਕਲ] LT',\n            nextWeek : '[ਅਗਲਾ] dddd, LT',\n            lastDay : '[ਕਲ] LT',\n            lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ਵਿੱਚ',\n            past : '%s ਪਿਛਲੇ',\n            s : 'ਕੁਝ ਸਕਿੰਟ',\n            ss : '%d ਸਕਿੰਟ',\n            m : 'ਇਕ ਮਿੰਟ',\n            mm : '%d ਮਿੰਟ',\n            h : 'ਇੱਕ ਘੰਟਾ',\n            hh : '%d ਘੰਟੇ',\n            d : 'ਇੱਕ ਦਿਨ',\n            dd : '%d ਦਿਨ',\n            M : 'ਇੱਕ ਮਹੀਨਾ',\n            MM : '%d ਮਹੀਨੇ',\n            y : 'ਇੱਕ ਸਾਲ',\n            yy : '%d ਸਾਲ'\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap$d[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$e[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n    function plural$3(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n    function translate$8(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural$3(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural$3(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\n            case 'hh':\n                return result + (plural$3(number) ? 'godziny' : 'godzin');\n            case 'MM':\n                return result + (plural$3(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural$3(number) ? 'lata' : 'lat');\n        }\n    }\n\n    hooks.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (format === '') {\n                // Hack: if format empty we know this is used to generate\n                // RegExp by moment. Give then back both valid forms of months\n                // in RegExp ready format.\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            ss : translate$8,\n            m : translate$8,\n            mm : translate$8,\n            h : translate$8,\n            hh : translate$8,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate$8,\n            y : 'rok',\n            yy : translate$8\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt-br', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'poucos segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithPlural$2(number, withoutSuffix, key) {\n        var format = {\n                'ss': 'secunde',\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    hooks.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            ss : relativeTimeWithPlural$2,\n            m : 'un minut',\n            mm : relativeTimeWithPlural$2,\n            h : 'o oră',\n            hh : relativeTimeWithPlural$2,\n            d : 'o zi',\n            dd : relativeTimeWithPlural$2,\n            M : 'o lună',\n            MM : relativeTimeWithPlural$2,\n            y : 'un an',\n            yy : relativeTimeWithPlural$2\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function plural$4(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural$3(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural$4(format[key], +number);\n        }\n    }\n    var monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    hooks.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse$6,\n        longMonthsParse : monthsParse$6,\n        shortMonthsParse : monthsParse$6,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural$3,\n            m : relativeTimeWithPlural$3,\n            mm : relativeTimeWithPlural$3,\n            h : 'час',\n            hh : relativeTimeWithPlural$3,\n            d : 'день',\n            dd : relativeTimeWithPlural$3,\n            M : 'месяц',\n            MM : relativeTimeWithPlural$3,\n            y : 'год',\n            yy : relativeTimeWithPlural$3\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$8 = [\n        'جنوري',\n        'فيبروري',\n        'مارچ',\n        'اپريل',\n        'مئي',\n        'جون',\n        'جولاءِ',\n        'آگسٽ',\n        'سيپٽمبر',\n        'آڪٽوبر',\n        'نومبر',\n        'ڊسمبر'\n    ];\n    var days$1 = [\n        'آچر',\n        'سومر',\n        'اڱارو',\n        'اربع',\n        'خميس',\n        'جمع',\n        'ڇنڇر'\n    ];\n\n    hooks.defineLocale('sd', {\n        months : months$8,\n        monthsShort : months$8,\n        weekdays : days$1,\n        weekdaysShort : days$1,\n        weekdaysMin : days$1,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[اڄ] LT',\n            nextDay : '[سڀاڻي] LT',\n            nextWeek : 'dddd [اڳين هفتي تي] LT',\n            lastDay : '[ڪالهه] LT',\n            lastWeek : '[گزريل هفتي] dddd [تي] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s پوء',\n            past : '%s اڳ',\n            s : 'چند سيڪنڊ',\n            ss : '%d سيڪنڊ',\n            m : 'هڪ منٽ',\n            mm : '%d منٽ',\n            h : 'هڪ ڪلاڪ',\n            hh : '%d ڪلاڪ',\n            d : 'هڪ ڏينهن',\n            dd : '%d ڏينهن',\n            M : 'هڪ مهينو',\n            MM : '%d مهينا',\n            y : 'هڪ سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('se', {\n        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'MMMM D. [b.] YYYY',\n            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s geažes',\n            past : 'maŋit %s',\n            s : 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m : 'okta minuhta',\n            mm : '%d minuhtat',\n            h : 'okta diimmu',\n            hh : '%d diimmut',\n            d : 'okta beaivi',\n            dd : '%d beaivvit',\n            M : 'okta mánnu',\n            MM : '%d mánut',\n            y : 'okta jahki',\n            yy : '%d jagit'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    /*jshint -W100*/\n    hooks.defineLocale('si', {\n        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'a h:mm',\n            LTS : 'a h:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY MMMM D',\n            LLL : 'YYYY MMMM D, a h:mm',\n            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n        },\n        calendar : {\n            sameDay : '[අද] LT[ට]',\n            nextDay : '[හෙට] LT[ට]',\n            nextWeek : 'dddd LT[ට]',\n            lastDay : '[ඊයේ] LT[ට]',\n            lastWeek : '[පසුගිය] dddd LT[ට]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sකින්',\n            past : '%sකට පෙර',\n            s : 'තත්පර කිහිපය',\n            ss : 'තත්පර %d',\n            m : 'මිනිත්තුව',\n            mm : 'මිනිත්තු %d',\n            h : 'පැය',\n            hh : 'පැය %d',\n            d : 'දිනය',\n            dd : 'දින %d',\n            M : 'මාසය',\n            MM : 'මාස %d',\n            y : 'වසර',\n            yy : 'වසර %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal : function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM : function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$9 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural$5(n) {\n        return (n > 1) && (n < 5);\n    }\n    function translate$9(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n                break;\n        }\n    }\n\n    hooks.defineLocale('sk', {\n        months : months$9,\n        monthsShort : monthsShort$6,\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate$9,\n            ss : translate$9,\n            m : translate$9,\n            mm : translate$9,\n            h : translate$9,\n            hh : translate$9,\n            d : translate$9,\n            dd : translate$9,\n            M : translate$9,\n            MM : translate$9,\n            y : translate$9,\n            yy : translate$9\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$6(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : 'pred %s',\n            s      : processRelativeTime$6,\n            ss     : processRelativeTime$6,\n            m      : processRelativeTime$6,\n            mm     : processRelativeTime$6,\n            h      : processRelativeTime$6,\n            hh     : processRelativeTime$6,\n            d      : processRelativeTime$6,\n            dd     : processRelativeTime$6,\n            M      : processRelativeTime$6,\n            MM     : processRelativeTime$6,\n            y      : processRelativeTime$6,\n            yy     : processRelativeTime$6\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            ss : '%d sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var translator$1 = {\n        words: { //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator$1.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator$1.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    hooks.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            ss     : translator$1.translate,\n            m      : translator$1.translate,\n            mm     : translator$1.translate,\n            h      : translator$1.translate,\n            hh     : translator$1.translate,\n            d      : 'дан',\n            dd     : translator$1.translate,\n            M      : 'месец',\n            MM     : translator$1.translate,\n            y      : 'годину',\n            yy     : translator$1.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var translator$2 = {\n        words: { //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator$2.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator$2.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    hooks.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator$2.translate,\n            m      : translator$2.translate,\n            mm     : translator$2.translate,\n            h      : translator$2.translate,\n            hh     : translator$2.translate,\n            d      : 'dan',\n            dd     : translator$2.translate,\n            M      : 'mesec',\n            MM     : translator$2.translate,\n            y      : 'godinu',\n            yy     : translator$2.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ss', {\n        months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Namuhla nga] LT',\n            nextDay : '[Kusasa nga] LT',\n            nextWeek : 'dddd [nga] LT',\n            lastDay : '[Itolo nga] LT',\n            lastWeek : 'dddd [leliphelile] [nga] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'nga %s',\n            past : 'wenteka nga %s',\n            s : 'emizuzwana lomcane',\n            ss : '%d mzuzwana',\n            m : 'umzuzu',\n            mm : '%d emizuzu',\n            h : 'lihora',\n            hh : '%d emahora',\n            d : 'lilanga',\n            dd : '%d emalanga',\n            M : 'inyanga',\n            MM : '%d tinyanga',\n            y : 'umnyaka',\n            yy : '%d iminyaka'\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : '%d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            ss : '%d sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sw', {\n        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[leo saa] LT',\n            nextDay : '[kesho saa] LT',\n            nextWeek : '[wiki ijayo] dddd [saat] LT',\n            lastDay : '[jana] LT',\n            lastWeek : '[wiki iliyopita] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s baadaye',\n            past : 'tokea %s',\n            s : 'hivi punde',\n            ss : 'sekunde %d',\n            m : 'dakika moja',\n            mm : 'dakika %d',\n            h : 'saa limoja',\n            hh : 'masaa %d',\n            d : 'siku moja',\n            dd : 'masiku %d',\n            M : 'mwezi mmoja',\n            MM : 'miezi %d',\n            y : 'mwaka mmoja',\n            yy : 'miaka %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$f = {\n        '1': '௧',\n        '2': '௨',\n        '3': '௩',\n        '4': '௪',\n        '5': '௫',\n        '6': '௬',\n        '7': '௭',\n        '8': '௮',\n        '9': '௯',\n        '0': '௦'\n    }, numberMap$e = {\n        '௧': '1',\n        '௨': '2',\n        '௩': '3',\n        '௪': '4',\n        '௫': '5',\n        '௬': '6',\n        '௭': '7',\n        '௮': '8',\n        '௯': '9',\n        '௦': '0'\n    };\n\n    hooks.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, HH:mm',\n            LLLL : 'dddd, D MMMM YYYY, HH:mm'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            ss : '%d விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap$e[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$f[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை';  // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('te', {\n        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[నేడు] LT',\n            nextDay : '[రేపు] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[నిన్న] LT',\n            lastWeek : '[గత] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s లో',\n            past : '%s క్రితం',\n            s : 'కొన్ని క్షణాలు',\n            ss : '%d సెకన్లు',\n            m : 'ఒక నిమిషం',\n            mm : '%d నిమిషాలు',\n            h : 'ఒక గంట',\n            hh : '%d గంటలు',\n            d : 'ఒక రోజు',\n            dd : '%d రోజులు',\n            M : 'ఒక నెల',\n            MM : '%d నెలలు',\n            y : 'ఒక సంవత్సరం',\n            yy : '%d సంవత్సరాలు'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n        ordinal : '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tet', {\n        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'iha %s',\n            past : '%s liuba',\n            s : 'minutu balun',\n            ss : 'minutu %d',\n            m : 'minutu ida',\n            mm : 'minutu %d',\n            h : 'oras ida',\n            hh : 'oras %d',\n            d : 'loron ida',\n            dd : 'loron %d',\n            M : 'fulan ida',\n            MM : 'fulan %d',\n            y : 'tinan ida',\n            yy : 'tinan %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$3 = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум'\n    };\n\n    hooks.defineLocale('tg', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Имрӯз соати] LT',\n            nextDay : '[Пагоҳ соати] LT',\n            lastDay : '[Дирӯз соати] LT',\n            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'баъди %s',\n            past : '%s пеш',\n            s : 'якчанд сония',\n            m : 'як дақиқа',\n            mm : '%d дақиқа',\n            h : 'як соат',\n            hh : '%d соат',\n            d : 'як рӯз',\n            dd : '%d рӯз',\n            M : 'як моҳ',\n            MM : '%d моҳ',\n            y : 'як сол',\n            yy : '%d сол'\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$3[number] || suffixes$3[a] || suffixes$3[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา H:mm',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            ss : '%d วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY HH:mm',\n            LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            ss : '%d segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'leS' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'waQ' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'nem' :\n        time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'Hu’' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'wen' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'ben' :\n        time + ' ret';\n        return time;\n    }\n\n    function translate$a(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n        }\n        return (word === '') ? 'pagh' : word;\n    }\n\n    hooks.defineLocale('tlh', {\n        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : translateFuture,\n            past : translatePast,\n            s : 'puS lup',\n            ss : translate$a,\n            m : 'wa’ tup',\n            mm : translate$a,\n            h : 'wa’ rep',\n            hh : translate$a,\n            d : 'wa’ jaj',\n            dd : translate$a,\n            M : 'wa’ jar',\n            MM : translate$a,\n            y : 'wa’ DIS',\n            yy : translate$a\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    var suffixes$4 = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n        6: '\\'ncı',\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    hooks.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[gelecek] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            ss : '%d saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {  // special case for zero\n                        return number + '\\'ıncı';\n                    }\n                    var a = number % 10,\n                        b = number % 100 - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$4[a] || suffixes$4[b] || suffixes$4[c]);\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    hooks.defineLocale('tzl', {\n        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM [dallas] YYYY',\n            LLL : 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM : function (input) {\n            return 'd\\'o' === input.toLowerCase();\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'd\\'o' : 'D\\'O';\n            } else {\n                return isLower ? 'd\\'a' : 'D\\'A';\n            }\n        },\n        calendar : {\n            sameDay : '[oxhi à] LT',\n            nextDay : '[demà à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[ieiri à] LT',\n            lastWeek : '[sür el] dddd [lasteu à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'osprei %s',\n            past : 'ja%s',\n            s : processRelativeTime$7,\n            ss : processRelativeTime$7,\n            m : processRelativeTime$7,\n            mm : processRelativeTime$7,\n            h : processRelativeTime$7,\n            hh : processRelativeTime$7,\n            d : processRelativeTime$7,\n            dd : processRelativeTime$7,\n            M : processRelativeTime$7,\n            MM : processRelativeTime$7,\n            y : processRelativeTime$7,\n            yy : processRelativeTime$7\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    function processRelativeTime$7(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['viensas secunds', '\\'iensas secunds'],\n            'ss': [number + ' secunds', '' + number + ' secunds'],\n            'm': ['\\'n míut', '\\'iens míut'],\n            'mm': [number + ' míuts', '' + number + ' míuts'],\n            'h': ['\\'n þora', '\\'iensa þora'],\n            'hh': [number + ' þoras', '' + number + ' þoras'],\n            'd': ['\\'n ziua', '\\'iensa ziua'],\n            'dd': [number + ' ziuas', '' + number + ' ziuas'],\n            'M': ['\\'n mes', '\\'iens mes'],\n            'MM': [number + ' mesen', '' + number + ' mesen'],\n            'y': ['\\'n ar', '\\'iens ar'],\n            'yy': [number + ' ars', '' + number + ' ars']\n        };\n        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n    }\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            ss : '%d imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            ss : '%d ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    //! moment.js language configuration\n\n    hooks.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل'\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    function plural$6(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural$4(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural$6(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (m === true) {\n            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    hooks.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural$4,\n            m : relativeTimeWithPlural$4,\n            mm : relativeTimeWithPlural$4,\n            h : 'годину',\n            hh : relativeTimeWithPlural$4,\n            d : 'день',\n            dd : relativeTimeWithPlural$4,\n            M : 'місяць',\n            MM : relativeTimeWithPlural$4,\n            y : 'рік',\n            yy : relativeTimeWithPlural$4\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    var months$a = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر'\n    ];\n    var days$2 = [\n        'اتوار',\n        'پیر',\n        'منگل',\n        'بدھ',\n        'جمعرات',\n        'جمعہ',\n        'ہفتہ'\n    ];\n\n    hooks.defineLocale('ur', {\n        months : months$a,\n        monthsShort : months$a,\n        weekdays : days$2,\n        weekdaysShort : days$2,\n        weekdaysMin : days$2,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[آج بوقت] LT',\n            nextDay : '[کل بوقت] LT',\n            nextWeek : 'dddd [بوقت] LT',\n            lastDay : '[گذشتہ روز بوقت] LT',\n            lastWeek : '[گذشتہ] dddd [بوقت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s بعد',\n            past : '%s قبل',\n            s : 'چند سیکنڈ',\n            ss : '%d سیکنڈ',\n            m : 'ایک منٹ',\n            mm : '%d منٹ',\n            h : 'ایک گھنٹہ',\n            hh : '%d گھنٹے',\n            d : 'ایک دن',\n            dd : '%d دن',\n            M : 'ایک ماہ',\n            MM : '%d ماہ',\n            y : 'ایک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz-latn', {\n        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bugun soat] LT [da]',\n            nextDay : '[Ertaga] LT [da]',\n            nextWeek : 'dddd [kuni soat] LT [da]',\n            lastDay : '[Kecha soat] LT [da]',\n            lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Yaqin %s ichida',\n            past : 'Bir necha %s oldin',\n            s : 'soniya',\n            ss : '%d soniya',\n            m : 'bir daqiqa',\n            mm : '%d daqiqa',\n            h : 'bir soat',\n            hh : '%d soat',\n            d : 'bir kun',\n            dd : '%d kun',\n            M : 'bir oy',\n            MM : '%d oy',\n            y : 'bir yil',\n            yy : '%d yil'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            ss : '%d фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /sa|ch/i,\n        isPM : function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY HH:mm',\n            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            ss : '%d giây' ,\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('x-pseudo', {\n        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[T~ódá~ý át] LT',\n            nextDay : '[T~ómó~rró~w át] LT',\n            nextWeek : 'dddd [át] LT',\n            lastDay : '[Ý~ést~érdá~ý át] LT',\n            lastWeek : '[L~ást] dddd [át] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'í~ñ %s',\n            past : '%s á~gó',\n            s : 'á ~féw ~sécó~ñds',\n            ss : '%d s~écóñ~ds',\n            m : 'á ~míñ~úté',\n            mm : '%d m~íñú~tés',\n            h : 'á~ñ hó~úr',\n            hh : '%d h~óúrs',\n            d : 'á ~dáý',\n            dd : '%d d~áýs',\n            M : 'á ~móñ~th',\n            MM : '%d m~óñt~hs',\n            y : 'á ~ýéár',\n            yy : '%d ý~éárs'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('yo', {\n        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Ònì ni] LT',\n            nextDay : '[Ọ̀la ni] LT',\n            nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n            lastDay : '[Àna ni] LT',\n            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ní %s',\n            past : '%s kọjá',\n            s : 'ìsẹjú aayá die',\n            ss :'aayá %d',\n            m : 'ìsẹjú kan',\n            mm : 'ìsẹjú %d',\n            h : 'wákati kan',\n            hh : 'wákati %d',\n            d : 'ọjọ́ kan',\n            dd : 'ọjọ́ %d',\n            M : 'osù kan',\n            MM : 'osù %d',\n            y : 'ọdún kan',\n            yy : 'ọdún %d'\n        },\n        dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n        ordinal : 'ọjọ́ %d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日Ah点mm分',\n            LLLL : 'YYYY年M月D日ddddAh点mm分',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            ss : '%d 秒',\n            m : '1 分钟',\n            mm : '%d 分钟',\n            h : '1 小时',\n            hh : '%d 小时',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 个月',\n            MM : '%d 个月',\n            y : '1 年',\n            yy : '%d 年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-hk', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天] LT',\n            nextDay : '[明天] LT',\n            nextWeek : '[下]dddd LT',\n            lastDay : '[昨天] LT',\n            lastWeek : '[上]dddd LT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    hooks.locale('en');\n\n    return hooks;\n\n})));\n"]}